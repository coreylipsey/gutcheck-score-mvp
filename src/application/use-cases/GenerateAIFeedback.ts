import { AssessmentResponse } from '../../domain/entities/Assessment';
import { AssessmentCategory } from '../../domain/value-objects/Category';
import { IAIScoringService } from '../../domain/repositories/IAIScoringService';

export interface GenerateAIFeedbackRequest {
  responses: AssessmentResponse[];
  scores: Record<AssessmentCategory, number>;
  industry?: string;
  location?: string;
}

export interface AIFeedback {
  feedback: string;
  strengths: string;
  focusAreas: string;
  nextSteps: string;
}

export class GenerateAIFeedback {
  constructor(private readonly aiService: IAIScoringService) {}

  async execute(request: GenerateAIFeedbackRequest): Promise<AIFeedback> {
    try {
      const feedback = await this.aiService.generateFeedback(
        request.responses.map(r => ({
          questionId: r.questionId,
          response: r.response,
          category: r.category,
        })),
        request.scores,
        request.industry,
        request.location
      );
      return feedback;
    } catch (error) {
      console.error('AI feedback generation failed:', error);
      // Return default feedback on failure
      return {
        feedback: "Your personalized feedback will be generated by AI based on your responses.",
        strengths: "Your top strength will be identified based on your assessment scores.",
        focusAreas: "Your priority focus area will be determined from your assessment results.",
        nextSteps: "Recommended next steps will be provided based on your profile."
      };
    }
  }
} 