2025-08-05T18:09:38.795Z CLI info     Config : {"userName":"coreylipsey_CicmlG","accessKey":"qRbyY1vhLqJDjNwJqN7E","platforms":[{"os":"Windows","osVersion":11,"browserName":"chrome","browserVersion":"latest"},{"os":"OS X","osVersion":"Ventura","browserName":"playwright-webkit","browserVersion":"latest"},{"deviceName":"Samsung Galaxy S23 Ultra","browserName":"chrome","osVersion":13}]}
2025-08-05T18:09:38.844Z CLI info [testhub:module]  [coreylipsey_CicmlG]   [07f841b0-0068-4a36-b3d4-3613d447094a]  Starting testhub from 26381:0
2025-08-05T18:09:38.845Z CLI info [testhub:module]  [coreylipsey_CicmlG]   [07f841b0-0068-4a36-b3d4-3613d447094a]  startBuild: payload=

{"started_at":"2025-08-05T18:09:38.845Z","host_info":{"hostname":"Coreys-MBP","platform":"darwin","type":"Darwin","version":"Darwin Kernel Version 23.6.0: Mon Jul 29 21:13:00 PDT 2024; root:xnu-10063.141.2~1/RELEASE_X86_64","arch":"x64"},"ci_info":{"build_number":null},"version_control":{"name":"git","sha":"969b256d6d4e2c4c6fe0c1ecfb8c00ae004a8510","short_sha":"969b256d6d","branch":"main","tag":null,"committer":"Corey Lipsey <your.email@example.com>","committer_date":"2025-08-05T16:32:35.000Z","author":"Corey Lipsey <your.email@example.com>","author_date":"2025-08-05T16:32:35.000Z","commit_message":"fix: Resolve ESLint errors and TypeScript issues - Fix all TypeScript 'any' type errors - Remove unused imports and variables - Improve type safety across the codebase - All linting now passes successfully","root":"/Users/coreylipsey/gutcheck-score-mvp","common_git_dir":"/Users/coreylipsey/gutcheck-score-mvp/.git","worktree_git_dir":"/Users/coreylipsey/gutcheck-score-mvp/.git","last_tag":null,"commits_since_last_tag":0,"remotes":[{"name":"origin","url":"https://github.com/coreylipsey/gutcheck-score-mvp.git"}]},"project_name":"","build_run_identifier":null,"description":"","tags":[],"failed_tests_rerun":false,"accessibility":{"settings":{}},"framework_details":{"frameworkName":"Playwright","frameworkVersion":"1.54.2","sdkVersion":"1.40.6","cliVersion":"1.6.6","language":"javascript","testFramework":{"name":"Playwright","version":"1.54.2"}},"product_map":{"observability":true,"accessibility":null,"percy":false,"automate":true,"app_automate":false},"browserstackAutomation":true,"test_orchestration":{}}
2025-08-05T18:09:38.846Z CLI info  [coreylipsey_CicmlG]   [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:09:39.400Z CLI info [testhub:module]  [coreylipsey_CicmlG]   [07f841b0-0068-4a36-b3d4-3613d447094a]  startBuild: response=0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn
2025-08-05T18:09:39.402Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://api.browserstack.com
2025-08-05T18:09:44.316Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making GET request to https://hub.browserstack.com
2025-08-05T18:09:44.410Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making GET request to https://hub-use.browserstack.com
2025-08-05T18:09:44.411Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making GET request to https://hub-usw.browserstack.com
2025-08-05T18:09:44.412Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making GET request to https://hub-euw.browserstack.com
2025-08-05T18:09:49.430Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'c5e8199f-fbce-401f-a642-2d427fb36ee8',
    name: 'should maintain consistent button styling and behavior',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        `    const buttons = page.locator('button, [role="button"], input[type="submit"]');\n` +
        '    for (let i = 0; i < Math.min(await buttons.count(), 3); i++) {\n' +
        '      const button = buttons.nth(i);\n' +
        '\n' +
        '      // Check button styling\n' +
        '      const styles = await button.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          backgroundColor: computed.backgroundColor,\n' +
        '          color: computed.color,\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding,\n' +
        '          cursor: computed.cursor\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have proper button styling\n' +
        "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '\n' +
        '      // Check button text is readable\n' +
        '      const buttonText = await button.textContent();\n' +
        '      if (buttonText && buttonText.trim()) {\n' +
        '        (0, _test.expect)(buttonText.trim().length).toBeGreaterThan(0);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent button styling and behavior',
    scope: 'should maintain consistent button styling and behavior',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:09:49.374Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile assessment-flow.spec.ts Assessment Flow Tests should maintain consistent button styling and behavior'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:09:49.443Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b4ee5ff7-b606-49b4-aeff-bc1dee0291cf',
    name: 'should handle form inputs consistently across browsers',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for form inputs (radio buttons, checkboxes, text inputs)\n' +
        "    const inputs = page.locator('input, textarea, select');\n" +
        '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
        '      const input = inputs.nth(i);\n' +
        '\n' +
        '      // Check input is visible and interactive\n' +
        '      await (0, _test.expect)(input).toBeVisible();\n' +
        "      const inputType = await input.getAttribute('type');\n" +
        "      if (inputType === 'radio' || inputType === 'checkbox') {\n" +
        '        // Test radio/checkbox functionality\n' +
        '        await input.click();\n' +
        '\n' +
        '        // Verify selection state\n' +
        '        const isChecked = await input.isChecked();\n' +
        '        (0, _test.expect)(isChecked).toBe(true);\n' +
        "      } else if (inputType === 'text' || inputType === 'textarea') {\n" +
        '        // Test text input functionality\n' +
        "        await input.fill('Test input');\n" +
        '        const value = await input.inputValue();\n' +
        "        (0, _test.expect)(value).toBe('Test input');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form inputs consistently across browsers',
    scope: 'should handle form inputs consistently across browsers',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:09:49.403Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile assessment-flow.spec.ts Assessment Flow Tests should handle form inputs consistently across browsers'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:09:49.447Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '7ff4f37e-ca98-4a45-952f-a5c0cede60c6',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'b4ee5ff7-b606-49b4-aeff-bc1dee0291cf',
    body: { lang: 'node', code: null },
    scope: 'should handle form inputs consistently across browsers',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    started_at: '2025-08-05T18:09:49.421Z'
  }
} to 26381:0
2025-08-05T18:09:49.448Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'e69ceab9-3376-4190-929b-a940f0d564ec',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'c5e8199f-fbce-401f-a642-2d427fb36ee8',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent button styling and behavior',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    started_at: '2025-08-05T18:09:49.417Z'
  }
} to 26381:0
2025-08-05T18:09:49.474Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '3e0a16a3-de3f-4f74-825b-dd48bd7091e2',
    name: 'should display assessment questions consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Wait for assessment content to load\n' +
        `    await page.waitForSelector('[data-testid="assessment-question"], .question, h1, h2', {\n` +
        '      timeout: 10000\n' +
        '    });\n' +
        '\n' +
        '    // Check that questions are visible and properly styled\n' +
        `    const questions = page.locator('[data-testid="assessment-question"], .question, h1, h2').filter({\n` +
        '      hasText: /./\n' +
        '    });\n' +
        '    (0, _test.expect)(await questions.count()).toBeGreaterThan(0);\n' +
        '    for (let i = 0; i < Math.min(await questions.count(), 3); i++) {\n' +
        '      const question = questions.nth(i);\n' +
        '\n' +
        '      // Check visibility\n' +
        '      await (0, _test.expect)(question).toBeVisible();\n' +
        '\n' +
        '      // Check styling\n' +
        '      const styles = await question.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          fontSize: computed.fontSize,\n' +
        '          fontWeight: computed.fontWeight,\n' +
        '          color: computed.color,\n' +
        '          lineHeight: computed.lineHeight\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have readable text styling\n' +
        '      (0, _test.expect)(parseFloat(styles.fontSize)).toBeGreaterThan(12);\n' +
        "      (0, _test.expect)(styles.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display assessment questions consistently',
    scope: 'should display assessment questions consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:09:49.431Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile assessment-flow.spec.ts Assessment Flow Tests should display assessment questions consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:09:49.476Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '06734d26-7d1c-4ecf-86b2-5646d62d02a4',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '3e0a16a3-de3f-4f74-825b-dd48bd7091e2',
    body: { lang: 'node', code: null },
    scope: 'should display assessment questions consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    started_at: '2025-08-05T18:09:49.439Z'
  }
} to 26381:0
2025-08-05T18:09:51.407Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'c5e8199f-fbce-401f-a642-2d427fb36ee8',
      name: 'should maintain consistent button styling and behavior',
      body: [Object],
      identifier: 'should maintain consistent button styling and behavior',
      scope: 'should maintain consistent button styling and behavior',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:09:49.374Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b4ee5ff7-b606-49b4-aeff-bc1dee0291cf',
      name: 'should handle form inputs consistently across browsers',
      body: [Object],
      identifier: 'should handle form inputs consistently across browsers',
      scope: 'should handle form inputs consistently across browsers',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:09:49.403Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '7ff4f37e-ca98-4a45-952f-a5c0cede60c6',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'b4ee5ff7-b606-49b4-aeff-bc1dee0291cf',
      body: [Object],
      scope: 'should handle form inputs consistently across browsers',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      started_at: '2025-08-05T18:09:49.421Z'
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'e69ceab9-3376-4190-929b-a940f0d564ec',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'c5e8199f-fbce-401f-a642-2d427fb36ee8',
      body: [Object],
      scope: 'should maintain consistent button styling and behavior',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      started_at: '2025-08-05T18:09:49.417Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '3e0a16a3-de3f-4f74-825b-dd48bd7091e2',
      name: 'should display assessment questions consistently',
      body: [Object],
      identifier: 'should display assessment questions consistently',
      scope: 'should display assessment questions consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:09:49.431Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '06734d26-7d1c-4ecf-86b2-5646d62d02a4',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '3e0a16a3-de3f-4f74-825b-dd48bd7091e2',
      body: [Object],
      scope: 'should display assessment questions consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      started_at: '2025-08-05T18:09:49.439Z'
    }
  }
] to 26381:0
2025-08-05T18:09:51.409Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:09:57.664Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:09:49.439Z',
      uuid: '7ff4f37e-ca98-4a45-952f-a5c0cede60c6',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '7ff4f37e-ca98-4a45-952f-a5c0cede60c6'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:09:49.496Z',
      uuid: '7ff4f37e-ca98-4a45-952f-a5c0cede60c6',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '7ff4f37e-ca98-4a45-952f-a5c0cede60c6'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:09:49.553Z',
      uuid: '7ff4f37e-ca98-4a45-952f-a5c0cede60c6',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '7ff4f37e-ca98-4a45-952f-a5c0cede60c6'
    }
  ]
} to 26381:0
2025-08-05T18:09:57.676Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '7ff4f37e-ca98-4a45-952f-a5c0cede60c6',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'b4ee5ff7-b606-49b4-aeff-bc1dee0291cf',
    body: { lang: 'node', code: null },
    scope: 'should handle form inputs consistently across browsers',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    started_at: '2025-08-05T18:09:49.421Z',
    finished_at: '2025-08-05T18:09:57.639Z'
  }
} to 26381:0
2025-08-05T18:09:57.708Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b4ee5ff7-b606-49b4-aeff-bc1dee0291cf',
    name: 'should handle form inputs consistently across browsers',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for form inputs (radio buttons, checkboxes, text inputs)\n' +
        "    const inputs = page.locator('input, textarea, select');\n" +
        '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
        '      const input = inputs.nth(i);\n' +
        '\n' +
        '      // Check input is visible and interactive\n' +
        '      await (0, _test.expect)(input).toBeVisible();\n' +
        "      const inputType = await input.getAttribute('type');\n" +
        "      if (inputType === 'radio' || inputType === 'checkbox') {\n" +
        '        // Test radio/checkbox functionality\n' +
        '        await input.click();\n' +
        '\n' +
        '        // Verify selection state\n' +
        '        const isChecked = await input.isChecked();\n' +
        '        (0, _test.expect)(isChecked).toBe(true);\n' +
        "      } else if (inputType === 'text' || inputType === 'textarea') {\n" +
        '        // Test text input functionality\n' +
        "        await input.fill('Test input');\n" +
        '        const value = await input.inputValue();\n' +
        "        (0, _test.expect)(value).toBe('Test input');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form inputs consistently across browsers',
    scope: 'should handle form inputs consistently across browsers',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 62,
    started_at: '2025-08-05T18:09:49.403Z',
    finished_at: '2025-08-05T18:09:49.465Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile assessment-flow.spec.ts Assessment Flow Tests should handle form inputs consistently across browsers'
    },
    hooks: [ '7ff4f37e-ca98-4a45-952f-a5c0cede60c6' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:09:57.712Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:09:57.668Z',
      uuid: 'b4ee5ff7-b606-49b4-aeff-bc1dee0291cf',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b4ee5ff7-b606-49b4-aeff-bc1dee0291cf'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:09:57.670Z',
      uuid: 'b4ee5ff7-b606-49b4-aeff-bc1dee0291cf',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b4ee5ff7-b606-49b4-aeff-bc1dee0291cf'
    }
  ]
} to 26381:0
2025-08-05T18:09:57.781Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:09:49.420Z',
      uuid: 'e69ceab9-3376-4190-929b-a940f0d564ec',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'e69ceab9-3376-4190-929b-a940f0d564ec'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:09:49.481Z',
      uuid: 'e69ceab9-3376-4190-929b-a940f0d564ec',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'e69ceab9-3376-4190-929b-a940f0d564ec'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:09:49.518Z',
      uuid: 'e69ceab9-3376-4190-929b-a940f0d564ec',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'e69ceab9-3376-4190-929b-a940f0d564ec'
    }
  ]
} to 26381:0
2025-08-05T18:09:57.799Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:09:49.445Z',
      uuid: '06734d26-7d1c-4ecf-86b2-5646d62d02a4',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '06734d26-7d1c-4ecf-86b2-5646d62d02a4'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:09:49.498Z',
      uuid: '06734d26-7d1c-4ecf-86b2-5646d62d02a4',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '06734d26-7d1c-4ecf-86b2-5646d62d02a4'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:09:49.548Z',
      uuid: '06734d26-7d1c-4ecf-86b2-5646d62d02a4',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '06734d26-7d1c-4ecf-86b2-5646d62d02a4'
    }
  ]
} to 26381:0
2025-08-05T18:09:57.836Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'c5e8199f-fbce-401f-a642-2d427fb36ee8',
    name: 'should maintain consistent button styling and behavior',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        `    const buttons = page.locator('button, [role="button"], input[type="submit"]');\n` +
        '    for (let i = 0; i < Math.min(await buttons.count(), 3); i++) {\n' +
        '      const button = buttons.nth(i);\n' +
        '\n' +
        '      // Check button styling\n' +
        '      const styles = await button.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          backgroundColor: computed.backgroundColor,\n' +
        '          color: computed.color,\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding,\n' +
        '          cursor: computed.cursor\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have proper button styling\n' +
        "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '\n' +
        '      // Check button text is readable\n' +
        '      const buttonText = await button.textContent();\n' +
        '      if (buttonText && buttonText.trim()) {\n' +
        '        (0, _test.expect)(buttonText.trim().length).toBeGreaterThan(0);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent button styling and behavior',
    scope: 'should maintain consistent button styling and behavior',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 74,
    started_at: '2025-08-05T18:09:49.374Z',
    finished_at: '2025-08-05T18:09:49.448Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile assessment-flow.spec.ts Assessment Flow Tests should maintain consistent button styling and behavior'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:09:57.837Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:09:57.755Z',
      uuid: 'c5e8199f-fbce-401f-a642-2d427fb36ee8',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'c5e8199f-fbce-401f-a642-2d427fb36ee8'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:09:57.755Z',
      uuid: 'c5e8199f-fbce-401f-a642-2d427fb36ee8',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'c5e8199f-fbce-401f-a642-2d427fb36ee8'
    }
  ]
} to 26381:0
2025-08-05T18:09:57.841Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '3e0a16a3-de3f-4f74-825b-dd48bd7091e2',
    name: 'should display assessment questions consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Wait for assessment content to load\n' +
        `    await page.waitForSelector('[data-testid="assessment-question"], .question, h1, h2', {\n` +
        '      timeout: 10000\n' +
        '    });\n' +
        '\n' +
        '    // Check that questions are visible and properly styled\n' +
        `    const questions = page.locator('[data-testid="assessment-question"], .question, h1, h2').filter({\n` +
        '      hasText: /./\n' +
        '    });\n' +
        '    (0, _test.expect)(await questions.count()).toBeGreaterThan(0);\n' +
        '    for (let i = 0; i < Math.min(await questions.count(), 3); i++) {\n' +
        '      const question = questions.nth(i);\n' +
        '\n' +
        '      // Check visibility\n' +
        '      await (0, _test.expect)(question).toBeVisible();\n' +
        '\n' +
        '      // Check styling\n' +
        '      const styles = await question.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          fontSize: computed.fontSize,\n' +
        '          fontWeight: computed.fontWeight,\n' +
        '          color: computed.color,\n' +
        '          lineHeight: computed.lineHeight\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have readable text styling\n' +
        '      (0, _test.expect)(parseFloat(styles.fontSize)).toBeGreaterThan(12);\n' +
        "      (0, _test.expect)(styles.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display assessment questions consistently',
    scope: 'should display assessment questions consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 69,
    started_at: '2025-08-05T18:09:49.431Z',
    finished_at: '2025-08-05T18:09:49.500Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile assessment-flow.spec.ts Assessment Flow Tests should display assessment questions consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:09:57.842Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:09:57.772Z',
      uuid: '3e0a16a3-de3f-4f74-825b-dd48bd7091e2',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '3e0a16a3-de3f-4f74-825b-dd48bd7091e2'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:09:57.772Z',
      uuid: '3e0a16a3-de3f-4f74-825b-dd48bd7091e2',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '3e0a16a3-de3f-4f74-825b-dd48bd7091e2'
    }
  ]
} to 26381:0
2025-08-05T18:09:57.844Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'e69ceab9-3376-4190-929b-a940f0d564ec',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'c5e8199f-fbce-401f-a642-2d427fb36ee8',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent button styling and behavior',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    started_at: '2025-08-05T18:09:49.417Z',
    finished_at: '2025-08-05T18:09:57.731Z'
  }
} to 26381:0
2025-08-05T18:09:57.845Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '06734d26-7d1c-4ecf-86b2-5646d62d02a4',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '3e0a16a3-de3f-4f74-825b-dd48bd7091e2',
    body: { lang: 'node', code: null },
    scope: 'should display assessment questions consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    started_at: '2025-08-05T18:09:49.439Z',
    finished_at: '2025-08-05T18:09:57.750Z'
  }
} to 26381:0
2025-08-05T18:09:59.413Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '7ff4f37e-ca98-4a45-952f-a5c0cede60c6',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'b4ee5ff7-b606-49b4-aeff-bc1dee0291cf',
      body: [Object],
      scope: 'should handle form inputs consistently across browsers',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      started_at: '2025-08-05T18:09:49.421Z',
      finished_at: '2025-08-05T18:09:57.639Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b4ee5ff7-b606-49b4-aeff-bc1dee0291cf',
      name: 'should handle form inputs consistently across browsers',
      body: [Object],
      identifier: 'should handle form inputs consistently across browsers',
      scope: 'should handle form inputs consistently across browsers',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 62,
      started_at: '2025-08-05T18:09:49.403Z',
      finished_at: '2025-08-05T18:09:49.465Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'c5e8199f-fbce-401f-a642-2d427fb36ee8',
      name: 'should maintain consistent button styling and behavior',
      body: [Object],
      identifier: 'should maintain consistent button styling and behavior',
      scope: 'should maintain consistent button styling and behavior',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 74,
      started_at: '2025-08-05T18:09:49.374Z',
      finished_at: '2025-08-05T18:09:49.448Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '3e0a16a3-de3f-4f74-825b-dd48bd7091e2',
      name: 'should display assessment questions consistently',
      body: [Object],
      identifier: 'should display assessment questions consistently',
      scope: 'should display assessment questions consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 69,
      started_at: '2025-08-05T18:09:49.431Z',
      finished_at: '2025-08-05T18:09:49.500Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'e69ceab9-3376-4190-929b-a940f0d564ec',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'c5e8199f-fbce-401f-a642-2d427fb36ee8',
      body: [Object],
      scope: 'should maintain consistent button styling and behavior',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      started_at: '2025-08-05T18:09:49.417Z',
      finished_at: '2025-08-05T18:09:57.731Z'
    }
  },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '06734d26-7d1c-4ecf-86b2-5646d62d02a4',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '3e0a16a3-de3f-4f74-825b-dd48bd7091e2',
      body: [Object],
      scope: 'should display assessment questions consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      started_at: '2025-08-05T18:09:49.439Z',
      finished_at: '2025-08-05T18:09:57.750Z'
    }
  }
] to 26381:0
2025-08-05T18:09:59.415Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:10:02.600Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '7c6fd797-daad-46e8-a57b-06080d06b7ed',
    name: 'should maintain consistent loading states',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for loading indicators\n' +
        `    const loadingIndicators = page.locator('.loading, .spinner, [aria-busy="true"], .animate-spin');\n` +
        '    if ((await loadingIndicators.count()) > 0) {\n' +
        '      for (let i = 0; i < Math.min(await loadingIndicators.count(), 3); i++) {\n' +
        '        const loader = loadingIndicators.nth(i);\n' +
        '\n' +
        '        // Check loading indicator is visible\n' +
        '        await (0, _test.expect)(loader).toBeVisible();\n' +
        '\n' +
        '        // Check it has proper styling\n' +
        '        const styles = await loader.evaluate(el => {\n' +
        '          const computed = window.getComputedStyle(el);\n' +
        '          return {\n' +
        '            display: computed.display,\n' +
        '            visibility: computed.visibility\n' +
        '          };\n' +
        '        });\n' +
        "        (0, _test.expect)(styles.display).not.toBe('none');\n" +
        "        (0, _test.expect)(styles.visibility).not.toBe('hidden');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent loading states',
    scope: 'should maintain consistent loading states',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:10:02.512Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile assessment-flow.spec.ts Assessment Flow Tests should maintain consistent loading states'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:02.621Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b5634a6a-216a-49d3-9a4e-1a841f9f440b',
    name: 'should handle responsive design for assessment flow',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    const viewports = [{\n' +
        '      width: 375,\n' +
        '      height: 667,\n' +
        "      name: 'Mobile'\n" +
        '    }, {\n' +
        '      width: 768,\n' +
        '      height: 1024,\n' +
        "      name: 'Tablet'\n" +
        '    }, {\n' +
        '      width: 1024,\n' +
        '      height: 768,\n' +
        "      name: 'Desktop'\n" +
        '    }];\n' +
        '    for (const viewport of viewports) {\n' +
        '      await page.setViewportSize({\n' +
        '        width: viewport.width,\n' +
        '        height: viewport.height\n' +
        '      });\n' +
        '      await page.waitForTimeout(500);\n' +
        '\n' +
        '      // Check that assessment content is properly contained\n' +
        `      const container = page.locator('main, .container, .assessment-container, [role="main"]').first();\n` +
        '      if ((await container.count()) > 0) {\n' +
        '        const isVisible = await container.isVisible();\n' +
        '        (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        '        // Check no horizontal overflow\n' +
        '        const overflow = await page.evaluate(() => {\n' +
        '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
        '        });\n' +
        '        (0, _test.expect)(overflow).toBe(true);\n' +
        '      }\n' +
        '\n' +
        '      // Check that form elements are still accessible\n' +
        "      const inputs = page.locator('input, textarea, select');\n" +
        '      if ((await inputs.count()) > 0) {\n' +
        '        const firstInput = inputs.first();\n' +
        '        await (0, _test.expect)(firstInput).toBeVisible();\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle responsive design for assessment flow',
    scope: 'should handle responsive design for assessment flow',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:10:02.516Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile assessment-flow.spec.ts Assessment Flow Tests should handle responsive design for assessment flow'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:02.622Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'ebaced84-42da-4bf3-ba75-3d7bb1b64cef',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'b5634a6a-216a-49d3-9a4e-1a841f9f440b',
    body: { lang: 'node', code: null },
    scope: 'should handle responsive design for assessment flow',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    started_at: '2025-08-05T18:10:02.524Z'
  }
} to 26381:0
2025-08-05T18:10:02.623Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '369d737a-5d39-48fb-837d-db5ae30ca38a',
    name: 'should handle form validation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for submit buttons\n' +
        `    const submitButtons = page.locator('button[type="submit"], input[type="submit"], button:has-text("Submit"), button:has-text("Next")');\n` +
        '    if ((await submitButtons.count()) > 0) {\n' +
        '      const submitButton = submitButtons.first();\n' +
        '\n' +
        '      // Try to submit without filling required fields\n' +
        '      await submitButton.click();\n' +
        '\n' +
        '      // Wait for potential validation messages\n' +
        '      await page.waitForTimeout(1000);\n' +
        '\n' +
        '      // Check for validation messages\n' +
        `      const errorMessages = page.locator('.error, .validation-error, [role="alert"], .text-red-500, .text-red-600');\n` +
        '\n' +
        '      // If there are validation errors, they should be visible and styled consistently\n' +
        '      if ((await errorMessages.count()) > 0) {\n' +
        '        for (let i = 0; i < Math.min(await errorMessages.count(), 3); i++) {\n' +
        '          const error = errorMessages.nth(i);\n' +
        '          await (0, _test.expect)(error).toBeVisible();\n' +
        '\n' +
        '          // Check error styling\n' +
        '          const color = await error.evaluate(el => {\n' +
        '            return window.getComputedStyle(el).color;\n' +
        '          });\n' +
        '\n' +
        '          // Should have error color styling\n' +
        '          (0, _test.expect)(color).toMatch(/rgb\\(239, 68, 68\\)|rgb\\(220, 38, 38\\)|red/);\n' +
        '        }\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form validation consistently',
    scope: 'should handle form validation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:10:02.519Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile assessment-flow.spec.ts Assessment Flow Tests should handle form validation consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:02.624Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'def03702-93fc-4b99-bc4d-8124ede2d7b5',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '369d737a-5d39-48fb-837d-db5ae30ca38a',
    body: { lang: 'node', code: null },
    scope: 'should handle form validation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    started_at: '2025-08-05T18:10:02.535Z'
  }
} to 26381:0
2025-08-05T18:10:02.657Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'e55bcde2-a8ba-4b30-8e08-d11cf1ef295e',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '7c6fd797-daad-46e8-a57b-06080d06b7ed',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent loading states',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    started_at: '2025-08-05T18:10:02.532Z'
  }
} to 26381:0
2025-08-05T18:10:03.412Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '7c6fd797-daad-46e8-a57b-06080d06b7ed',
      name: 'should maintain consistent loading states',
      body: [Object],
      identifier: 'should maintain consistent loading states',
      scope: 'should maintain consistent loading states',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:10:02.512Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b5634a6a-216a-49d3-9a4e-1a841f9f440b',
      name: 'should handle responsive design for assessment flow',
      body: [Object],
      identifier: 'should handle responsive design for assessment flow',
      scope: 'should handle responsive design for assessment flow',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:10:02.516Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'ebaced84-42da-4bf3-ba75-3d7bb1b64cef',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'b5634a6a-216a-49d3-9a4e-1a841f9f440b',
      body: [Object],
      scope: 'should handle responsive design for assessment flow',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      started_at: '2025-08-05T18:10:02.524Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '369d737a-5d39-48fb-837d-db5ae30ca38a',
      name: 'should handle form validation consistently',
      body: [Object],
      identifier: 'should handle form validation consistently',
      scope: 'should handle form validation consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:10:02.519Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'def03702-93fc-4b99-bc4d-8124ede2d7b5',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '369d737a-5d39-48fb-837d-db5ae30ca38a',
      body: [Object],
      scope: 'should handle form validation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      started_at: '2025-08-05T18:10:02.535Z'
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'e55bcde2-a8ba-4b30-8e08-d11cf1ef295e',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '7c6fd797-daad-46e8-a57b-06080d06b7ed',
      body: [Object],
      scope: 'should maintain consistent loading states',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      started_at: '2025-08-05T18:10:02.532Z'
    }
  }
] to 26381:0
2025-08-05T18:10:03.414Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:10:10.919Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:02.527Z',
      uuid: 'ebaced84-42da-4bf3-ba75-3d7bb1b64cef',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'ebaced84-42da-4bf3-ba75-3d7bb1b64cef'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:02.557Z',
      uuid: 'ebaced84-42da-4bf3-ba75-3d7bb1b64cef',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'ebaced84-42da-4bf3-ba75-3d7bb1b64cef'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:02.608Z',
      uuid: 'ebaced84-42da-4bf3-ba75-3d7bb1b64cef',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'ebaced84-42da-4bf3-ba75-3d7bb1b64cef'
    }
  ]
} to 26381:0
2025-08-05T18:10:10.924Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'ebaced84-42da-4bf3-ba75-3d7bb1b64cef',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'b5634a6a-216a-49d3-9a4e-1a841f9f440b',
    body: { lang: 'node', code: null },
    scope: 'should handle responsive design for assessment flow',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    started_at: '2025-08-05T18:10:02.524Z',
    finished_at: '2025-08-05T18:10:10.906Z'
  }
} to 26381:0
2025-08-05T18:10:10.963Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b5634a6a-216a-49d3-9a4e-1a841f9f440b',
    name: 'should handle responsive design for assessment flow',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    const viewports = [{\n' +
        '      width: 375,\n' +
        '      height: 667,\n' +
        "      name: 'Mobile'\n" +
        '    }, {\n' +
        '      width: 768,\n' +
        '      height: 1024,\n' +
        "      name: 'Tablet'\n" +
        '    }, {\n' +
        '      width: 1024,\n' +
        '      height: 768,\n' +
        "      name: 'Desktop'\n" +
        '    }];\n' +
        '    for (const viewport of viewports) {\n' +
        '      await page.setViewportSize({\n' +
        '        width: viewport.width,\n' +
        '        height: viewport.height\n' +
        '      });\n' +
        '      await page.waitForTimeout(500);\n' +
        '\n' +
        '      // Check that assessment content is properly contained\n' +
        `      const container = page.locator('main, .container, .assessment-container, [role="main"]').first();\n` +
        '      if ((await container.count()) > 0) {\n' +
        '        const isVisible = await container.isVisible();\n' +
        '        (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        '        // Check no horizontal overflow\n' +
        '        const overflow = await page.evaluate(() => {\n' +
        '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
        '        });\n' +
        '        (0, _test.expect)(overflow).toBe(true);\n' +
        '      }\n' +
        '\n' +
        '      // Check that form elements are still accessible\n' +
        "      const inputs = page.locator('input, textarea, select');\n" +
        '      if ((await inputs.count()) > 0) {\n' +
        '        const firstInput = inputs.first();\n' +
        '        await (0, _test.expect)(firstInput).toBeVisible();\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle responsive design for assessment flow',
    scope: 'should handle responsive design for assessment flow',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 57,
    started_at: '2025-08-05T18:10:02.516Z',
    finished_at: '2025-08-05T18:10:02.573Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile assessment-flow.spec.ts Assessment Flow Tests should handle responsive design for assessment flow'
    },
    hooks: [ 'ebaced84-42da-4bf3-ba75-3d7bb1b64cef' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:10.969Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:10.937Z',
      uuid: 'b5634a6a-216a-49d3-9a4e-1a841f9f440b',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b5634a6a-216a-49d3-9a4e-1a841f9f440b'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:10.938Z',
      uuid: 'b5634a6a-216a-49d3-9a4e-1a841f9f440b',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b5634a6a-216a-49d3-9a4e-1a841f9f440b'
    }
  ]
} to 26381:0
2025-08-05T18:10:11.117Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:02.535Z',
      uuid: 'e55bcde2-a8ba-4b30-8e08-d11cf1ef295e',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'e55bcde2-a8ba-4b30-8e08-d11cf1ef295e'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:02.567Z',
      uuid: 'e55bcde2-a8ba-4b30-8e08-d11cf1ef295e',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'e55bcde2-a8ba-4b30-8e08-d11cf1ef295e'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:02.633Z',
      uuid: 'e55bcde2-a8ba-4b30-8e08-d11cf1ef295e',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'e55bcde2-a8ba-4b30-8e08-d11cf1ef295e'
    }
  ]
} to 26381:0
2025-08-05T18:10:11.121Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'e55bcde2-a8ba-4b30-8e08-d11cf1ef295e',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '7c6fd797-daad-46e8-a57b-06080d06b7ed',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent loading states',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    started_at: '2025-08-05T18:10:02.532Z',
    finished_at: '2025-08-05T18:10:11.111Z'
  }
} to 26381:0
2025-08-05T18:10:11.143Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '7c6fd797-daad-46e8-a57b-06080d06b7ed',
    name: 'should maintain consistent loading states',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for loading indicators\n' +
        `    const loadingIndicators = page.locator('.loading, .spinner, [aria-busy="true"], .animate-spin');\n` +
        '    if ((await loadingIndicators.count()) > 0) {\n' +
        '      for (let i = 0; i < Math.min(await loadingIndicators.count(), 3); i++) {\n' +
        '        const loader = loadingIndicators.nth(i);\n' +
        '\n' +
        '        // Check loading indicator is visible\n' +
        '        await (0, _test.expect)(loader).toBeVisible();\n' +
        '\n' +
        '        // Check it has proper styling\n' +
        '        const styles = await loader.evaluate(el => {\n' +
        '          const computed = window.getComputedStyle(el);\n' +
        '          return {\n' +
        '            display: computed.display,\n' +
        '            visibility: computed.visibility\n' +
        '          };\n' +
        '        });\n' +
        "        (0, _test.expect)(styles.display).not.toBe('none');\n" +
        "        (0, _test.expect)(styles.visibility).not.toBe('hidden');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent loading states',
    scope: 'should maintain consistent loading states',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 46,
    started_at: '2025-08-05T18:10:02.512Z',
    finished_at: '2025-08-05T18:10:02.558Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile assessment-flow.spec.ts Assessment Flow Tests should maintain consistent loading states'
    },
    hooks: [ 'e55bcde2-a8ba-4b30-8e08-d11cf1ef295e' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:11.144Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:11.130Z',
      uuid: '7c6fd797-daad-46e8-a57b-06080d06b7ed',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '7c6fd797-daad-46e8-a57b-06080d06b7ed'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:11.131Z',
      uuid: '7c6fd797-daad-46e8-a57b-06080d06b7ed',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '7c6fd797-daad-46e8-a57b-06080d06b7ed'
    }
  ]
} to 26381:0
2025-08-05T18:10:11.416Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'ebaced84-42da-4bf3-ba75-3d7bb1b64cef',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'b5634a6a-216a-49d3-9a4e-1a841f9f440b',
      body: [Object],
      scope: 'should handle responsive design for assessment flow',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      started_at: '2025-08-05T18:10:02.524Z',
      finished_at: '2025-08-05T18:10:10.906Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b5634a6a-216a-49d3-9a4e-1a841f9f440b',
      name: 'should handle responsive design for assessment flow',
      body: [Object],
      identifier: 'should handle responsive design for assessment flow',
      scope: 'should handle responsive design for assessment flow',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 57,
      started_at: '2025-08-05T18:10:02.516Z',
      finished_at: '2025-08-05T18:10:02.573Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'e55bcde2-a8ba-4b30-8e08-d11cf1ef295e',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '7c6fd797-daad-46e8-a57b-06080d06b7ed',
      body: [Object],
      scope: 'should maintain consistent loading states',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      started_at: '2025-08-05T18:10:02.532Z',
      finished_at: '2025-08-05T18:10:11.111Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '7c6fd797-daad-46e8-a57b-06080d06b7ed',
      name: 'should maintain consistent loading states',
      body: [Object],
      identifier: 'should maintain consistent loading states',
      scope: 'should maintain consistent loading states',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 46,
      started_at: '2025-08-05T18:10:02.512Z',
      finished_at: '2025-08-05T18:10:02.558Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:10:11.417Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:10:11.704Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:02.538Z',
      uuid: 'def03702-93fc-4b99-bc4d-8124ede2d7b5',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'def03702-93fc-4b99-bc4d-8124ede2d7b5'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:02.603Z',
      uuid: 'def03702-93fc-4b99-bc4d-8124ede2d7b5',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'def03702-93fc-4b99-bc4d-8124ede2d7b5'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:02.636Z',
      uuid: 'def03702-93fc-4b99-bc4d-8124ede2d7b5',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'def03702-93fc-4b99-bc4d-8124ede2d7b5'
    }
  ]
} to 26381:0
2025-08-05T18:10:11.716Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'def03702-93fc-4b99-bc4d-8124ede2d7b5',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '369d737a-5d39-48fb-837d-db5ae30ca38a',
    body: { lang: 'node', code: null },
    scope: 'should handle form validation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    started_at: '2025-08-05T18:10:02.535Z',
    finished_at: '2025-08-05T18:10:11.688Z'
  }
} to 26381:0
2025-08-05T18:10:11.752Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '369d737a-5d39-48fb-837d-db5ae30ca38a',
    name: 'should handle form validation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for submit buttons\n' +
        `    const submitButtons = page.locator('button[type="submit"], input[type="submit"], button:has-text("Submit"), button:has-text("Next")');\n` +
        '    if ((await submitButtons.count()) > 0) {\n' +
        '      const submitButton = submitButtons.first();\n' +
        '\n' +
        '      // Try to submit without filling required fields\n' +
        '      await submitButton.click();\n' +
        '\n' +
        '      // Wait for potential validation messages\n' +
        '      await page.waitForTimeout(1000);\n' +
        '\n' +
        '      // Check for validation messages\n' +
        `      const errorMessages = page.locator('.error, .validation-error, [role="alert"], .text-red-500, .text-red-600');\n` +
        '\n' +
        '      // If there are validation errors, they should be visible and styled consistently\n' +
        '      if ((await errorMessages.count()) > 0) {\n' +
        '        for (let i = 0; i < Math.min(await errorMessages.count(), 3); i++) {\n' +
        '          const error = errorMessages.nth(i);\n' +
        '          await (0, _test.expect)(error).toBeVisible();\n' +
        '\n' +
        '          // Check error styling\n' +
        '          const color = await error.evaluate(el => {\n' +
        '            return window.getComputedStyle(el).color;\n' +
        '          });\n' +
        '\n' +
        '          // Should have error color styling\n' +
        '          (0, _test.expect)(color).toMatch(/rgb\\(239, 68, 68\\)|rgb\\(220, 38, 38\\)|red/);\n' +
        '        }\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form validation consistently',
    scope: 'should handle form validation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 94,
    started_at: '2025-08-05T18:10:02.519Z',
    finished_at: '2025-08-05T18:10:02.613Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile assessment-flow.spec.ts Assessment Flow Tests should handle form validation consistently'
    },
    hooks: [ 'def03702-93fc-4b99-bc4d-8124ede2d7b5' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:11.753Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:11.736Z',
      uuid: '369d737a-5d39-48fb-837d-db5ae30ca38a',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '369d737a-5d39-48fb-837d-db5ae30ca38a'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:11.737Z',
      uuid: '369d737a-5d39-48fb-837d-db5ae30ca38a',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '369d737a-5d39-48fb-837d-db5ae30ca38a'
    }
  ]
} to 26381:0
2025-08-05T18:10:13.416Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'def03702-93fc-4b99-bc4d-8124ede2d7b5',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '369d737a-5d39-48fb-837d-db5ae30ca38a',
      body: [Object],
      scope: 'should handle form validation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      started_at: '2025-08-05T18:10:02.535Z',
      finished_at: '2025-08-05T18:10:11.688Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '369d737a-5d39-48fb-837d-db5ae30ca38a',
      name: 'should handle form validation consistently',
      body: [Object],
      identifier: 'should handle form validation consistently',
      scope: 'should handle form validation consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 94,
      started_at: '2025-08-05T18:10:02.519Z',
      finished_at: '2025-08-05T18:10:02.613Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:10:13.417Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:10:14.757Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b57fc9d6-b5b5-4806-adbe-0b1d86171013',
    name: 'should handle navigation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test navigation buttons/links\n' +
        `    const navButtons = page.locator('a, button, [role="link"]').filter({\n` +
        '      hasText: /back|next|previous|continue/i\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await navButtons.count(), 3); i++) {\n' +
        '      const navButton = navButtons.nth(i);\n' +
        '\n' +
        '      // Check navigation element is visible and clickable\n' +
        '      await (0, _test.expect)(navButton).toBeVisible();\n' +
        '      const styles = await navButton.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          cursor: computed.cursor,\n' +
        '          pointerEvents: computed.pointerEvents\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should be clickable\n' +
        "      (0, _test.expect)(['pointer', 'default']).toContain(styles.cursor);\n" +
        "      (0, _test.expect)(styles.pointerEvents).not.toBe('none');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle navigation consistently',
    scope: 'should handle navigation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:10:14.746Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile assessment-flow.spec.ts Assessment Flow Tests should handle navigation consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:14.766Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '8beafc5c-b35a-445f-afbf-c942c01aaa7e',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'b57fc9d6-b5b5-4806-adbe-0b1d86171013',
    body: { lang: 'node', code: null },
    scope: 'should handle navigation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    started_at: '2025-08-05T18:10:14.757Z'
  }
} to 26381:0
2025-08-05T18:10:14.867Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'ce23351e-24e2-47be-a1bf-6cfd019126a2',
    name: 'should connect to BrowserStack and load the homepage',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to the homepage\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-connection-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load the homepage',
    scope: 'should connect to BrowserStack and load the homepage',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:10:14.856Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-connection.spec.ts BrowserStack Connection Test should connect to BrowserStack and load the homepage'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:15.367Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b6f5e786-f03e-424b-ab9c-5abde416cc65',
    name: 'should display consistent branding colors',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for any elements with Gutcheck brand colors\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    if ((await gutcheckElements.count()) > 0) {\n' +
        '      console.log(`🎨 Found ${await gutcheckElements.count()} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display consistent branding colors',
    scope: 'should display consistent branding colors',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:10:15.355Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-connection.spec.ts BrowserStack Connection Test should display consistent branding colors'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:15.417Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b57fc9d6-b5b5-4806-adbe-0b1d86171013',
      name: 'should handle navigation consistently',
      body: [Object],
      identifier: 'should handle navigation consistently',
      scope: 'should handle navigation consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:10:14.746Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '8beafc5c-b35a-445f-afbf-c942c01aaa7e',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'b57fc9d6-b5b5-4806-adbe-0b1d86171013',
      body: [Object],
      scope: 'should handle navigation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      started_at: '2025-08-05T18:10:14.757Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'ce23351e-24e2-47be-a1bf-6cfd019126a2',
      name: 'should connect to BrowserStack and load the homepage',
      body: [Object],
      identifier: 'should connect to BrowserStack and load the homepage',
      scope: 'should connect to BrowserStack and load the homepage',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:10:14.856Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b6f5e786-f03e-424b-ab9c-5abde416cc65',
      name: 'should display consistent branding colors',
      body: [Object],
      identifier: 'should display consistent branding colors',
      scope: 'should display consistent branding colors',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:10:15.355Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 26381:0
2025-08-05T18:10:15.418Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:10:23.240Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b6f5e786-f03e-424b-ab9c-5abde416cc65',
    name: 'should display consistent branding colors',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for any elements with Gutcheck brand colors\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    if ((await gutcheckElements.count()) > 0) {\n' +
        '      console.log(`🎨 Found ${await gutcheckElements.count()} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display consistent branding colors',
    scope: 'should display consistent branding colors',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'failed',
    duration_in_ms: 50,
    started_at: '2025-08-05T18:10:15.355Z',
    finished_at: '2025-08-05T18:10:15.405Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-connection.spec.ts BrowserStack Connection Test should display consistent branding colors'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:23.242Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:23.172Z',
      uuid: 'b6f5e786-f03e-424b-ab9c-5abde416cc65',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b6f5e786-f03e-424b-ab9c-5abde416cc65'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:23.175Z',
      uuid: 'b6f5e786-f03e-424b-ab9c-5abde416cc65',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b6f5e786-f03e-424b-ab9c-5abde416cc65'
    }
  ]
} to 26381:0
2025-08-05T18:10:23.245Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'ce23351e-24e2-47be-a1bf-6cfd019126a2',
    name: 'should connect to BrowserStack and load the homepage',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to the homepage\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-connection-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load the homepage',
    scope: 'should connect to BrowserStack and load the homepage',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'failed',
    duration_in_ms: 59,
    started_at: '2025-08-05T18:10:14.856Z',
    finished_at: '2025-08-05T18:10:14.915Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-connection.spec.ts BrowserStack Connection Test should connect to BrowserStack and load the homepage'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:23.245Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:23.173Z',
      uuid: 'ce23351e-24e2-47be-a1bf-6cfd019126a2',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'ce23351e-24e2-47be-a1bf-6cfd019126a2'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:23.174Z',
      uuid: 'ce23351e-24e2-47be-a1bf-6cfd019126a2',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'ce23351e-24e2-47be-a1bf-6cfd019126a2'
    }
  ]
} to 26381:0
2025-08-05T18:10:23.421Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b6f5e786-f03e-424b-ab9c-5abde416cc65',
      name: 'should display consistent branding colors',
      body: [Object],
      identifier: 'should display consistent branding colors',
      scope: 'should display consistent branding colors',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'failed',
      duration_in_ms: 50,
      started_at: '2025-08-05T18:10:15.355Z',
      finished_at: '2025-08-05T18:10:15.405Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'ce23351e-24e2-47be-a1bf-6cfd019126a2',
      name: 'should connect to BrowserStack and load the homepage',
      body: [Object],
      identifier: 'should connect to BrowserStack and load the homepage',
      scope: 'should connect to BrowserStack and load the homepage',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'failed',
      duration_in_ms: 59,
      started_at: '2025-08-05T18:10:14.856Z',
      finished_at: '2025-08-05T18:10:14.915Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:10:23.422Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:10:23.597Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:14.760Z',
      uuid: '8beafc5c-b35a-445f-afbf-c942c01aaa7e',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '8beafc5c-b35a-445f-afbf-c942c01aaa7e'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:14.788Z',
      uuid: '8beafc5c-b35a-445f-afbf-c942c01aaa7e',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '8beafc5c-b35a-445f-afbf-c942c01aaa7e'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:14.821Z',
      uuid: '8beafc5c-b35a-445f-afbf-c942c01aaa7e',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '8beafc5c-b35a-445f-afbf-c942c01aaa7e'
    }
  ]
} to 26381:0
2025-08-05T18:10:23.624Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '8beafc5c-b35a-445f-afbf-c942c01aaa7e',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'b57fc9d6-b5b5-4806-adbe-0b1d86171013',
    body: { lang: 'node', code: null },
    scope: 'should handle navigation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    started_at: '2025-08-05T18:10:14.757Z',
    finished_at: '2025-08-05T18:10:23.588Z'
  }
} to 26381:0
2025-08-05T18:10:23.639Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b57fc9d6-b5b5-4806-adbe-0b1d86171013',
    name: 'should handle navigation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test navigation buttons/links\n' +
        `    const navButtons = page.locator('a, button, [role="link"]').filter({\n` +
        '      hasText: /back|next|previous|continue/i\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await navButtons.count(), 3); i++) {\n' +
        '      const navButton = navButtons.nth(i);\n' +
        '\n' +
        '      // Check navigation element is visible and clickable\n' +
        '      await (0, _test.expect)(navButton).toBeVisible();\n' +
        '      const styles = await navButton.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          cursor: computed.cursor,\n' +
        '          pointerEvents: computed.pointerEvents\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should be clickable\n' +
        "      (0, _test.expect)(['pointer', 'default']).toContain(styles.cursor);\n" +
        "      (0, _test.expect)(styles.pointerEvents).not.toBe('none');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle navigation consistently',
    scope: 'should handle navigation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 54,
    started_at: '2025-08-05T18:10:14.746Z',
    finished_at: '2025-08-05T18:10:14.800Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile assessment-flow.spec.ts Assessment Flow Tests should handle navigation consistently'
    },
    hooks: [ '8beafc5c-b35a-445f-afbf-c942c01aaa7e' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:23.643Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:23.616Z',
      uuid: 'b57fc9d6-b5b5-4806-adbe-0b1d86171013',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b57fc9d6-b5b5-4806-adbe-0b1d86171013'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:23.617Z',
      uuid: 'b57fc9d6-b5b5-4806-adbe-0b1d86171013',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b57fc9d6-b5b5-4806-adbe-0b1d86171013'
    }
  ]
} to 26381:0
2025-08-05T18:10:25.422Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '8beafc5c-b35a-445f-afbf-c942c01aaa7e',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'b57fc9d6-b5b5-4806-adbe-0b1d86171013',
      body: [Object],
      scope: 'should handle navigation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      started_at: '2025-08-05T18:10:14.757Z',
      finished_at: '2025-08-05T18:10:23.588Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b57fc9d6-b5b5-4806-adbe-0b1d86171013',
      name: 'should handle navigation consistently',
      body: [Object],
      identifier: 'should handle navigation consistently',
      scope: 'should handle navigation consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 54,
      started_at: '2025-08-05T18:10:14.746Z',
      finished_at: '2025-08-05T18:10:14.800Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:10:25.423Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:10:27.684Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '0566e1dc-565b-498e-b151-22c58f3a3d39',
    name: 'should connect to BrowserStack and load a public website',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to a public website instead of localhost\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-public-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '    console.log(`🌐 URL: ${page.url()}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load a public website',
    scope: 'should connect to BrowserStack and load a public website',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:10:27.637Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-public.spec.ts BrowserStack Public URL Test should connect to BrowserStack and load a public website'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:27.686Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '20f50974-7e8b-4ee3-a15c-e97d497fcbb3',
    name: 'should verify browser capabilities',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Get browser information\n' +
        '    const userAgent = await page.evaluate(() => navigator.userAgent);\n' +
        '    const viewport = page.viewportSize();\n' +
        '    console.log(`🔍 User Agent: ${userAgent}`);\n' +
        '    console.log(`📐 Viewport: ${viewport === null || viewport === void 0 ? void 0 : viewport.width}x${viewport === null || viewport === void 0 ? void 0 : viewport.height}`);\n' +
        '\n' +
        "    // Verify we're running in a real browser environment\n" +
        "    (0, _test.expect)(userAgent).toContain('Chrome');\n" +
        '    (0, _test.expect)(viewport).toBeTruthy();\n' +
        '  }'
    },
    identifier: 'should verify browser capabilities',
    scope: 'should verify browser capabilities',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:10:27.638Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-public.spec.ts BrowserStack Public URL Test should verify browser capabilities'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:27.727Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '88f48510-aa30-469d-89df-9eb654873a7b',
    name: 'should display consistent colors across browsers',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test Gutcheck brand colors\n' +
        '    const colorTests = [{\n' +
        "      selector: '.bg-gutcheck-deep-navy',\n" +
        "      expectedColor: 'rgb(10, 31, 68)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-electric-blue',\n" +
        "      expectedColor: 'rgb(20, 122, 255)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-vibrant-teal',\n" +
        "      expectedColor: 'rgb(25, 194, 160)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-bright-orange',\n" +
        "      expectedColor: 'rgb(255, 107, 0)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-bright-yellow',\n" +
        "      expectedColor: 'rgb(255, 199, 0)'\n" +
        '    }];\n' +
        '    for (const test of colorTests) {\n' +
        '      const element = page.locator(test.selector).first();\n' +
        '      if ((await element.count()) > 0) {\n' +
        '        const backgroundColor = await element.evaluate(el => {\n' +
        '          return window.getComputedStyle(el).backgroundColor;\n' +
        '        });\n' +
        '        (0, _test.expect)(backgroundColor).toBe(test.expectedColor);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should display consistent colors across browsers',
    scope: 'should display consistent colors across browsers',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:10:27.710Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile visual-consistency.spec.ts Visual Consistency Tests should display consistent colors across browsers'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:27.735Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '3394f8a7-f515-4e29-a2a4-d7c2cd2ef0fd',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '88f48510-aa30-469d-89df-9eb654873a7b',
    body: { lang: 'node', code: null },
    scope: 'should display consistent colors across browsers',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    started_at: '2025-08-05T18:10:27.732Z'
  }
} to 26381:0
2025-08-05T18:10:29.425Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '0566e1dc-565b-498e-b151-22c58f3a3d39',
      name: 'should connect to BrowserStack and load a public website',
      body: [Object],
      identifier: 'should connect to BrowserStack and load a public website',
      scope: 'should connect to BrowserStack and load a public website',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:10:27.637Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '20f50974-7e8b-4ee3-a15c-e97d497fcbb3',
      name: 'should verify browser capabilities',
      body: [Object],
      identifier: 'should verify browser capabilities',
      scope: 'should verify browser capabilities',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:10:27.638Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '88f48510-aa30-469d-89df-9eb654873a7b',
      name: 'should display consistent colors across browsers',
      body: [Object],
      identifier: 'should display consistent colors across browsers',
      scope: 'should display consistent colors across browsers',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:10:27.710Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '3394f8a7-f515-4e29-a2a4-d7c2cd2ef0fd',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '88f48510-aa30-469d-89df-9eb654873a7b',
      body: [Object],
      scope: 'should display consistent colors across browsers',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      started_at: '2025-08-05T18:10:27.732Z'
    }
  }
] to 26381:0
2025-08-05T18:10:29.427Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:10:35.936Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:27.735Z',
      uuid: '3394f8a7-f515-4e29-a2a4-d7c2cd2ef0fd',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '3394f8a7-f515-4e29-a2a4-d7c2cd2ef0fd'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:27.771Z',
      uuid: '3394f8a7-f515-4e29-a2a4-d7c2cd2ef0fd',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '3394f8a7-f515-4e29-a2a4-d7c2cd2ef0fd'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:27.802Z',
      uuid: '3394f8a7-f515-4e29-a2a4-d7c2cd2ef0fd',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '3394f8a7-f515-4e29-a2a4-d7c2cd2ef0fd'
    }
  ]
} to 26381:0
2025-08-05T18:10:35.940Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '3394f8a7-f515-4e29-a2a4-d7c2cd2ef0fd',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '88f48510-aa30-469d-89df-9eb654873a7b',
    body: { lang: 'node', code: null },
    scope: 'should display consistent colors across browsers',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    started_at: '2025-08-05T18:10:27.732Z',
    finished_at: '2025-08-05T18:10:35.928Z'
  }
} to 26381:0
2025-08-05T18:10:35.982Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '88f48510-aa30-469d-89df-9eb654873a7b',
    name: 'should display consistent colors across browsers',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test Gutcheck brand colors\n' +
        '    const colorTests = [{\n' +
        "      selector: '.bg-gutcheck-deep-navy',\n" +
        "      expectedColor: 'rgb(10, 31, 68)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-electric-blue',\n" +
        "      expectedColor: 'rgb(20, 122, 255)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-vibrant-teal',\n" +
        "      expectedColor: 'rgb(25, 194, 160)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-bright-orange',\n" +
        "      expectedColor: 'rgb(255, 107, 0)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-bright-yellow',\n" +
        "      expectedColor: 'rgb(255, 199, 0)'\n" +
        '    }];\n' +
        '    for (const test of colorTests) {\n' +
        '      const element = page.locator(test.selector).first();\n' +
        '      if ((await element.count()) > 0) {\n' +
        '        const backgroundColor = await element.evaluate(el => {\n' +
        '          return window.getComputedStyle(el).backgroundColor;\n' +
        '        });\n' +
        '        (0, _test.expect)(backgroundColor).toBe(test.expectedColor);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should display consistent colors across browsers',
    scope: 'should display consistent colors across browsers',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 64,
    started_at: '2025-08-05T18:10:27.710Z',
    finished_at: '2025-08-05T18:10:27.774Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile visual-consistency.spec.ts Visual Consistency Tests should display consistent colors across browsers'
    },
    hooks: [ '3394f8a7-f515-4e29-a2a4-d7c2cd2ef0fd' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:35.985Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:35.956Z',
      uuid: '88f48510-aa30-469d-89df-9eb654873a7b',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '88f48510-aa30-469d-89df-9eb654873a7b'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:35.957Z',
      uuid: '88f48510-aa30-469d-89df-9eb654873a7b',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '88f48510-aa30-469d-89df-9eb654873a7b'
    }
  ]
} to 26381:0
2025-08-05T18:10:36.270Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '0566e1dc-565b-498e-b151-22c58f3a3d39',
    name: 'should connect to BrowserStack and load a public website',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to a public website instead of localhost\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-public-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '    console.log(`🌐 URL: ${page.url()}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load a public website',
    scope: 'should connect to BrowserStack and load a public website',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'failed',
    duration_in_ms: 61,
    started_at: '2025-08-05T18:10:27.637Z',
    finished_at: '2025-08-05T18:10:27.698Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-public.spec.ts BrowserStack Public URL Test should connect to BrowserStack and load a public website'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:36.271Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:36.253Z',
      uuid: '0566e1dc-565b-498e-b151-22c58f3a3d39',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '0566e1dc-565b-498e-b151-22c58f3a3d39'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:36.254Z',
      uuid: '0566e1dc-565b-498e-b151-22c58f3a3d39',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '0566e1dc-565b-498e-b151-22c58f3a3d39'
    }
  ]
} to 26381:0
2025-08-05T18:10:37.426Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '3394f8a7-f515-4e29-a2a4-d7c2cd2ef0fd',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '88f48510-aa30-469d-89df-9eb654873a7b',
      body: [Object],
      scope: 'should display consistent colors across browsers',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      started_at: '2025-08-05T18:10:27.732Z',
      finished_at: '2025-08-05T18:10:35.928Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '88f48510-aa30-469d-89df-9eb654873a7b',
      name: 'should display consistent colors across browsers',
      body: [Object],
      identifier: 'should display consistent colors across browsers',
      scope: 'should display consistent colors across browsers',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 64,
      started_at: '2025-08-05T18:10:27.710Z',
      finished_at: '2025-08-05T18:10:27.774Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '0566e1dc-565b-498e-b151-22c58f3a3d39',
      name: 'should connect to BrowserStack and load a public website',
      body: [Object],
      identifier: 'should connect to BrowserStack and load a public website',
      scope: 'should connect to BrowserStack and load a public website',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'failed',
      duration_in_ms: 61,
      started_at: '2025-08-05T18:10:27.637Z',
      finished_at: '2025-08-05T18:10:27.698Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:10:37.428Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:10:37.691Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '20f50974-7e8b-4ee3-a15c-e97d497fcbb3',
    name: 'should verify browser capabilities',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Get browser information\n' +
        '    const userAgent = await page.evaluate(() => navigator.userAgent);\n' +
        '    const viewport = page.viewportSize();\n' +
        '    console.log(`🔍 User Agent: ${userAgent}`);\n' +
        '    console.log(`📐 Viewport: ${viewport === null || viewport === void 0 ? void 0 : viewport.width}x${viewport === null || viewport === void 0 ? void 0 : viewport.height}`);\n' +
        '\n' +
        "    // Verify we're running in a real browser environment\n" +
        "    (0, _test.expect)(userAgent).toContain('Chrome');\n" +
        '    (0, _test.expect)(viewport).toBeTruthy();\n' +
        '  }'
    },
    identifier: 'should verify browser capabilities',
    scope: 'should verify browser capabilities',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'failed',
    duration_in_ms: 53,
    started_at: '2025-08-05T18:10:27.638Z',
    finished_at: '2025-08-05T18:10:27.691Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-public.spec.ts BrowserStack Public URL Test should verify browser capabilities'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:37.691Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:37.672Z',
      uuid: '20f50974-7e8b-4ee3-a15c-e97d497fcbb3',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '20f50974-7e8b-4ee3-a15c-e97d497fcbb3'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:37.673Z',
      uuid: '20f50974-7e8b-4ee3-a15c-e97d497fcbb3',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '20f50974-7e8b-4ee3-a15c-e97d497fcbb3'
    }
  ]
} to 26381:0
2025-08-05T18:10:39.429Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '20f50974-7e8b-4ee3-a15c-e97d497fcbb3',
      name: 'should verify browser capabilities',
      body: [Object],
      identifier: 'should verify browser capabilities',
      scope: 'should verify browser capabilities',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'failed',
      duration_in_ms: 53,
      started_at: '2025-08-05T18:10:27.638Z',
      finished_at: '2025-08-05T18:10:27.691Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:10:39.429Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:10:39.614Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'f2c5736f-a67f-4a32-9cfb-6fbc78004c18',
    name: 'should maintain consistent typography',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test font family consistency\n' +
        "    const textElements = page.locator('h1, h2, h3, p, button, input, textarea');\n" +
        '    for (let i = 0; i < Math.min(await textElements.count(), 10); i++) {\n' +
        '      const element = textElements.nth(i);\n' +
        '      const fontFamily = await element.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).fontFamily;\n' +
        '      });\n' +
        '\n' +
        '      // Should use Inter font family or fallback to system fonts\n' +
        '      (0, _test.expect)(fontFamily).toMatch(/Inter|system-ui|sans-serif/);\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent typography',
    scope: 'should maintain consistent typography',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:10:39.603Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile visual-consistency.spec.ts Visual Consistency Tests should maintain consistent typography'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:39.621Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '3d31f628-e125-4e25-8f2f-124075d89dbf',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'f2c5736f-a67f-4a32-9cfb-6fbc78004c18',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent typography',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    started_at: '2025-08-05T18:10:39.618Z'
  }
} to 26381:0
2025-08-05T18:10:39.918Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'f20834f8-3c32-43bf-8ae8-84298db9a90d',
    name: 'should have consistent button styling',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    const buttons = page.locator('button');\n" +
        '    for (let i = 0; i < Math.min(await buttons.count(), 5); i++) {\n' +
        '      const button = buttons.nth(i);\n' +
        '\n' +
        '      // Check button has proper styling\n' +
        '      const styles = await button.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding,\n' +
        '          cursor: computed.cursor\n' +
        '        };\n' +
        '      });\n' +
        "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
        "      (0, _test.expect)(styles.borderRadius).not.toBe('0px');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should have consistent button styling',
    scope: 'should have consistent button styling',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:10:39.900Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile visual-consistency.spec.ts Visual Consistency Tests should have consistent button styling'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:39.923Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'fd34c749-ea89-4477-a6be-d6b5fb0ded5d',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'f20834f8-3c32-43bf-8ae8-84298db9a90d',
    body: { lang: 'node', code: null },
    scope: 'should have consistent button styling',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    started_at: '2025-08-05T18:10:39.906Z'
  }
} to 26381:0
2025-08-05T18:10:41.166Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '0600a742-bd30-4d10-b65e-ddb87bb135dd',
    name: 'should maintain layout consistency on different screen sizes',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    const viewports = [{\n' +
        '      width: 1920,\n' +
        '      height: 1080,\n' +
        "      name: 'Desktop Large'\n" +
        '    }, {\n' +
        '      width: 1366,\n' +
        '      height: 768,\n' +
        "      name: 'Desktop Small'\n" +
        '    }, {\n' +
        '      width: 768,\n' +
        '      height: 1024,\n' +
        "      name: 'Tablet Portrait'\n" +
        '    }, {\n' +
        '      width: 375,\n' +
        '      height: 667,\n' +
        "      name: 'Mobile Portrait'\n" +
        '    }, {\n' +
        '      width: 414,\n' +
        '      height: 896,\n' +
        "      name: 'Mobile Large'\n" +
        '    }];\n' +
        '    for (const viewport of viewports) {\n' +
        '      await page.setViewportSize({\n' +
        '        width: viewport.width,\n' +
        '        height: viewport.height\n' +
        '      });\n' +
        '\n' +
        '      // Wait for layout to stabilize\n' +
        '      await page.waitForTimeout(500);\n' +
        '\n' +
        '      // Check that main content is visible and properly positioned\n' +
        `      const mainContent = page.locator('main, .main, #main, [role="main"]').first();\n` +
        '      if ((await mainContent.count()) > 0) {\n' +
        '        const isVisible = await mainContent.isVisible();\n' +
        '        (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        "        // Check that content doesn't overflow horizontally\n" +
        '        const overflow = await page.evaluate(() => {\n' +
        '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
        '        });\n' +
        '        (0, _test.expect)(overflow).toBe(true);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain layout consistency on different screen sizes',
    scope: 'should maintain layout consistency on different screen sizes',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:10:41.150Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile visual-consistency.spec.ts Visual Consistency Tests should maintain layout consistency on different screen sizes'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:41.172Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '3ae9343f-b9a7-4819-805b-d9c29d9b1103',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '0600a742-bd30-4d10-b65e-ddb87bb135dd',
    body: { lang: 'node', code: null },
    scope: 'should maintain layout consistency on different screen sizes',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    started_at: '2025-08-05T18:10:41.157Z'
  }
} to 26381:0
2025-08-05T18:10:41.430Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'f2c5736f-a67f-4a32-9cfb-6fbc78004c18',
      name: 'should maintain consistent typography',
      body: [Object],
      identifier: 'should maintain consistent typography',
      scope: 'should maintain consistent typography',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:10:39.603Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '3d31f628-e125-4e25-8f2f-124075d89dbf',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'f2c5736f-a67f-4a32-9cfb-6fbc78004c18',
      body: [Object],
      scope: 'should maintain consistent typography',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      started_at: '2025-08-05T18:10:39.618Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'f20834f8-3c32-43bf-8ae8-84298db9a90d',
      name: 'should have consistent button styling',
      body: [Object],
      identifier: 'should have consistent button styling',
      scope: 'should have consistent button styling',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:10:39.900Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'fd34c749-ea89-4477-a6be-d6b5fb0ded5d',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'f20834f8-3c32-43bf-8ae8-84298db9a90d',
      body: [Object],
      scope: 'should have consistent button styling',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      started_at: '2025-08-05T18:10:39.906Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '0600a742-bd30-4d10-b65e-ddb87bb135dd',
      name: 'should maintain layout consistency on different screen sizes',
      body: [Object],
      identifier: 'should maintain layout consistency on different screen sizes',
      scope: 'should maintain layout consistency on different screen sizes',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:10:41.150Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '3ae9343f-b9a7-4819-805b-d9c29d9b1103',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '0600a742-bd30-4d10-b65e-ddb87bb135dd',
      body: [Object],
      scope: 'should maintain layout consistency on different screen sizes',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      started_at: '2025-08-05T18:10:41.157Z'
    }
  }
] to 26381:0
2025-08-05T18:10:41.431Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:10:47.224Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:39.909Z',
      uuid: 'fd34c749-ea89-4477-a6be-d6b5fb0ded5d',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'fd34c749-ea89-4477-a6be-d6b5fb0ded5d'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:39.936Z',
      uuid: 'fd34c749-ea89-4477-a6be-d6b5fb0ded5d',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'fd34c749-ea89-4477-a6be-d6b5fb0ded5d'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:39.965Z',
      uuid: 'fd34c749-ea89-4477-a6be-d6b5fb0ded5d',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'fd34c749-ea89-4477-a6be-d6b5fb0ded5d'
    }
  ]
} to 26381:0
2025-08-05T18:10:47.236Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'fd34c749-ea89-4477-a6be-d6b5fb0ded5d',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'f20834f8-3c32-43bf-8ae8-84298db9a90d',
    body: { lang: 'node', code: null },
    scope: 'should have consistent button styling',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    started_at: '2025-08-05T18:10:39.906Z',
    finished_at: '2025-08-05T18:10:47.220Z'
  }
} to 26381:0
2025-08-05T18:10:47.265Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'f20834f8-3c32-43bf-8ae8-84298db9a90d',
    name: 'should have consistent button styling',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    const buttons = page.locator('button');\n" +
        '    for (let i = 0; i < Math.min(await buttons.count(), 5); i++) {\n' +
        '      const button = buttons.nth(i);\n' +
        '\n' +
        '      // Check button has proper styling\n' +
        '      const styles = await button.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding,\n' +
        '          cursor: computed.cursor\n' +
        '        };\n' +
        '      });\n' +
        "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
        "      (0, _test.expect)(styles.borderRadius).not.toBe('0px');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should have consistent button styling',
    scope: 'should have consistent button styling',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 46,
    started_at: '2025-08-05T18:10:39.900Z',
    finished_at: '2025-08-05T18:10:39.946Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile visual-consistency.spec.ts Visual Consistency Tests should have consistent button styling'
    },
    hooks: [ 'fd34c749-ea89-4477-a6be-d6b5fb0ded5d' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:47.268Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:47.247Z',
      uuid: 'f20834f8-3c32-43bf-8ae8-84298db9a90d',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'f20834f8-3c32-43bf-8ae8-84298db9a90d'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:47.248Z',
      uuid: 'f20834f8-3c32-43bf-8ae8-84298db9a90d',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'f20834f8-3c32-43bf-8ae8-84298db9a90d'
    }
  ]
} to 26381:0
2025-08-05T18:10:47.431Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'fd34c749-ea89-4477-a6be-d6b5fb0ded5d',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'f20834f8-3c32-43bf-8ae8-84298db9a90d',
      body: [Object],
      scope: 'should have consistent button styling',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      started_at: '2025-08-05T18:10:39.906Z',
      finished_at: '2025-08-05T18:10:47.220Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'f20834f8-3c32-43bf-8ae8-84298db9a90d',
      name: 'should have consistent button styling',
      body: [Object],
      identifier: 'should have consistent button styling',
      scope: 'should have consistent button styling',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 46,
      started_at: '2025-08-05T18:10:39.900Z',
      finished_at: '2025-08-05T18:10:39.946Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:10:47.432Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:10:47.704Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:39.624Z',
      uuid: '3d31f628-e125-4e25-8f2f-124075d89dbf',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '3d31f628-e125-4e25-8f2f-124075d89dbf'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:39.651Z',
      uuid: '3d31f628-e125-4e25-8f2f-124075d89dbf',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '3d31f628-e125-4e25-8f2f-124075d89dbf'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:39.685Z',
      uuid: '3d31f628-e125-4e25-8f2f-124075d89dbf',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '3d31f628-e125-4e25-8f2f-124075d89dbf'
    }
  ]
} to 26381:0
2025-08-05T18:10:47.721Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '3d31f628-e125-4e25-8f2f-124075d89dbf',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'f2c5736f-a67f-4a32-9cfb-6fbc78004c18',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent typography',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    started_at: '2025-08-05T18:10:39.618Z',
    finished_at: '2025-08-05T18:10:47.699Z'
  }
} to 26381:0
2025-08-05T18:10:47.739Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'f2c5736f-a67f-4a32-9cfb-6fbc78004c18',
    name: 'should maintain consistent typography',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test font family consistency\n' +
        "    const textElements = page.locator('h1, h2, h3, p, button, input, textarea');\n" +
        '    for (let i = 0; i < Math.min(await textElements.count(), 10); i++) {\n' +
        '      const element = textElements.nth(i);\n' +
        '      const fontFamily = await element.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).fontFamily;\n' +
        '      });\n' +
        '\n' +
        '      // Should use Inter font family or fallback to system fonts\n' +
        '      (0, _test.expect)(fontFamily).toMatch(/Inter|system-ui|sans-serif/);\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent typography',
    scope: 'should maintain consistent typography',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 44,
    started_at: '2025-08-05T18:10:39.603Z',
    finished_at: '2025-08-05T18:10:39.647Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile visual-consistency.spec.ts Visual Consistency Tests should maintain consistent typography'
    },
    hooks: [ '3d31f628-e125-4e25-8f2f-124075d89dbf' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:47.740Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:47.721Z',
      uuid: 'f2c5736f-a67f-4a32-9cfb-6fbc78004c18',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'f2c5736f-a67f-4a32-9cfb-6fbc78004c18'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:47.722Z',
      uuid: 'f2c5736f-a67f-4a32-9cfb-6fbc78004c18',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'f2c5736f-a67f-4a32-9cfb-6fbc78004c18'
    }
  ]
} to 26381:0
2025-08-05T18:10:48.119Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:41.160Z',
      uuid: '3ae9343f-b9a7-4819-805b-d9c29d9b1103',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '3ae9343f-b9a7-4819-805b-d9c29d9b1103'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:41.184Z',
      uuid: '3ae9343f-b9a7-4819-805b-d9c29d9b1103',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '3ae9343f-b9a7-4819-805b-d9c29d9b1103'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:41.210Z',
      uuid: '3ae9343f-b9a7-4819-805b-d9c29d9b1103',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '3ae9343f-b9a7-4819-805b-d9c29d9b1103'
    }
  ]
} to 26381:0
2025-08-05T18:10:48.125Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '3ae9343f-b9a7-4819-805b-d9c29d9b1103',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '0600a742-bd30-4d10-b65e-ddb87bb135dd',
    body: { lang: 'node', code: null },
    scope: 'should maintain layout consistency on different screen sizes',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    started_at: '2025-08-05T18:10:41.157Z',
    finished_at: '2025-08-05T18:10:48.113Z'
  }
} to 26381:0
2025-08-05T18:10:48.147Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '0600a742-bd30-4d10-b65e-ddb87bb135dd',
    name: 'should maintain layout consistency on different screen sizes',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    const viewports = [{\n' +
        '      width: 1920,\n' +
        '      height: 1080,\n' +
        "      name: 'Desktop Large'\n" +
        '    }, {\n' +
        '      width: 1366,\n' +
        '      height: 768,\n' +
        "      name: 'Desktop Small'\n" +
        '    }, {\n' +
        '      width: 768,\n' +
        '      height: 1024,\n' +
        "      name: 'Tablet Portrait'\n" +
        '    }, {\n' +
        '      width: 375,\n' +
        '      height: 667,\n' +
        "      name: 'Mobile Portrait'\n" +
        '    }, {\n' +
        '      width: 414,\n' +
        '      height: 896,\n' +
        "      name: 'Mobile Large'\n" +
        '    }];\n' +
        '    for (const viewport of viewports) {\n' +
        '      await page.setViewportSize({\n' +
        '        width: viewport.width,\n' +
        '        height: viewport.height\n' +
        '      });\n' +
        '\n' +
        '      // Wait for layout to stabilize\n' +
        '      await page.waitForTimeout(500);\n' +
        '\n' +
        '      // Check that main content is visible and properly positioned\n' +
        `      const mainContent = page.locator('main, .main, #main, [role="main"]').first();\n` +
        '      if ((await mainContent.count()) > 0) {\n' +
        '        const isVisible = await mainContent.isVisible();\n' +
        '        (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        "        // Check that content doesn't overflow horizontally\n" +
        '        const overflow = await page.evaluate(() => {\n' +
        '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
        '        });\n' +
        '        (0, _test.expect)(overflow).toBe(true);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain layout consistency on different screen sizes',
    scope: 'should maintain layout consistency on different screen sizes',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 39,
    started_at: '2025-08-05T18:10:41.150Z',
    finished_at: '2025-08-05T18:10:41.189Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile visual-consistency.spec.ts Visual Consistency Tests should maintain layout consistency on different screen sizes'
    },
    hooks: [ '3ae9343f-b9a7-4819-805b-d9c29d9b1103' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:48.147Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:48.133Z',
      uuid: '0600a742-bd30-4d10-b65e-ddb87bb135dd',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '0600a742-bd30-4d10-b65e-ddb87bb135dd'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:48.134Z',
      uuid: '0600a742-bd30-4d10-b65e-ddb87bb135dd',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '0600a742-bd30-4d10-b65e-ddb87bb135dd'
    }
  ]
} to 26381:0
2025-08-05T18:10:49.432Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '3d31f628-e125-4e25-8f2f-124075d89dbf',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'f2c5736f-a67f-4a32-9cfb-6fbc78004c18',
      body: [Object],
      scope: 'should maintain consistent typography',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      started_at: '2025-08-05T18:10:39.618Z',
      finished_at: '2025-08-05T18:10:47.699Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'f2c5736f-a67f-4a32-9cfb-6fbc78004c18',
      name: 'should maintain consistent typography',
      body: [Object],
      identifier: 'should maintain consistent typography',
      scope: 'should maintain consistent typography',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 44,
      started_at: '2025-08-05T18:10:39.603Z',
      finished_at: '2025-08-05T18:10:39.647Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '3ae9343f-b9a7-4819-805b-d9c29d9b1103',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '0600a742-bd30-4d10-b65e-ddb87bb135dd',
      body: [Object],
      scope: 'should maintain layout consistency on different screen sizes',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      started_at: '2025-08-05T18:10:41.157Z',
      finished_at: '2025-08-05T18:10:48.113Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '0600a742-bd30-4d10-b65e-ddb87bb135dd',
      name: 'should maintain layout consistency on different screen sizes',
      body: [Object],
      identifier: 'should maintain layout consistency on different screen sizes',
      scope: 'should maintain layout consistency on different screen sizes',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 39,
      started_at: '2025-08-05T18:10:41.150Z',
      finished_at: '2025-08-05T18:10:41.189Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:10:49.434Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:10:51.073Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'de97ef1a-6dbf-4b9d-a2ae-79adf091cf55',
    name: 'should handle form elements consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test form input styling\n' +
        "    const inputs = page.locator('input, textarea, select');\n" +
        '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
        '      const input = inputs.nth(i);\n' +
        '      const styles = await input.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          border: computed.border,\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have consistent border and padding\n' +
        "      (0, _test.expect)(styles.border).not.toBe('none');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form elements consistently',
    scope: 'should handle form elements consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:10:51.061Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile visual-consistency.spec.ts Visual Consistency Tests should handle form elements consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:51.095Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'dc0aba12-1c50-4b8d-a0a4-328202ccd9e9',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'de97ef1a-6dbf-4b9d-a2ae-79adf091cf55',
    body: { lang: 'node', code: null },
    scope: 'should handle form elements consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    started_at: '2025-08-05T18:10:51.074Z'
  }
} to 26381:0
2025-08-05T18:10:51.433Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'de97ef1a-6dbf-4b9d-a2ae-79adf091cf55',
      name: 'should handle form elements consistently',
      body: [Object],
      identifier: 'should handle form elements consistently',
      scope: 'should handle form elements consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:10:51.061Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'dc0aba12-1c50-4b8d-a0a4-328202ccd9e9',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'de97ef1a-6dbf-4b9d-a2ae-79adf091cf55',
      body: [Object],
      scope: 'should handle form elements consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      started_at: '2025-08-05T18:10:51.074Z'
    }
  }
] to 26381:0
2025-08-05T18:10:51.434Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:10:51.537Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'e3dd1352-8129-4d0f-8e61-36a792b5e127',
    name: 'should maintain consistent spacing and alignment',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test that elements have consistent spacing\n' +
        "    const containers = page.locator('div, section, article').filter({\n" +
        '      hasText: /./\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await containers.count(), 10); i++) {\n' +
        '      const container = containers.nth(i);\n' +
        '      const styles = await container.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          margin: computed.margin,\n' +
        '          padding: computed.padding,\n' +
        '          display: computed.display\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have consistent display properties\n' +
        "      (0, _test.expect)(['block', 'flex', 'grid', 'inline-block']).toContain(styles.display);\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent spacing and alignment',
    scope: 'should maintain consistent spacing and alignment',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:10:51.524Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile visual-consistency.spec.ts Visual Consistency Tests should maintain consistent spacing and alignment'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:51.542Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'ae0ef2a6-0f72-46fc-a8c1-af5255f9d286',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'e3dd1352-8129-4d0f-8e61-36a792b5e127',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent spacing and alignment',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    started_at: '2025-08-05T18:10:51.538Z'
  }
} to 26381:0
2025-08-05T18:10:51.690Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'e4d3f9ba-340c-489b-921b-0b6bcf9008e4',
    name: 'should handle dark mode consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test dark mode colors\n' +
        '    await page.evaluate(() => {\n' +
        '      // Simulate dark mode\n' +
        "      document.documentElement.style.colorScheme = 'dark';\n" +
        "      document.documentElement.classList.add('dark');\n" +
        '    });\n' +
        '    await page.waitForTimeout(100);\n' +
        '\n' +
        '    // Check that dark mode colors are applied\n' +
        '    const bodyColor = await page.evaluate(() => {\n' +
        '      return window.getComputedStyle(document.body).backgroundColor;\n' +
        '    });\n' +
        '\n' +
        '    // Should have dark background in dark mode\n' +
        '    (0, _test.expect)(bodyColor).toMatch(/rgb\\(10, 10, 10\\)|rgba\\(10, 10, 10/);\n' +
        '  }'
    },
    identifier: 'should handle dark mode consistently',
    scope: 'should handle dark mode consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:10:51.672Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile visual-consistency.spec.ts Visual Consistency Tests should handle dark mode consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:51.701Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '8b3118bc-1fdb-4c2f-8c79-8622ecaca40e',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'e4d3f9ba-340c-489b-921b-0b6bcf9008e4',
    body: { lang: 'node', code: null },
    scope: 'should handle dark mode consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    started_at: '2025-08-05T18:10:51.684Z'
  }
} to 26381:0
2025-08-05T18:10:53.434Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'e3dd1352-8129-4d0f-8e61-36a792b5e127',
      name: 'should maintain consistent spacing and alignment',
      body: [Object],
      identifier: 'should maintain consistent spacing and alignment',
      scope: 'should maintain consistent spacing and alignment',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:10:51.524Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'ae0ef2a6-0f72-46fc-a8c1-af5255f9d286',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'e3dd1352-8129-4d0f-8e61-36a792b5e127',
      body: [Object],
      scope: 'should maintain consistent spacing and alignment',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      started_at: '2025-08-05T18:10:51.538Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'e4d3f9ba-340c-489b-921b-0b6bcf9008e4',
      name: 'should handle dark mode consistently',
      body: [Object],
      identifier: 'should handle dark mode consistently',
      scope: 'should handle dark mode consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:10:51.672Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '8b3118bc-1fdb-4c2f-8c79-8622ecaca40e',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'e4d3f9ba-340c-489b-921b-0b6bcf9008e4',
      body: [Object],
      scope: 'should handle dark mode consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      started_at: '2025-08-05T18:10:51.684Z'
    }
  }
] to 26381:0
2025-08-05T18:10:53.436Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:10:59.739Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:51.077Z',
      uuid: 'dc0aba12-1c50-4b8d-a0a4-328202ccd9e9',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'dc0aba12-1c50-4b8d-a0a4-328202ccd9e9'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:51.104Z',
      uuid: 'dc0aba12-1c50-4b8d-a0a4-328202ccd9e9',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'dc0aba12-1c50-4b8d-a0a4-328202ccd9e9'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:51.134Z',
      uuid: 'dc0aba12-1c50-4b8d-a0a4-328202ccd9e9',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'dc0aba12-1c50-4b8d-a0a4-328202ccd9e9'
    }
  ]
} to 26381:0
2025-08-05T18:10:59.751Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'dc0aba12-1c50-4b8d-a0a4-328202ccd9e9',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'de97ef1a-6dbf-4b9d-a2ae-79adf091cf55',
    body: { lang: 'node', code: null },
    scope: 'should handle form elements consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    started_at: '2025-08-05T18:10:51.074Z',
    finished_at: '2025-08-05T18:10:59.735Z'
  }
} to 26381:0
2025-08-05T18:10:59.775Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'de97ef1a-6dbf-4b9d-a2ae-79adf091cf55',
    name: 'should handle form elements consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test form input styling\n' +
        "    const inputs = page.locator('input, textarea, select');\n" +
        '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
        '      const input = inputs.nth(i);\n' +
        '      const styles = await input.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          border: computed.border,\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have consistent border and padding\n' +
        "      (0, _test.expect)(styles.border).not.toBe('none');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form elements consistently',
    scope: 'should handle form elements consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 48,
    started_at: '2025-08-05T18:10:51.061Z',
    finished_at: '2025-08-05T18:10:51.109Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile visual-consistency.spec.ts Visual Consistency Tests should handle form elements consistently'
    },
    hooks: [ 'dc0aba12-1c50-4b8d-a0a4-328202ccd9e9' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:10:59.777Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:59.761Z',
      uuid: 'de97ef1a-6dbf-4b9d-a2ae-79adf091cf55',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'de97ef1a-6dbf-4b9d-a2ae-79adf091cf55'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:10:59.763Z',
      uuid: 'de97ef1a-6dbf-4b9d-a2ae-79adf091cf55',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'de97ef1a-6dbf-4b9d-a2ae-79adf091cf55'
    }
  ]
} to 26381:0
2025-08-05T18:11:00.038Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:51.688Z',
      uuid: '8b3118bc-1fdb-4c2f-8c79-8622ecaca40e',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '8b3118bc-1fdb-4c2f-8c79-8622ecaca40e'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:51.719Z',
      uuid: '8b3118bc-1fdb-4c2f-8c79-8622ecaca40e',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '8b3118bc-1fdb-4c2f-8c79-8622ecaca40e'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:51.749Z',
      uuid: '8b3118bc-1fdb-4c2f-8c79-8622ecaca40e',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '8b3118bc-1fdb-4c2f-8c79-8622ecaca40e'
    }
  ]
} to 26381:0
2025-08-05T18:11:00.046Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '8b3118bc-1fdb-4c2f-8c79-8622ecaca40e',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'e4d3f9ba-340c-489b-921b-0b6bcf9008e4',
    body: { lang: 'node', code: null },
    scope: 'should handle dark mode consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    started_at: '2025-08-05T18:10:51.684Z',
    finished_at: '2025-08-05T18:11:00.031Z'
  }
} to 26381:0
2025-08-05T18:11:00.072Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'e4d3f9ba-340c-489b-921b-0b6bcf9008e4',
    name: 'should handle dark mode consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test dark mode colors\n' +
        '    await page.evaluate(() => {\n' +
        '      // Simulate dark mode\n' +
        "      document.documentElement.style.colorScheme = 'dark';\n" +
        "      document.documentElement.classList.add('dark');\n" +
        '    });\n' +
        '    await page.waitForTimeout(100);\n' +
        '\n' +
        '    // Check that dark mode colors are applied\n' +
        '    const bodyColor = await page.evaluate(() => {\n' +
        '      return window.getComputedStyle(document.body).backgroundColor;\n' +
        '    });\n' +
        '\n' +
        '    // Should have dark background in dark mode\n' +
        '    (0, _test.expect)(bodyColor).toMatch(/rgb\\(10, 10, 10\\)|rgba\\(10, 10, 10/);\n' +
        '  }'
    },
    identifier: 'should handle dark mode consistently',
    scope: 'should handle dark mode consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 50,
    started_at: '2025-08-05T18:10:51.672Z',
    finished_at: '2025-08-05T18:10:51.722Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile visual-consistency.spec.ts Visual Consistency Tests should handle dark mode consistently'
    },
    hooks: [ '8b3118bc-1fdb-4c2f-8c79-8622ecaca40e' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:00.075Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:00.055Z',
      uuid: 'e4d3f9ba-340c-489b-921b-0b6bcf9008e4',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'e4d3f9ba-340c-489b-921b-0b6bcf9008e4'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:00.055Z',
      uuid: 'e4d3f9ba-340c-489b-921b-0b6bcf9008e4',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'e4d3f9ba-340c-489b-921b-0b6bcf9008e4'
    }
  ]
} to 26381:0
2025-08-05T18:11:01.437Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'dc0aba12-1c50-4b8d-a0a4-328202ccd9e9',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'de97ef1a-6dbf-4b9d-a2ae-79adf091cf55',
      body: [Object],
      scope: 'should handle form elements consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      started_at: '2025-08-05T18:10:51.074Z',
      finished_at: '2025-08-05T18:10:59.735Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'de97ef1a-6dbf-4b9d-a2ae-79adf091cf55',
      name: 'should handle form elements consistently',
      body: [Object],
      identifier: 'should handle form elements consistently',
      scope: 'should handle form elements consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 48,
      started_at: '2025-08-05T18:10:51.061Z',
      finished_at: '2025-08-05T18:10:51.109Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '8b3118bc-1fdb-4c2f-8c79-8622ecaca40e',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'e4d3f9ba-340c-489b-921b-0b6bcf9008e4',
      body: [Object],
      scope: 'should handle dark mode consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      started_at: '2025-08-05T18:10:51.684Z',
      finished_at: '2025-08-05T18:11:00.031Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'e4d3f9ba-340c-489b-921b-0b6bcf9008e4',
      name: 'should handle dark mode consistently',
      body: [Object],
      identifier: 'should handle dark mode consistently',
      scope: 'should handle dark mode consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 50,
      started_at: '2025-08-05T18:10:51.672Z',
      finished_at: '2025-08-05T18:10:51.722Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:11:01.438Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:11:03.084Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '8ae3f801-f733-4ac0-b8bb-561ce109f9a4',
    name: 'should maintain accessibility standards',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test color contrast\n' +
        "    const textElements = page.locator('h1, h2, h3, p, span, div').filter({\n" +
        '      hasText: /./\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await textElements.count(), 5); i++) {\n' +
        '      const element = textElements.nth(i);\n' +
        '      const contrast = await element.evaluate(el => {\n' +
        '        const style = window.getComputedStyle(el);\n' +
        '        const backgroundColor = style.backgroundColor;\n' +
        '        const color = style.color;\n' +
        '\n' +
        "        // Simple contrast check - in a real test, you'd use a proper contrast calculation\n" +
        '        return {\n' +
        '          backgroundColor,\n' +
        '          color\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have defined colors\n' +
        "      (0, _test.expect)(contrast.backgroundColor).not.toBe('rgba(0, 0, 0, 0)');\n" +
        "      (0, _test.expect)(contrast.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain accessibility standards',
    scope: 'should maintain accessibility standards',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:11:03.072Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile visual-consistency.spec.ts Visual Consistency Tests should maintain accessibility standards'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:03.089Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'b02fa2dc-cc76-413f-9cf9-c6645743a0cf',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '8ae3f801-f733-4ac0-b8bb-561ce109f9a4',
    body: { lang: 'node', code: null },
    scope: 'should maintain accessibility standards',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    started_at: '2025-08-05T18:11:03.085Z'
  }
} to 26381:0
2025-08-05T18:11:03.301Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'e593de12-ae9b-41b4-a37d-92cbb6ddcf2e',
    name: 'should handle images and icons consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    const images = page.locator('img, svg');\n" +
        '    for (let i = 0; i < Math.min(await images.count(), 5); i++) {\n' +
        '      const image = images.nth(i);\n' +
        '\n' +
        '      // Check that images are properly loaded and visible\n' +
        '      const isVisible = await image.isVisible();\n' +
        '      (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        '      // Check that images have proper alt text or aria labels\n' +
        "      const altText = await image.getAttribute('alt');\n" +
        "      const ariaLabel = await image.getAttribute('aria-label');\n" +
        '      if (!altText && !ariaLabel) {\n' +
        '        // For decorative images, this might be acceptable\n' +
        "        const role = await image.getAttribute('role');\n" +
        "        (0, _test.expect)(role === 'presentation' || role === 'img').toBe(true);\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle images and icons consistently',
    scope: 'should handle images and icons consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:11:03.286Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile visual-consistency.spec.ts Visual Consistency Tests should handle images and icons consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:03.303Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'f94e1547-e0cf-4a45-a8c8-82e06d5d41f7',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'e593de12-ae9b-41b4-a37d-92cbb6ddcf2e',
    body: { lang: 'node', code: null },
    scope: 'should handle images and icons consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    started_at: '2025-08-05T18:11:03.294Z'
  }
} to 26381:0
2025-08-05T18:11:03.439Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '8ae3f801-f733-4ac0-b8bb-561ce109f9a4',
      name: 'should maintain accessibility standards',
      body: [Object],
      identifier: 'should maintain accessibility standards',
      scope: 'should maintain accessibility standards',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:11:03.072Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'b02fa2dc-cc76-413f-9cf9-c6645743a0cf',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '8ae3f801-f733-4ac0-b8bb-561ce109f9a4',
      body: [Object],
      scope: 'should maintain accessibility standards',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      started_at: '2025-08-05T18:11:03.085Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'e593de12-ae9b-41b4-a37d-92cbb6ddcf2e',
      name: 'should handle images and icons consistently',
      body: [Object],
      identifier: 'should handle images and icons consistently',
      scope: 'should handle images and icons consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:11:03.286Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'f94e1547-e0cf-4a45-a8c8-82e06d5d41f7',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'e593de12-ae9b-41b4-a37d-92cbb6ddcf2e',
      body: [Object],
      scope: 'should handle images and icons consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      started_at: '2025-08-05T18:11:03.294Z'
    }
  }
] to 26381:0
2025-08-05T18:11:03.440Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:11:11.289Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:03.299Z',
      uuid: 'f94e1547-e0cf-4a45-a8c8-82e06d5d41f7',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'f94e1547-e0cf-4a45-a8c8-82e06d5d41f7'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:03.324Z',
      uuid: 'f94e1547-e0cf-4a45-a8c8-82e06d5d41f7',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'f94e1547-e0cf-4a45-a8c8-82e06d5d41f7'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:03.353Z',
      uuid: 'f94e1547-e0cf-4a45-a8c8-82e06d5d41f7',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'f94e1547-e0cf-4a45-a8c8-82e06d5d41f7'
    }
  ]
} to 26381:0
2025-08-05T18:11:11.299Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'f94e1547-e0cf-4a45-a8c8-82e06d5d41f7',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'e593de12-ae9b-41b4-a37d-92cbb6ddcf2e',
    body: { lang: 'node', code: null },
    scope: 'should handle images and icons consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    started_at: '2025-08-05T18:11:03.294Z',
    finished_at: '2025-08-05T18:11:11.283Z'
  }
} to 26381:0
2025-08-05T18:11:11.354Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'e593de12-ae9b-41b4-a37d-92cbb6ddcf2e',
    name: 'should handle images and icons consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    const images = page.locator('img, svg');\n" +
        '    for (let i = 0; i < Math.min(await images.count(), 5); i++) {\n' +
        '      const image = images.nth(i);\n' +
        '\n' +
        '      // Check that images are properly loaded and visible\n' +
        '      const isVisible = await image.isVisible();\n' +
        '      (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        '      // Check that images have proper alt text or aria labels\n' +
        "      const altText = await image.getAttribute('alt');\n" +
        "      const ariaLabel = await image.getAttribute('aria-label');\n" +
        '      if (!altText && !ariaLabel) {\n' +
        '        // For decorative images, this might be acceptable\n' +
        "        const role = await image.getAttribute('role');\n" +
        "        (0, _test.expect)(role === 'presentation' || role === 'img').toBe(true);\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle images and icons consistently',
    scope: 'should handle images and icons consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 58,
    started_at: '2025-08-05T18:11:03.286Z',
    finished_at: '2025-08-05T18:11:03.344Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile visual-consistency.spec.ts Visual Consistency Tests should handle images and icons consistently'
    },
    hooks: [ 'f94e1547-e0cf-4a45-a8c8-82e06d5d41f7' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:11.355Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:11.322Z',
      uuid: 'e593de12-ae9b-41b4-a37d-92cbb6ddcf2e',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'e593de12-ae9b-41b4-a37d-92cbb6ddcf2e'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:11.322Z',
      uuid: 'e593de12-ae9b-41b4-a37d-92cbb6ddcf2e',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'e593de12-ae9b-41b4-a37d-92cbb6ddcf2e'
    }
  ]
} to 26381:0
2025-08-05T18:11:11.441Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'f94e1547-e0cf-4a45-a8c8-82e06d5d41f7',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'e593de12-ae9b-41b4-a37d-92cbb6ddcf2e',
      body: [Object],
      scope: 'should handle images and icons consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      started_at: '2025-08-05T18:11:03.294Z',
      finished_at: '2025-08-05T18:11:11.283Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'e593de12-ae9b-41b4-a37d-92cbb6ddcf2e',
      name: 'should handle images and icons consistently',
      body: [Object],
      identifier: 'should handle images and icons consistently',
      scope: 'should handle images and icons consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 58,
      started_at: '2025-08-05T18:11:03.286Z',
      finished_at: '2025-08-05T18:11:03.344Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:11:11.442Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:11:11.507Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:03.087Z',
      uuid: 'b02fa2dc-cc76-413f-9cf9-c6645743a0cf',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'b02fa2dc-cc76-413f-9cf9-c6645743a0cf'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:03.134Z',
      uuid: 'b02fa2dc-cc76-413f-9cf9-c6645743a0cf',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'b02fa2dc-cc76-413f-9cf9-c6645743a0cf'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:03.175Z',
      uuid: 'b02fa2dc-cc76-413f-9cf9-c6645743a0cf',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'b02fa2dc-cc76-413f-9cf9-c6645743a0cf'
    }
  ]
} to 26381:0
2025-08-05T18:11:11.521Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'b02fa2dc-cc76-413f-9cf9-c6645743a0cf',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '8ae3f801-f733-4ac0-b8bb-561ce109f9a4',
    body: { lang: 'node', code: null },
    scope: 'should maintain accessibility standards',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    started_at: '2025-08-05T18:11:03.085Z',
    finished_at: '2025-08-05T18:11:11.483Z'
  }
} to 26381:0
2025-08-05T18:11:11.531Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '8ae3f801-f733-4ac0-b8bb-561ce109f9a4',
    name: 'should maintain accessibility standards',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test color contrast\n' +
        "    const textElements = page.locator('h1, h2, h3, p, span, div').filter({\n" +
        '      hasText: /./\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await textElements.count(), 5); i++) {\n' +
        '      const element = textElements.nth(i);\n' +
        '      const contrast = await element.evaluate(el => {\n' +
        '        const style = window.getComputedStyle(el);\n' +
        '        const backgroundColor = style.backgroundColor;\n' +
        '        const color = style.color;\n' +
        '\n' +
        "        // Simple contrast check - in a real test, you'd use a proper contrast calculation\n" +
        '        return {\n' +
        '          backgroundColor,\n' +
        '          color\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have defined colors\n' +
        "      (0, _test.expect)(contrast.backgroundColor).not.toBe('rgba(0, 0, 0, 0)');\n" +
        "      (0, _test.expect)(contrast.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain accessibility standards',
    scope: 'should maintain accessibility standards',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 68,
    started_at: '2025-08-05T18:11:03.072Z',
    finished_at: '2025-08-05T18:11:03.140Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile visual-consistency.spec.ts Visual Consistency Tests should maintain accessibility standards'
    },
    hooks: [ 'b02fa2dc-cc76-413f-9cf9-c6645743a0cf' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:11.532Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:11.516Z',
      uuid: '8ae3f801-f733-4ac0-b8bb-561ce109f9a4',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '8ae3f801-f733-4ac0-b8bb-561ce109f9a4'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:11.517Z',
      uuid: '8ae3f801-f733-4ac0-b8bb-561ce109f9a4',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '8ae3f801-f733-4ac0-b8bb-561ce109f9a4'
    }
  ]
} to 26381:0
2025-08-05T18:11:13.442Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'b02fa2dc-cc76-413f-9cf9-c6645743a0cf',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '8ae3f801-f733-4ac0-b8bb-561ce109f9a4',
      body: [Object],
      scope: 'should maintain accessibility standards',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      started_at: '2025-08-05T18:11:03.085Z',
      finished_at: '2025-08-05T18:11:11.483Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '8ae3f801-f733-4ac0-b8bb-561ce109f9a4',
      name: 'should maintain accessibility standards',
      body: [Object],
      identifier: 'should maintain accessibility standards',
      scope: 'should maintain accessibility standards',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 68,
      started_at: '2025-08-05T18:11:03.072Z',
      finished_at: '2025-08-05T18:11:03.140Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:11:13.444Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:11:14.597Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '4bfbeb37-4686-487b-9f48-e333940c58b6',
    name: 'should display assessment questions consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Wait for assessment content to load\n' +
        `    await page.waitForSelector('[data-testid="assessment-question"], .question, h1, h2', {\n` +
        '      timeout: 10000\n' +
        '    });\n' +
        '\n' +
        '    // Check that questions are visible and properly styled\n' +
        `    const questions = page.locator('[data-testid="assessment-question"], .question, h1, h2').filter({\n` +
        '      hasText: /./\n' +
        '    });\n' +
        '    (0, _test.expect)(await questions.count()).toBeGreaterThan(0);\n' +
        '    for (let i = 0; i < Math.min(await questions.count(), 3); i++) {\n' +
        '      const question = questions.nth(i);\n' +
        '\n' +
        '      // Check visibility\n' +
        '      await (0, _test.expect)(question).toBeVisible();\n' +
        '\n' +
        '      // Check styling\n' +
        '      const styles = await question.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          fontSize: computed.fontSize,\n' +
        '          fontWeight: computed.fontWeight,\n' +
        '          color: computed.color,\n' +
        '          lineHeight: computed.lineHeight\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have readable text styling\n' +
        '      (0, _test.expect)(parseFloat(styles.fontSize)).toBeGreaterThan(12);\n' +
        "      (0, _test.expect)(styles.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display assessment questions consistently',
    scope: 'should display assessment questions consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:11:14.585Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should display assessment questions consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:14.611Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '624c2ae1-b4fa-45ba-916d-1d03bd94b987',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '4bfbeb37-4686-487b-9f48-e333940c58b6',
    body: { lang: 'node', code: null },
    scope: 'should display assessment questions consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    started_at: '2025-08-05T18:11:14.603Z'
  }
} to 26381:0
2025-08-05T18:11:14.632Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '351cdcc6-4b66-4073-834d-33426583e1a7',
    name: 'should handle form inputs consistently across browsers',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for form inputs (radio buttons, checkboxes, text inputs)\n' +
        "    const inputs = page.locator('input, textarea, select');\n" +
        '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
        '      const input = inputs.nth(i);\n' +
        '\n' +
        '      // Check input is visible and interactive\n' +
        '      await (0, _test.expect)(input).toBeVisible();\n' +
        "      const inputType = await input.getAttribute('type');\n" +
        "      if (inputType === 'radio' || inputType === 'checkbox') {\n" +
        '        // Test radio/checkbox functionality\n' +
        '        await input.click();\n' +
        '\n' +
        '        // Verify selection state\n' +
        '        const isChecked = await input.isChecked();\n' +
        '        (0, _test.expect)(isChecked).toBe(true);\n' +
        "      } else if (inputType === 'text' || inputType === 'textarea') {\n" +
        '        // Test text input functionality\n' +
        "        await input.fill('Test input');\n" +
        '        const value = await input.inputValue();\n' +
        "        (0, _test.expect)(value).toBe('Test input');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form inputs consistently across browsers',
    scope: 'should handle form inputs consistently across browsers',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:11:14.606Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form inputs consistently across browsers'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:14.633Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '10c2c301-2250-4ddb-a6ad-9661fe145b3e',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '351cdcc6-4b66-4073-834d-33426583e1a7',
    body: { lang: 'node', code: null },
    scope: 'should handle form inputs consistently across browsers',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    started_at: '2025-08-05T18:11:14.622Z'
  }
} to 26381:0
2025-08-05T18:11:15.442Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '4bfbeb37-4686-487b-9f48-e333940c58b6',
      name: 'should display assessment questions consistently',
      body: [Object],
      identifier: 'should display assessment questions consistently',
      scope: 'should display assessment questions consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:11:14.585Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '624c2ae1-b4fa-45ba-916d-1d03bd94b987',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '4bfbeb37-4686-487b-9f48-e333940c58b6',
      body: [Object],
      scope: 'should display assessment questions consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      started_at: '2025-08-05T18:11:14.603Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '351cdcc6-4b66-4073-834d-33426583e1a7',
      name: 'should handle form inputs consistently across browsers',
      body: [Object],
      identifier: 'should handle form inputs consistently across browsers',
      scope: 'should handle form inputs consistently across browsers',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:11:14.606Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '10c2c301-2250-4ddb-a6ad-9661fe145b3e',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '351cdcc6-4b66-4073-834d-33426583e1a7',
      body: [Object],
      scope: 'should handle form inputs consistently across browsers',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      started_at: '2025-08-05T18:11:14.622Z'
    }
  }
] to 26381:0
2025-08-05T18:11:15.444Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:11:18.071Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:51.545Z',
      uuid: 'ae0ef2a6-0f72-46fc-a8c1-af5255f9d286',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'ae0ef2a6-0f72-46fc-a8c1-af5255f9d286'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:51.571Z',
      uuid: 'ae0ef2a6-0f72-46fc-a8c1-af5255f9d286',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'ae0ef2a6-0f72-46fc-a8c1-af5255f9d286'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:10:51.600Z',
      uuid: 'ae0ef2a6-0f72-46fc-a8c1-af5255f9d286',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'ae0ef2a6-0f72-46fc-a8c1-af5255f9d286'
    }
  ]
} to 26381:0
2025-08-05T18:11:18.075Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'ae0ef2a6-0f72-46fc-a8c1-af5255f9d286',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'e3dd1352-8129-4d0f-8e61-36a792b5e127',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent spacing and alignment',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    started_at: '2025-08-05T18:10:51.538Z',
    finished_at: '2025-08-05T18:11:18.068Z'
  }
} to 26381:0
2025-08-05T18:11:18.114Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'e3dd1352-8129-4d0f-8e61-36a792b5e127',
    name: 'should maintain consistent spacing and alignment',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test that elements have consistent spacing\n' +
        "    const containers = page.locator('div, section, article').filter({\n" +
        '      hasText: /./\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await containers.count(), 10); i++) {\n' +
        '      const container = containers.nth(i);\n' +
        '      const styles = await container.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          margin: computed.margin,\n' +
        '          padding: computed.padding,\n' +
        '          display: computed.display\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have consistent display properties\n' +
        "      (0, _test.expect)(['block', 'flex', 'grid', 'inline-block']).toContain(styles.display);\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent spacing and alignment',
    scope: 'should maintain consistent spacing and alignment',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 45,
    started_at: '2025-08-05T18:10:51.524Z',
    finished_at: '2025-08-05T18:10:51.569Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile visual-consistency.spec.ts Visual Consistency Tests should maintain consistent spacing and alignment'
    },
    hooks: [ 'ae0ef2a6-0f72-46fc-a8c1-af5255f9d286' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:18.116Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:18.092Z',
      uuid: 'e3dd1352-8129-4d0f-8e61-36a792b5e127',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'e3dd1352-8129-4d0f-8e61-36a792b5e127'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:18.094Z',
      uuid: 'e3dd1352-8129-4d0f-8e61-36a792b5e127',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'e3dd1352-8129-4d0f-8e61-36a792b5e127'
    }
  ]
} to 26381:0
2025-08-05T18:11:19.299Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:14.605Z',
      uuid: '624c2ae1-b4fa-45ba-916d-1d03bd94b987',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '624c2ae1-b4fa-45ba-916d-1d03bd94b987'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:14.638Z',
      uuid: '624c2ae1-b4fa-45ba-916d-1d03bd94b987',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '624c2ae1-b4fa-45ba-916d-1d03bd94b987'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:14.671Z',
      uuid: '624c2ae1-b4fa-45ba-916d-1d03bd94b987',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '624c2ae1-b4fa-45ba-916d-1d03bd94b987'
    }
  ]
} to 26381:0
2025-08-05T18:11:19.304Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '624c2ae1-b4fa-45ba-916d-1d03bd94b987',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '4bfbeb37-4686-487b-9f48-e333940c58b6',
    body: { lang: 'node', code: null },
    scope: 'should display assessment questions consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    started_at: '2025-08-05T18:11:14.603Z',
    finished_at: '2025-08-05T18:11:19.291Z'
  }
} to 26381:0
2025-08-05T18:11:19.329Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '4bfbeb37-4686-487b-9f48-e333940c58b6',
    name: 'should display assessment questions consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Wait for assessment content to load\n' +
        `    await page.waitForSelector('[data-testid="assessment-question"], .question, h1, h2', {\n` +
        '      timeout: 10000\n' +
        '    });\n' +
        '\n' +
        '    // Check that questions are visible and properly styled\n' +
        `    const questions = page.locator('[data-testid="assessment-question"], .question, h1, h2').filter({\n` +
        '      hasText: /./\n' +
        '    });\n' +
        '    (0, _test.expect)(await questions.count()).toBeGreaterThan(0);\n' +
        '    for (let i = 0; i < Math.min(await questions.count(), 3); i++) {\n' +
        '      const question = questions.nth(i);\n' +
        '\n' +
        '      // Check visibility\n' +
        '      await (0, _test.expect)(question).toBeVisible();\n' +
        '\n' +
        '      // Check styling\n' +
        '      const styles = await question.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          fontSize: computed.fontSize,\n' +
        '          fontWeight: computed.fontWeight,\n' +
        '          color: computed.color,\n' +
        '          lineHeight: computed.lineHeight\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have readable text styling\n' +
        '      (0, _test.expect)(parseFloat(styles.fontSize)).toBeGreaterThan(12);\n' +
        "      (0, _test.expect)(styles.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display assessment questions consistently',
    scope: 'should display assessment questions consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 45,
    started_at: '2025-08-05T18:11:14.585Z',
    finished_at: '2025-08-05T18:11:14.630Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should display assessment questions consistently'
    },
    hooks: [ '624c2ae1-b4fa-45ba-916d-1d03bd94b987' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:19.330Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:19.311Z',
      uuid: '4bfbeb37-4686-487b-9f48-e333940c58b6',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '4bfbeb37-4686-487b-9f48-e333940c58b6'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:19.312Z',
      uuid: '4bfbeb37-4686-487b-9f48-e333940c58b6',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '4bfbeb37-4686-487b-9f48-e333940c58b6'
    }
  ]
} to 26381:0
2025-08-05T18:11:19.372Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:14.625Z',
      uuid: '10c2c301-2250-4ddb-a6ad-9661fe145b3e',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '10c2c301-2250-4ddb-a6ad-9661fe145b3e'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:14.656Z',
      uuid: '10c2c301-2250-4ddb-a6ad-9661fe145b3e',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '10c2c301-2250-4ddb-a6ad-9661fe145b3e'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:14.688Z',
      uuid: '10c2c301-2250-4ddb-a6ad-9661fe145b3e',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '10c2c301-2250-4ddb-a6ad-9661fe145b3e'
    }
  ]
} to 26381:0
2025-08-05T18:11:19.384Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '10c2c301-2250-4ddb-a6ad-9661fe145b3e',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '351cdcc6-4b66-4073-834d-33426583e1a7',
    body: { lang: 'node', code: null },
    scope: 'should handle form inputs consistently across browsers',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    started_at: '2025-08-05T18:11:14.622Z',
    finished_at: '2025-08-05T18:11:19.365Z'
  }
} to 26381:0
2025-08-05T18:11:19.403Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '351cdcc6-4b66-4073-834d-33426583e1a7',
    name: 'should handle form inputs consistently across browsers',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for form inputs (radio buttons, checkboxes, text inputs)\n' +
        "    const inputs = page.locator('input, textarea, select');\n" +
        '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
        '      const input = inputs.nth(i);\n' +
        '\n' +
        '      // Check input is visible and interactive\n' +
        '      await (0, _test.expect)(input).toBeVisible();\n' +
        "      const inputType = await input.getAttribute('type');\n" +
        "      if (inputType === 'radio' || inputType === 'checkbox') {\n" +
        '        // Test radio/checkbox functionality\n' +
        '        await input.click();\n' +
        '\n' +
        '        // Verify selection state\n' +
        '        const isChecked = await input.isChecked();\n' +
        '        (0, _test.expect)(isChecked).toBe(true);\n' +
        "      } else if (inputType === 'text' || inputType === 'textarea') {\n" +
        '        // Test text input functionality\n' +
        "        await input.fill('Test input');\n" +
        '        const value = await input.inputValue();\n' +
        "        (0, _test.expect)(value).toBe('Test input');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form inputs consistently across browsers',
    scope: 'should handle form inputs consistently across browsers',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 48,
    started_at: '2025-08-05T18:11:14.606Z',
    finished_at: '2025-08-05T18:11:14.654Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form inputs consistently across browsers'
    },
    hooks: [ '10c2c301-2250-4ddb-a6ad-9661fe145b3e' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:19.404Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:19.386Z',
      uuid: '351cdcc6-4b66-4073-834d-33426583e1a7',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '351cdcc6-4b66-4073-834d-33426583e1a7'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:19.387Z',
      uuid: '351cdcc6-4b66-4073-834d-33426583e1a7',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '351cdcc6-4b66-4073-834d-33426583e1a7'
    }
  ]
} to 26381:0
2025-08-05T18:11:19.450Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'ae0ef2a6-0f72-46fc-a8c1-af5255f9d286',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'e3dd1352-8129-4d0f-8e61-36a792b5e127',
      body: [Object],
      scope: 'should maintain consistent spacing and alignment',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      started_at: '2025-08-05T18:10:51.538Z',
      finished_at: '2025-08-05T18:11:18.068Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'e3dd1352-8129-4d0f-8e61-36a792b5e127',
      name: 'should maintain consistent spacing and alignment',
      body: [Object],
      identifier: 'should maintain consistent spacing and alignment',
      scope: 'should maintain consistent spacing and alignment',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 45,
      started_at: '2025-08-05T18:10:51.524Z',
      finished_at: '2025-08-05T18:10:51.569Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '624c2ae1-b4fa-45ba-916d-1d03bd94b987',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '4bfbeb37-4686-487b-9f48-e333940c58b6',
      body: [Object],
      scope: 'should display assessment questions consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      started_at: '2025-08-05T18:11:14.603Z',
      finished_at: '2025-08-05T18:11:19.291Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '4bfbeb37-4686-487b-9f48-e333940c58b6',
      name: 'should display assessment questions consistently',
      body: [Object],
      identifier: 'should display assessment questions consistently',
      scope: 'should display assessment questions consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 45,
      started_at: '2025-08-05T18:11:14.585Z',
      finished_at: '2025-08-05T18:11:14.630Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '10c2c301-2250-4ddb-a6ad-9661fe145b3e',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '351cdcc6-4b66-4073-834d-33426583e1a7',
      body: [Object],
      scope: 'should handle form inputs consistently across browsers',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      started_at: '2025-08-05T18:11:14.622Z',
      finished_at: '2025-08-05T18:11:19.365Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '351cdcc6-4b66-4073-834d-33426583e1a7',
      name: 'should handle form inputs consistently across browsers',
      body: [Object],
      identifier: 'should handle form inputs consistently across browsers',
      scope: 'should handle form inputs consistently across browsers',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 48,
      started_at: '2025-08-05T18:11:14.606Z',
      finished_at: '2025-08-05T18:11:14.654Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:11:19.451Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:11:21.588Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '88e3495f-b6b1-48db-82b3-16712758ad2f',
    name: 'should maintain consistent button styling and behavior',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        `    const buttons = page.locator('button, [role="button"], input[type="submit"]');\n` +
        '    for (let i = 0; i < Math.min(await buttons.count(), 3); i++) {\n' +
        '      const button = buttons.nth(i);\n' +
        '\n' +
        '      // Check button styling\n' +
        '      const styles = await button.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          backgroundColor: computed.backgroundColor,\n' +
        '          color: computed.color,\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding,\n' +
        '          cursor: computed.cursor\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have proper button styling\n' +
        "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '\n' +
        '      // Check button text is readable\n' +
        '      const buttonText = await button.textContent();\n' +
        '      if (buttonText && buttonText.trim()) {\n' +
        '        (0, _test.expect)(buttonText.trim().length).toBeGreaterThan(0);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent button styling and behavior',
    scope: 'should maintain consistent button styling and behavior',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:11:21.579Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent button styling and behavior'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:21.591Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '661eb59f-a130-42e3-a83f-c2d233a6955c',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '88e3495f-b6b1-48db-82b3-16712758ad2f',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent button styling and behavior',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    started_at: '2025-08-05T18:11:21.588Z'
  }
} to 26381:0
2025-08-05T18:11:22.932Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '5b2616f9-04cb-48be-a318-a833814c222a',
    name: 'should handle form validation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for submit buttons\n' +
        `    const submitButtons = page.locator('button[type="submit"], input[type="submit"], button:has-text("Submit"), button:has-text("Next")');\n` +
        '    if ((await submitButtons.count()) > 0) {\n' +
        '      const submitButton = submitButtons.first();\n' +
        '\n' +
        '      // Try to submit without filling required fields\n' +
        '      await submitButton.click();\n' +
        '\n' +
        '      // Wait for potential validation messages\n' +
        '      await page.waitForTimeout(1000);\n' +
        '\n' +
        '      // Check for validation messages\n' +
        `      const errorMessages = page.locator('.error, .validation-error, [role="alert"], .text-red-500, .text-red-600');\n` +
        '\n' +
        '      // If there are validation errors, they should be visible and styled consistently\n' +
        '      if ((await errorMessages.count()) > 0) {\n' +
        '        for (let i = 0; i < Math.min(await errorMessages.count(), 3); i++) {\n' +
        '          const error = errorMessages.nth(i);\n' +
        '          await (0, _test.expect)(error).toBeVisible();\n' +
        '\n' +
        '          // Check error styling\n' +
        '          const color = await error.evaluate(el => {\n' +
        '            return window.getComputedStyle(el).color;\n' +
        '          });\n' +
        '\n' +
        '          // Should have error color styling\n' +
        '          (0, _test.expect)(color).toMatch(/rgb\\(239, 68, 68\\)|rgb\\(220, 38, 38\\)|red/);\n' +
        '        }\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form validation consistently',
    scope: 'should handle form validation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:11:22.901Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form validation consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:22.970Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '237b9b31-d37d-43d7-9650-9c685bbced70',
    name: 'should handle responsive design for assessment flow',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    const viewports = [{\n' +
        '      width: 375,\n' +
        '      height: 667,\n' +
        "      name: 'Mobile'\n" +
        '    }, {\n' +
        '      width: 768,\n' +
        '      height: 1024,\n' +
        "      name: 'Tablet'\n" +
        '    }, {\n' +
        '      width: 1024,\n' +
        '      height: 768,\n' +
        "      name: 'Desktop'\n" +
        '    }];\n' +
        '    for (const viewport of viewports) {\n' +
        '      await page.setViewportSize({\n' +
        '        width: viewport.width,\n' +
        '        height: viewport.height\n' +
        '      });\n' +
        '      await page.waitForTimeout(500);\n' +
        '\n' +
        '      // Check that assessment content is properly contained\n' +
        `      const container = page.locator('main, .container, .assessment-container, [role="main"]').first();\n` +
        '      if ((await container.count()) > 0) {\n' +
        '        const isVisible = await container.isVisible();\n' +
        '        (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        '        // Check no horizontal overflow\n' +
        '        const overflow = await page.evaluate(() => {\n' +
        '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
        '        });\n' +
        '        (0, _test.expect)(overflow).toBe(true);\n' +
        '      }\n' +
        '\n' +
        '      // Check that form elements are still accessible\n' +
        "      const inputs = page.locator('input, textarea, select');\n" +
        '      if ((await inputs.count()) > 0) {\n' +
        '        const firstInput = inputs.first();\n' +
        '        await (0, _test.expect)(firstInput).toBeVisible();\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle responsive design for assessment flow',
    scope: 'should handle responsive design for assessment flow',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:11:22.912Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle responsive design for assessment flow'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:22.986Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '7d5c73d9-be93-4b0d-b921-15d2f6e8d917',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '5b2616f9-04cb-48be-a318-a833814c222a',
    body: { lang: 'node', code: null },
    scope: 'should handle form validation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    started_at: '2025-08-05T18:11:22.917Z'
  }
} to 26381:0
2025-08-05T18:11:22.986Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '9f63e951-d0b5-4a77-973e-7aace5180ad0',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '237b9b31-d37d-43d7-9650-9c685bbced70',
    body: { lang: 'node', code: null },
    scope: 'should handle responsive design for assessment flow',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    started_at: '2025-08-05T18:11:22.924Z'
  }
} to 26381:0
2025-08-05T18:11:23.450Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '88e3495f-b6b1-48db-82b3-16712758ad2f',
      name: 'should maintain consistent button styling and behavior',
      body: [Object],
      identifier: 'should maintain consistent button styling and behavior',
      scope: 'should maintain consistent button styling and behavior',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:11:21.579Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '661eb59f-a130-42e3-a83f-c2d233a6955c',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '88e3495f-b6b1-48db-82b3-16712758ad2f',
      body: [Object],
      scope: 'should maintain consistent button styling and behavior',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      started_at: '2025-08-05T18:11:21.588Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '5b2616f9-04cb-48be-a318-a833814c222a',
      name: 'should handle form validation consistently',
      body: [Object],
      identifier: 'should handle form validation consistently',
      scope: 'should handle form validation consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:11:22.901Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '237b9b31-d37d-43d7-9650-9c685bbced70',
      name: 'should handle responsive design for assessment flow',
      body: [Object],
      identifier: 'should handle responsive design for assessment flow',
      scope: 'should handle responsive design for assessment flow',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:11:22.912Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '7d5c73d9-be93-4b0d-b921-15d2f6e8d917',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '5b2616f9-04cb-48be-a318-a833814c222a',
      body: [Object],
      scope: 'should handle form validation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      started_at: '2025-08-05T18:11:22.917Z'
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '9f63e951-d0b5-4a77-973e-7aace5180ad0',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '237b9b31-d37d-43d7-9650-9c685bbced70',
      body: [Object],
      scope: 'should handle responsive design for assessment flow',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      started_at: '2025-08-05T18:11:22.924Z'
    }
  }
] to 26381:0
2025-08-05T18:11:23.452Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:11:26.065Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:21.600Z',
      uuid: '661eb59f-a130-42e3-a83f-c2d233a6955c',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '661eb59f-a130-42e3-a83f-c2d233a6955c'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:21.629Z',
      uuid: '661eb59f-a130-42e3-a83f-c2d233a6955c',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '661eb59f-a130-42e3-a83f-c2d233a6955c'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:21.662Z',
      uuid: '661eb59f-a130-42e3-a83f-c2d233a6955c',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '661eb59f-a130-42e3-a83f-c2d233a6955c'
    }
  ]
} to 26381:0
2025-08-05T18:11:26.071Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '661eb59f-a130-42e3-a83f-c2d233a6955c',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '88e3495f-b6b1-48db-82b3-16712758ad2f',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent button styling and behavior',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    started_at: '2025-08-05T18:11:21.588Z',
    finished_at: '2025-08-05T18:11:26.058Z'
  }
} to 26381:0
2025-08-05T18:11:26.107Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '88e3495f-b6b1-48db-82b3-16712758ad2f',
    name: 'should maintain consistent button styling and behavior',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        `    const buttons = page.locator('button, [role="button"], input[type="submit"]');\n` +
        '    for (let i = 0; i < Math.min(await buttons.count(), 3); i++) {\n' +
        '      const button = buttons.nth(i);\n' +
        '\n' +
        '      // Check button styling\n' +
        '      const styles = await button.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          backgroundColor: computed.backgroundColor,\n' +
        '          color: computed.color,\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding,\n' +
        '          cursor: computed.cursor\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have proper button styling\n' +
        "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '\n' +
        '      // Check button text is readable\n' +
        '      const buttonText = await button.textContent();\n' +
        '      if (buttonText && buttonText.trim()) {\n' +
        '        (0, _test.expect)(buttonText.trim().length).toBeGreaterThan(0);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent button styling and behavior',
    scope: 'should maintain consistent button styling and behavior',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 52,
    started_at: '2025-08-05T18:11:21.579Z',
    finished_at: '2025-08-05T18:11:21.631Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent button styling and behavior'
    },
    hooks: [ '661eb59f-a130-42e3-a83f-c2d233a6955c' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:26.107Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:26.087Z',
      uuid: '88e3495f-b6b1-48db-82b3-16712758ad2f',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '88e3495f-b6b1-48db-82b3-16712758ad2f'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:26.088Z',
      uuid: '88e3495f-b6b1-48db-82b3-16712758ad2f',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '88e3495f-b6b1-48db-82b3-16712758ad2f'
    }
  ]
} to 26381:0
2025-08-05T18:11:27.137Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:22.931Z',
      uuid: '9f63e951-d0b5-4a77-973e-7aace5180ad0',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '9f63e951-d0b5-4a77-973e-7aace5180ad0'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:22.957Z',
      uuid: '9f63e951-d0b5-4a77-973e-7aace5180ad0',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '9f63e951-d0b5-4a77-973e-7aace5180ad0'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:23.002Z',
      uuid: '9f63e951-d0b5-4a77-973e-7aace5180ad0',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '9f63e951-d0b5-4a77-973e-7aace5180ad0'
    }
  ]
} to 26381:0
2025-08-05T18:11:27.142Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '9f63e951-d0b5-4a77-973e-7aace5180ad0',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '237b9b31-d37d-43d7-9650-9c685bbced70',
    body: { lang: 'node', code: null },
    scope: 'should handle responsive design for assessment flow',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    started_at: '2025-08-05T18:11:22.924Z',
    finished_at: '2025-08-05T18:11:27.126Z'
  }
} to 26381:0
2025-08-05T18:11:27.176Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '237b9b31-d37d-43d7-9650-9c685bbced70',
    name: 'should handle responsive design for assessment flow',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    const viewports = [{\n' +
        '      width: 375,\n' +
        '      height: 667,\n' +
        "      name: 'Mobile'\n" +
        '    }, {\n' +
        '      width: 768,\n' +
        '      height: 1024,\n' +
        "      name: 'Tablet'\n" +
        '    }, {\n' +
        '      width: 1024,\n' +
        '      height: 768,\n' +
        "      name: 'Desktop'\n" +
        '    }];\n' +
        '    for (const viewport of viewports) {\n' +
        '      await page.setViewportSize({\n' +
        '        width: viewport.width,\n' +
        '        height: viewport.height\n' +
        '      });\n' +
        '      await page.waitForTimeout(500);\n' +
        '\n' +
        '      // Check that assessment content is properly contained\n' +
        `      const container = page.locator('main, .container, .assessment-container, [role="main"]').first();\n` +
        '      if ((await container.count()) > 0) {\n' +
        '        const isVisible = await container.isVisible();\n' +
        '        (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        '        // Check no horizontal overflow\n' +
        '        const overflow = await page.evaluate(() => {\n' +
        '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
        '        });\n' +
        '        (0, _test.expect)(overflow).toBe(true);\n' +
        '      }\n' +
        '\n' +
        '      // Check that form elements are still accessible\n' +
        "      const inputs = page.locator('input, textarea, select');\n" +
        '      if ((await inputs.count()) > 0) {\n' +
        '        const firstInput = inputs.first();\n' +
        '        await (0, _test.expect)(firstInput).toBeVisible();\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle responsive design for assessment flow',
    scope: 'should handle responsive design for assessment flow',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 57,
    started_at: '2025-08-05T18:11:22.912Z',
    finished_at: '2025-08-05T18:11:22.969Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle responsive design for assessment flow'
    },
    hooks: [ '9f63e951-d0b5-4a77-973e-7aace5180ad0' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:27.177Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:27.159Z',
      uuid: '237b9b31-d37d-43d7-9650-9c685bbced70',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '237b9b31-d37d-43d7-9650-9c685bbced70'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:27.162Z',
      uuid: '237b9b31-d37d-43d7-9650-9c685bbced70',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '237b9b31-d37d-43d7-9650-9c685bbced70'
    }
  ]
} to 26381:0
2025-08-05T18:11:27.451Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '661eb59f-a130-42e3-a83f-c2d233a6955c',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '88e3495f-b6b1-48db-82b3-16712758ad2f',
      body: [Object],
      scope: 'should maintain consistent button styling and behavior',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      started_at: '2025-08-05T18:11:21.588Z',
      finished_at: '2025-08-05T18:11:26.058Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '88e3495f-b6b1-48db-82b3-16712758ad2f',
      name: 'should maintain consistent button styling and behavior',
      body: [Object],
      identifier: 'should maintain consistent button styling and behavior',
      scope: 'should maintain consistent button styling and behavior',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 52,
      started_at: '2025-08-05T18:11:21.579Z',
      finished_at: '2025-08-05T18:11:21.631Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '9f63e951-d0b5-4a77-973e-7aace5180ad0',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '237b9b31-d37d-43d7-9650-9c685bbced70',
      body: [Object],
      scope: 'should handle responsive design for assessment flow',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      started_at: '2025-08-05T18:11:22.924Z',
      finished_at: '2025-08-05T18:11:27.126Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '237b9b31-d37d-43d7-9650-9c685bbced70',
      name: 'should handle responsive design for assessment flow',
      body: [Object],
      identifier: 'should handle responsive design for assessment flow',
      scope: 'should handle responsive design for assessment flow',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 57,
      started_at: '2025-08-05T18:11:22.912Z',
      finished_at: '2025-08-05T18:11:22.969Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:11:27.452Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:11:27.553Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:22.920Z',
      uuid: '7d5c73d9-be93-4b0d-b921-15d2f6e8d917',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '7d5c73d9-be93-4b0d-b921-15d2f6e8d917'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:22.951Z',
      uuid: '7d5c73d9-be93-4b0d-b921-15d2f6e8d917',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '7d5c73d9-be93-4b0d-b921-15d2f6e8d917'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:23.005Z',
      uuid: '7d5c73d9-be93-4b0d-b921-15d2f6e8d917',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '7d5c73d9-be93-4b0d-b921-15d2f6e8d917'
    }
  ]
} to 26381:0
2025-08-05T18:11:27.558Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '7d5c73d9-be93-4b0d-b921-15d2f6e8d917',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '5b2616f9-04cb-48be-a318-a833814c222a',
    body: { lang: 'node', code: null },
    scope: 'should handle form validation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    started_at: '2025-08-05T18:11:22.917Z',
    finished_at: '2025-08-05T18:11:27.549Z'
  }
} to 26381:0
2025-08-05T18:11:27.646Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '5b2616f9-04cb-48be-a318-a833814c222a',
    name: 'should handle form validation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for submit buttons\n' +
        `    const submitButtons = page.locator('button[type="submit"], input[type="submit"], button:has-text("Submit"), button:has-text("Next")');\n` +
        '    if ((await submitButtons.count()) > 0) {\n' +
        '      const submitButton = submitButtons.first();\n' +
        '\n' +
        '      // Try to submit without filling required fields\n' +
        '      await submitButton.click();\n' +
        '\n' +
        '      // Wait for potential validation messages\n' +
        '      await page.waitForTimeout(1000);\n' +
        '\n' +
        '      // Check for validation messages\n' +
        `      const errorMessages = page.locator('.error, .validation-error, [role="alert"], .text-red-500, .text-red-600');\n` +
        '\n' +
        '      // If there are validation errors, they should be visible and styled consistently\n' +
        '      if ((await errorMessages.count()) > 0) {\n' +
        '        for (let i = 0; i < Math.min(await errorMessages.count(), 3); i++) {\n' +
        '          const error = errorMessages.nth(i);\n' +
        '          await (0, _test.expect)(error).toBeVisible();\n' +
        '\n' +
        '          // Check error styling\n' +
        '          const color = await error.evaluate(el => {\n' +
        '            return window.getComputedStyle(el).color;\n' +
        '          });\n' +
        '\n' +
        '          // Should have error color styling\n' +
        '          (0, _test.expect)(color).toMatch(/rgb\\(239, 68, 68\\)|rgb\\(220, 38, 38\\)|red/);\n' +
        '        }\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form validation consistently',
    scope: 'should handle form validation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 45,
    started_at: '2025-08-05T18:11:22.901Z',
    finished_at: '2025-08-05T18:11:22.946Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form validation consistently'
    },
    hooks: [ '7d5c73d9-be93-4b0d-b921-15d2f6e8d917' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:27.647Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:27.568Z',
      uuid: '5b2616f9-04cb-48be-a318-a833814c222a',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '5b2616f9-04cb-48be-a318-a833814c222a'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:27.568Z',
      uuid: '5b2616f9-04cb-48be-a318-a833814c222a',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '5b2616f9-04cb-48be-a318-a833814c222a'
    }
  ]
} to 26381:0
2025-08-05T18:11:29.451Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '7d5c73d9-be93-4b0d-b921-15d2f6e8d917',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '5b2616f9-04cb-48be-a318-a833814c222a',
      body: [Object],
      scope: 'should handle form validation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      started_at: '2025-08-05T18:11:22.917Z',
      finished_at: '2025-08-05T18:11:27.549Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '5b2616f9-04cb-48be-a318-a833814c222a',
      name: 'should handle form validation consistently',
      body: [Object],
      identifier: 'should handle form validation consistently',
      scope: 'should handle form validation consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 45,
      started_at: '2025-08-05T18:11:22.901Z',
      finished_at: '2025-08-05T18:11:22.946Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:11:29.452Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:11:30.073Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '235eb349-9a92-442b-83d4-9aaeed6c4b57',
    name: 'should maintain consistent loading states',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for loading indicators\n' +
        `    const loadingIndicators = page.locator('.loading, .spinner, [aria-busy="true"], .animate-spin');\n` +
        '    if ((await loadingIndicators.count()) > 0) {\n' +
        '      for (let i = 0; i < Math.min(await loadingIndicators.count(), 3); i++) {\n' +
        '        const loader = loadingIndicators.nth(i);\n' +
        '\n' +
        '        // Check loading indicator is visible\n' +
        '        await (0, _test.expect)(loader).toBeVisible();\n' +
        '\n' +
        '        // Check it has proper styling\n' +
        '        const styles = await loader.evaluate(el => {\n' +
        '          const computed = window.getComputedStyle(el);\n' +
        '          return {\n' +
        '            display: computed.display,\n' +
        '            visibility: computed.visibility\n' +
        '          };\n' +
        '        });\n' +
        "        (0, _test.expect)(styles.display).not.toBe('none');\n" +
        "        (0, _test.expect)(styles.visibility).not.toBe('hidden');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent loading states',
    scope: 'should maintain consistent loading states',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:11:30.062Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent loading states'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:30.089Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'b1b6e319-ce5d-496d-b45c-ef4ea1ffaa2a',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '235eb349-9a92-442b-83d4-9aaeed6c4b57',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent loading states',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    started_at: '2025-08-05T18:11:30.074Z'
  }
} to 26381:0
2025-08-05T18:11:31.164Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'ab37acc3-aa9b-44dc-b263-2f11bbb813a8',
    name: 'should handle navigation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test navigation buttons/links\n' +
        `    const navButtons = page.locator('a, button, [role="link"]').filter({\n` +
        '      hasText: /back|next|previous|continue/i\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await navButtons.count(), 3); i++) {\n' +
        '      const navButton = navButtons.nth(i);\n' +
        '\n' +
        '      // Check navigation element is visible and clickable\n' +
        '      await (0, _test.expect)(navButton).toBeVisible();\n' +
        '      const styles = await navButton.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          cursor: computed.cursor,\n' +
        '          pointerEvents: computed.pointerEvents\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should be clickable\n' +
        "      (0, _test.expect)(['pointer', 'default']).toContain(styles.cursor);\n" +
        "      (0, _test.expect)(styles.pointerEvents).not.toBe('none');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle navigation consistently',
    scope: 'should handle navigation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:11:31.151Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle navigation consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:31.170Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'b5330d29-82db-465f-9557-e550ebd7bae0',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'ab37acc3-aa9b-44dc-b263-2f11bbb813a8',
    body: { lang: 'node', code: null },
    scope: 'should handle navigation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    started_at: '2025-08-05T18:11:31.167Z'
  }
} to 26381:0
2025-08-05T18:11:31.419Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '123f0a36-d1d6-457e-a8a0-855b7966f196',
    name: 'should connect to BrowserStack and load the homepage',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to the homepage\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-connection-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load the homepage',
    scope: 'should connect to BrowserStack and load the homepage',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:11:31.409Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should connect to BrowserStack and load the homepage'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:31.452Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '235eb349-9a92-442b-83d4-9aaeed6c4b57',
      name: 'should maintain consistent loading states',
      body: [Object],
      identifier: 'should maintain consistent loading states',
      scope: 'should maintain consistent loading states',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:11:30.062Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'b1b6e319-ce5d-496d-b45c-ef4ea1ffaa2a',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '235eb349-9a92-442b-83d4-9aaeed6c4b57',
      body: [Object],
      scope: 'should maintain consistent loading states',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      started_at: '2025-08-05T18:11:30.074Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'ab37acc3-aa9b-44dc-b263-2f11bbb813a8',
      name: 'should handle navigation consistently',
      body: [Object],
      identifier: 'should handle navigation consistently',
      scope: 'should handle navigation consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:11:31.151Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'b5330d29-82db-465f-9557-e550ebd7bae0',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'ab37acc3-aa9b-44dc-b263-2f11bbb813a8',
      body: [Object],
      scope: 'should handle navigation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      started_at: '2025-08-05T18:11:31.167Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '123f0a36-d1d6-457e-a8a0-855b7966f196',
      name: 'should connect to BrowserStack and load the homepage',
      body: [Object],
      identifier: 'should connect to BrowserStack and load the homepage',
      scope: 'should connect to BrowserStack and load the homepage',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:11:31.409Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 26381:0
2025-08-05T18:11:31.453Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:11:34.079Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:30.078Z',
      uuid: 'b1b6e319-ce5d-496d-b45c-ef4ea1ffaa2a',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'b1b6e319-ce5d-496d-b45c-ef4ea1ffaa2a'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:30.105Z',
      uuid: 'b1b6e319-ce5d-496d-b45c-ef4ea1ffaa2a',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'b1b6e319-ce5d-496d-b45c-ef4ea1ffaa2a'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:30.137Z',
      uuid: 'b1b6e319-ce5d-496d-b45c-ef4ea1ffaa2a',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'b1b6e319-ce5d-496d-b45c-ef4ea1ffaa2a'
    }
  ]
} to 26381:0
2025-08-05T18:11:34.090Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'b1b6e319-ce5d-496d-b45c-ef4ea1ffaa2a',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '235eb349-9a92-442b-83d4-9aaeed6c4b57',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent loading states',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    started_at: '2025-08-05T18:11:30.074Z',
    finished_at: '2025-08-05T18:11:34.058Z'
  }
} to 26381:0
2025-08-05T18:11:34.121Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '235eb349-9a92-442b-83d4-9aaeed6c4b57',
    name: 'should maintain consistent loading states',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for loading indicators\n' +
        `    const loadingIndicators = page.locator('.loading, .spinner, [aria-busy="true"], .animate-spin');\n` +
        '    if ((await loadingIndicators.count()) > 0) {\n' +
        '      for (let i = 0; i < Math.min(await loadingIndicators.count(), 3); i++) {\n' +
        '        const loader = loadingIndicators.nth(i);\n' +
        '\n' +
        '        // Check loading indicator is visible\n' +
        '        await (0, _test.expect)(loader).toBeVisible();\n' +
        '\n' +
        '        // Check it has proper styling\n' +
        '        const styles = await loader.evaluate(el => {\n' +
        '          const computed = window.getComputedStyle(el);\n' +
        '          return {\n' +
        '            display: computed.display,\n' +
        '            visibility: computed.visibility\n' +
        '          };\n' +
        '        });\n' +
        "        (0, _test.expect)(styles.display).not.toBe('none');\n" +
        "        (0, _test.expect)(styles.visibility).not.toBe('hidden');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent loading states',
    scope: 'should maintain consistent loading states',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 53,
    started_at: '2025-08-05T18:11:30.062Z',
    finished_at: '2025-08-05T18:11:30.115Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent loading states'
    },
    hooks: [ 'b1b6e319-ce5d-496d-b45c-ef4ea1ffaa2a' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:34.122Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:34.091Z',
      uuid: '235eb349-9a92-442b-83d4-9aaeed6c4b57',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '235eb349-9a92-442b-83d4-9aaeed6c4b57'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:34.093Z',
      uuid: '235eb349-9a92-442b-83d4-9aaeed6c4b57',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '235eb349-9a92-442b-83d4-9aaeed6c4b57'
    }
  ]
} to 26381:0
2025-08-05T18:11:35.200Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:31.171Z',
      uuid: 'b5330d29-82db-465f-9557-e550ebd7bae0',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'b5330d29-82db-465f-9557-e550ebd7bae0'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:31.200Z',
      uuid: 'b5330d29-82db-465f-9557-e550ebd7bae0',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'b5330d29-82db-465f-9557-e550ebd7bae0'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:31.227Z',
      uuid: 'b5330d29-82db-465f-9557-e550ebd7bae0',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'b5330d29-82db-465f-9557-e550ebd7bae0'
    }
  ]
} to 26381:0
2025-08-05T18:11:35.204Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'b5330d29-82db-465f-9557-e550ebd7bae0',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'ab37acc3-aa9b-44dc-b263-2f11bbb813a8',
    body: { lang: 'node', code: null },
    scope: 'should handle navigation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    started_at: '2025-08-05T18:11:31.167Z',
    finished_at: '2025-08-05T18:11:35.195Z'
  }
} to 26381:0
2025-08-05T18:11:35.238Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'ab37acc3-aa9b-44dc-b263-2f11bbb813a8',
    name: 'should handle navigation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test navigation buttons/links\n' +
        `    const navButtons = page.locator('a, button, [role="link"]').filter({\n` +
        '      hasText: /back|next|previous|continue/i\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await navButtons.count(), 3); i++) {\n' +
        '      const navButton = navButtons.nth(i);\n' +
        '\n' +
        '      // Check navigation element is visible and clickable\n' +
        '      await (0, _test.expect)(navButton).toBeVisible();\n' +
        '      const styles = await navButton.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          cursor: computed.cursor,\n' +
        '          pointerEvents: computed.pointerEvents\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should be clickable\n' +
        "      (0, _test.expect)(['pointer', 'default']).toContain(styles.cursor);\n" +
        "      (0, _test.expect)(styles.pointerEvents).not.toBe('none');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle navigation consistently',
    scope: 'should handle navigation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 44,
    started_at: '2025-08-05T18:11:31.151Z',
    finished_at: '2025-08-05T18:11:31.195Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle navigation consistently'
    },
    hooks: [ 'b5330d29-82db-465f-9557-e550ebd7bae0' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:35.239Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:35.216Z',
      uuid: 'ab37acc3-aa9b-44dc-b263-2f11bbb813a8',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'ab37acc3-aa9b-44dc-b263-2f11bbb813a8'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:35.217Z',
      uuid: 'ab37acc3-aa9b-44dc-b263-2f11bbb813a8',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'ab37acc3-aa9b-44dc-b263-2f11bbb813a8'
    }
  ]
} to 26381:0
2025-08-05T18:11:35.453Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'b1b6e319-ce5d-496d-b45c-ef4ea1ffaa2a',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '235eb349-9a92-442b-83d4-9aaeed6c4b57',
      body: [Object],
      scope: 'should maintain consistent loading states',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      started_at: '2025-08-05T18:11:30.074Z',
      finished_at: '2025-08-05T18:11:34.058Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '235eb349-9a92-442b-83d4-9aaeed6c4b57',
      name: 'should maintain consistent loading states',
      body: [Object],
      identifier: 'should maintain consistent loading states',
      scope: 'should maintain consistent loading states',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 53,
      started_at: '2025-08-05T18:11:30.062Z',
      finished_at: '2025-08-05T18:11:30.115Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'b5330d29-82db-465f-9557-e550ebd7bae0',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'ab37acc3-aa9b-44dc-b263-2f11bbb813a8',
      body: [Object],
      scope: 'should handle navigation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      started_at: '2025-08-05T18:11:31.167Z',
      finished_at: '2025-08-05T18:11:35.195Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'ab37acc3-aa9b-44dc-b263-2f11bbb813a8',
      name: 'should handle navigation consistently',
      body: [Object],
      identifier: 'should handle navigation consistently',
      scope: 'should handle navigation consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 44,
      started_at: '2025-08-05T18:11:31.151Z',
      finished_at: '2025-08-05T18:11:31.195Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:11:35.454Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:11:35.730Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '123f0a36-d1d6-457e-a8a0-855b7966f196',
    name: 'should connect to BrowserStack and load the homepage',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to the homepage\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-connection-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load the homepage',
    scope: 'should connect to BrowserStack and load the homepage',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'failed',
    duration_in_ms: 38,
    started_at: '2025-08-05T18:11:31.409Z',
    finished_at: '2025-08-05T18:11:31.447Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should connect to BrowserStack and load the homepage'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:35.732Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:35.687Z',
      uuid: '123f0a36-d1d6-457e-a8a0-855b7966f196',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '123f0a36-d1d6-457e-a8a0-855b7966f196'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:35.688Z',
      uuid: '123f0a36-d1d6-457e-a8a0-855b7966f196',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '123f0a36-d1d6-457e-a8a0-855b7966f196'
    }
  ]
} to 26381:0
2025-08-05T18:11:37.454Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '123f0a36-d1d6-457e-a8a0-855b7966f196',
      name: 'should connect to BrowserStack and load the homepage',
      body: [Object],
      identifier: 'should connect to BrowserStack and load the homepage',
      scope: 'should connect to BrowserStack and load the homepage',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'failed',
      duration_in_ms: 38,
      started_at: '2025-08-05T18:11:31.409Z',
      finished_at: '2025-08-05T18:11:31.447Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:11:37.454Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:11:37.722Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '51e808e7-4acd-43c8-bf28-665442c53870',
    name: 'should display consistent branding colors',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for any elements with Gutcheck brand colors\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    if ((await gutcheckElements.count()) > 0) {\n' +
        '      console.log(`🎨 Found ${await gutcheckElements.count()} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display consistent branding colors',
    scope: 'should display consistent branding colors',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:11:37.701Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should display consistent branding colors'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:38.758Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'c33a0f56-0cd4-451e-bb50-c4ad2531d86d',
    name: 'should connect to BrowserStack and load a public website',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to a public website instead of localhost\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-public-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '    console.log(`🌐 URL: ${page.url()}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load a public website',
    scope: 'should connect to BrowserStack and load a public website',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:11:38.742Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should connect to BrowserStack and load a public website'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:39.195Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b5c6a4a4-6237-4432-ae89-1e9b9fb872da',
    name: 'should verify browser capabilities',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Get browser information\n' +
        '    const userAgent = await page.evaluate(() => navigator.userAgent);\n' +
        '    const viewport = page.viewportSize();\n' +
        '    console.log(`🔍 User Agent: ${userAgent}`);\n' +
        '    console.log(`📐 Viewport: ${viewport === null || viewport === void 0 ? void 0 : viewport.width}x${viewport === null || viewport === void 0 ? void 0 : viewport.height}`);\n' +
        '\n' +
        "    // Verify we're running in a real browser environment\n" +
        "    (0, _test.expect)(userAgent).toContain('Chrome');\n" +
        '    (0, _test.expect)(viewport).toBeTruthy();\n' +
        '  }'
    },
    identifier: 'should verify browser capabilities',
    scope: 'should verify browser capabilities',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:11:39.185Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should verify browser capabilities'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:39.455Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '51e808e7-4acd-43c8-bf28-665442c53870',
      name: 'should display consistent branding colors',
      body: [Object],
      identifier: 'should display consistent branding colors',
      scope: 'should display consistent branding colors',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:11:37.701Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'c33a0f56-0cd4-451e-bb50-c4ad2531d86d',
      name: 'should connect to BrowserStack and load a public website',
      body: [Object],
      identifier: 'should connect to BrowserStack and load a public website',
      scope: 'should connect to BrowserStack and load a public website',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:11:38.742Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b5c6a4a4-6237-4432-ae89-1e9b9fb872da',
      name: 'should verify browser capabilities',
      body: [Object],
      identifier: 'should verify browser capabilities',
      scope: 'should verify browser capabilities',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:11:39.185Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 26381:0
2025-08-05T18:11:39.456Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:11:41.791Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '51e808e7-4acd-43c8-bf28-665442c53870',
    name: 'should display consistent branding colors',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for any elements with Gutcheck brand colors\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    if ((await gutcheckElements.count()) > 0) {\n' +
        '      console.log(`🎨 Found ${await gutcheckElements.count()} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display consistent branding colors',
    scope: 'should display consistent branding colors',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'failed',
    duration_in_ms: 70,
    started_at: '2025-08-05T18:11:37.701Z',
    finished_at: '2025-08-05T18:11:37.771Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should display consistent branding colors'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:41.792Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:41.772Z',
      uuid: '51e808e7-4acd-43c8-bf28-665442c53870',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '51e808e7-4acd-43c8-bf28-665442c53870'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:41.773Z',
      uuid: '51e808e7-4acd-43c8-bf28-665442c53870',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '51e808e7-4acd-43c8-bf28-665442c53870'
    }
  ]
} to 26381:0
2025-08-05T18:11:43.133Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'c33a0f56-0cd4-451e-bb50-c4ad2531d86d',
    name: 'should connect to BrowserStack and load a public website',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to a public website instead of localhost\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-public-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '    console.log(`🌐 URL: ${page.url()}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load a public website',
    scope: 'should connect to BrowserStack and load a public website',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'failed',
    duration_in_ms: 66,
    started_at: '2025-08-05T18:11:38.742Z',
    finished_at: '2025-08-05T18:11:38.808Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should connect to BrowserStack and load a public website'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:43.134Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:43.117Z',
      uuid: 'c33a0f56-0cd4-451e-bb50-c4ad2531d86d',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'c33a0f56-0cd4-451e-bb50-c4ad2531d86d'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:43.118Z',
      uuid: 'c33a0f56-0cd4-451e-bb50-c4ad2531d86d',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'c33a0f56-0cd4-451e-bb50-c4ad2531d86d'
    }
  ]
} to 26381:0
2025-08-05T18:11:43.219Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b5c6a4a4-6237-4432-ae89-1e9b9fb872da',
    name: 'should verify browser capabilities',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Get browser information\n' +
        '    const userAgent = await page.evaluate(() => navigator.userAgent);\n' +
        '    const viewport = page.viewportSize();\n' +
        '    console.log(`🔍 User Agent: ${userAgent}`);\n' +
        '    console.log(`📐 Viewport: ${viewport === null || viewport === void 0 ? void 0 : viewport.width}x${viewport === null || viewport === void 0 ? void 0 : viewport.height}`);\n' +
        '\n' +
        "    // Verify we're running in a real browser environment\n" +
        "    (0, _test.expect)(userAgent).toContain('Chrome');\n" +
        '    (0, _test.expect)(viewport).toBeTruthy();\n' +
        '  }'
    },
    identifier: 'should verify browser capabilities',
    scope: 'should verify browser capabilities',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'failed',
    duration_in_ms: 55,
    started_at: '2025-08-05T18:11:39.185Z',
    finished_at: '2025-08-05T18:11:39.240Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should verify browser capabilities'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:43.220Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:43.203Z',
      uuid: 'b5c6a4a4-6237-4432-ae89-1e9b9fb872da',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b5c6a4a4-6237-4432-ae89-1e9b9fb872da'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:43.204Z',
      uuid: 'b5c6a4a4-6237-4432-ae89-1e9b9fb872da',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b5c6a4a4-6237-4432-ae89-1e9b9fb872da'
    }
  ]
} to 26381:0
2025-08-05T18:11:43.457Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '51e808e7-4acd-43c8-bf28-665442c53870',
      name: 'should display consistent branding colors',
      body: [Object],
      identifier: 'should display consistent branding colors',
      scope: 'should display consistent branding colors',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'failed',
      duration_in_ms: 70,
      started_at: '2025-08-05T18:11:37.701Z',
      finished_at: '2025-08-05T18:11:37.771Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'c33a0f56-0cd4-451e-bb50-c4ad2531d86d',
      name: 'should connect to BrowserStack and load a public website',
      body: [Object],
      identifier: 'should connect to BrowserStack and load a public website',
      scope: 'should connect to BrowserStack and load a public website',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'failed',
      duration_in_ms: 66,
      started_at: '2025-08-05T18:11:38.742Z',
      finished_at: '2025-08-05T18:11:38.808Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b5c6a4a4-6237-4432-ae89-1e9b9fb872da',
      name: 'should verify browser capabilities',
      body: [Object],
      identifier: 'should verify browser capabilities',
      scope: 'should verify browser capabilities',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'failed',
      duration_in_ms: 55,
      started_at: '2025-08-05T18:11:39.185Z',
      finished_at: '2025-08-05T18:11:39.240Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:11:43.457Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:11:45.433Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'e1e2594d-fbe0-4b28-9340-be6c4da939d0',
    name: 'should display consistent colors across browsers',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test Gutcheck brand colors\n' +
        '    const colorTests = [{\n' +
        "      selector: '.bg-gutcheck-deep-navy',\n" +
        "      expectedColor: 'rgb(10, 31, 68)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-electric-blue',\n" +
        "      expectedColor: 'rgb(20, 122, 255)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-vibrant-teal',\n" +
        "      expectedColor: 'rgb(25, 194, 160)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-bright-orange',\n" +
        "      expectedColor: 'rgb(255, 107, 0)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-bright-yellow',\n" +
        "      expectedColor: 'rgb(255, 199, 0)'\n" +
        '    }];\n' +
        '    for (const test of colorTests) {\n' +
        '      const element = page.locator(test.selector).first();\n' +
        '      if ((await element.count()) > 0) {\n' +
        '        const backgroundColor = await element.evaluate(el => {\n' +
        '          return window.getComputedStyle(el).backgroundColor;\n' +
        '        });\n' +
        '        (0, _test.expect)(backgroundColor).toBe(test.expectedColor);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should display consistent colors across browsers',
    scope: 'should display consistent colors across browsers',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:11:45.415Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should display consistent colors across browsers'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:45.440Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '172684e8-0d58-4d3f-9068-e57ec1b43709',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'e1e2594d-fbe0-4b28-9340-be6c4da939d0',
    body: { lang: 'node', code: null },
    scope: 'should display consistent colors across browsers',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    started_at: '2025-08-05T18:11:45.422Z'
  }
} to 26381:0
2025-08-05T18:11:45.457Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'e1e2594d-fbe0-4b28-9340-be6c4da939d0',
      name: 'should display consistent colors across browsers',
      body: [Object],
      identifier: 'should display consistent colors across browsers',
      scope: 'should display consistent colors across browsers',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:11:45.415Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '172684e8-0d58-4d3f-9068-e57ec1b43709',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'e1e2594d-fbe0-4b28-9340-be6c4da939d0',
      body: [Object],
      scope: 'should display consistent colors across browsers',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      started_at: '2025-08-05T18:11:45.422Z'
    }
  }
] to 26381:0
2025-08-05T18:11:45.458Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:11:46.683Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '15e0fac5-1213-4317-98de-6e35a3404ac2',
    name: 'should have consistent button styling',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    const buttons = page.locator('button');\n" +
        '    for (let i = 0; i < Math.min(await buttons.count(), 5); i++) {\n' +
        '      const button = buttons.nth(i);\n' +
        '\n' +
        '      // Check button has proper styling\n' +
        '      const styles = await button.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding,\n' +
        '          cursor: computed.cursor\n' +
        '        };\n' +
        '      });\n' +
        "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
        "      (0, _test.expect)(styles.borderRadius).not.toBe('0px');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should have consistent button styling',
    scope: 'should have consistent button styling',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:11:46.668Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should have consistent button styling'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:46.716Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '12b48d6a-2f24-4efd-b575-7db7b12d1f7b',
    name: 'should maintain consistent typography',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test font family consistency\n' +
        "    const textElements = page.locator('h1, h2, h3, p, button, input, textarea');\n" +
        '    for (let i = 0; i < Math.min(await textElements.count(), 10); i++) {\n' +
        '      const element = textElements.nth(i);\n' +
        '      const fontFamily = await element.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).fontFamily;\n' +
        '      });\n' +
        '\n' +
        '      // Should use Inter font family or fallback to system fonts\n' +
        '      (0, _test.expect)(fontFamily).toMatch(/Inter|system-ui|sans-serif/);\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent typography',
    scope: 'should maintain consistent typography',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:11:46.676Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain consistent typography'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:46.717Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'f4711dfc-b75c-478d-a012-924fc09b192b',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '15e0fac5-1213-4317-98de-6e35a3404ac2',
    body: { lang: 'node', code: null },
    scope: 'should have consistent button styling',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    started_at: '2025-08-05T18:11:46.681Z'
  }
} to 26381:0
2025-08-05T18:11:46.719Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '7235dff9-6296-4364-bc7e-83d8d3b4d84d',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '12b48d6a-2f24-4efd-b575-7db7b12d1f7b',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent typography',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    started_at: '2025-08-05T18:11:46.686Z'
  }
} to 26381:0
2025-08-05T18:11:47.458Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '15e0fac5-1213-4317-98de-6e35a3404ac2',
      name: 'should have consistent button styling',
      body: [Object],
      identifier: 'should have consistent button styling',
      scope: 'should have consistent button styling',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:11:46.668Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '12b48d6a-2f24-4efd-b575-7db7b12d1f7b',
      name: 'should maintain consistent typography',
      body: [Object],
      identifier: 'should maintain consistent typography',
      scope: 'should maintain consistent typography',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:11:46.676Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'f4711dfc-b75c-478d-a012-924fc09b192b',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '15e0fac5-1213-4317-98de-6e35a3404ac2',
      body: [Object],
      scope: 'should have consistent button styling',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      started_at: '2025-08-05T18:11:46.681Z'
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '7235dff9-6296-4364-bc7e-83d8d3b4d84d',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '12b48d6a-2f24-4efd-b575-7db7b12d1f7b',
      body: [Object],
      scope: 'should maintain consistent typography',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      started_at: '2025-08-05T18:11:46.686Z'
    }
  }
] to 26381:0
2025-08-05T18:11:47.459Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:11:49.464Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:45.428Z',
      uuid: '172684e8-0d58-4d3f-9068-e57ec1b43709',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '172684e8-0d58-4d3f-9068-e57ec1b43709'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:45.460Z',
      uuid: '172684e8-0d58-4d3f-9068-e57ec1b43709',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '172684e8-0d58-4d3f-9068-e57ec1b43709'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:45.491Z',
      uuid: '172684e8-0d58-4d3f-9068-e57ec1b43709',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '172684e8-0d58-4d3f-9068-e57ec1b43709'
    }
  ]
} to 26381:0
2025-08-05T18:11:49.473Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '172684e8-0d58-4d3f-9068-e57ec1b43709',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'e1e2594d-fbe0-4b28-9340-be6c4da939d0',
    body: { lang: 'node', code: null },
    scope: 'should display consistent colors across browsers',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    started_at: '2025-08-05T18:11:45.422Z',
    finished_at: '2025-08-05T18:11:49.456Z'
  }
} to 26381:0
2025-08-05T18:11:49.523Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'e1e2594d-fbe0-4b28-9340-be6c4da939d0',
    name: 'should display consistent colors across browsers',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test Gutcheck brand colors\n' +
        '    const colorTests = [{\n' +
        "      selector: '.bg-gutcheck-deep-navy',\n" +
        "      expectedColor: 'rgb(10, 31, 68)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-electric-blue',\n" +
        "      expectedColor: 'rgb(20, 122, 255)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-vibrant-teal',\n" +
        "      expectedColor: 'rgb(25, 194, 160)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-bright-orange',\n" +
        "      expectedColor: 'rgb(255, 107, 0)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-bright-yellow',\n" +
        "      expectedColor: 'rgb(255, 199, 0)'\n" +
        '    }];\n' +
        '    for (const test of colorTests) {\n' +
        '      const element = page.locator(test.selector).first();\n' +
        '      if ((await element.count()) > 0) {\n' +
        '        const backgroundColor = await element.evaluate(el => {\n' +
        '          return window.getComputedStyle(el).backgroundColor;\n' +
        '        });\n' +
        '        (0, _test.expect)(backgroundColor).toBe(test.expectedColor);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should display consistent colors across browsers',
    scope: 'should display consistent colors across browsers',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 67,
    started_at: '2025-08-05T18:11:45.415Z',
    finished_at: '2025-08-05T18:11:45.482Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should display consistent colors across browsers'
    },
    hooks: [ '172684e8-0d58-4d3f-9068-e57ec1b43709' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:49.524Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:49.493Z',
      uuid: 'e1e2594d-fbe0-4b28-9340-be6c4da939d0',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'e1e2594d-fbe0-4b28-9340-be6c4da939d0'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:49.495Z',
      uuid: 'e1e2594d-fbe0-4b28-9340-be6c4da939d0',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'e1e2594d-fbe0-4b28-9340-be6c4da939d0'
    }
  ]
} to 26381:0
2025-08-05T18:11:50.905Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:46.689Z',
      uuid: '7235dff9-6296-4364-bc7e-83d8d3b4d84d',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '7235dff9-6296-4364-bc7e-83d8d3b4d84d'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:46.714Z',
      uuid: '7235dff9-6296-4364-bc7e-83d8d3b4d84d',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '7235dff9-6296-4364-bc7e-83d8d3b4d84d'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:46.747Z',
      uuid: '7235dff9-6296-4364-bc7e-83d8d3b4d84d',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '7235dff9-6296-4364-bc7e-83d8d3b4d84d'
    }
  ]
} to 26381:0
2025-08-05T18:11:50.921Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '7235dff9-6296-4364-bc7e-83d8d3b4d84d',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '12b48d6a-2f24-4efd-b575-7db7b12d1f7b',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent typography',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    started_at: '2025-08-05T18:11:46.686Z',
    finished_at: '2025-08-05T18:11:50.898Z'
  }
} to 26381:0
2025-08-05T18:11:50.940Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '12b48d6a-2f24-4efd-b575-7db7b12d1f7b',
    name: 'should maintain consistent typography',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test font family consistency\n' +
        "    const textElements = page.locator('h1, h2, h3, p, button, input, textarea');\n" +
        '    for (let i = 0; i < Math.min(await textElements.count(), 10); i++) {\n' +
        '      const element = textElements.nth(i);\n' +
        '      const fontFamily = await element.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).fontFamily;\n' +
        '      });\n' +
        '\n' +
        '      // Should use Inter font family or fallback to system fonts\n' +
        '      (0, _test.expect)(fontFamily).toMatch(/Inter|system-ui|sans-serif/);\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent typography',
    scope: 'should maintain consistent typography',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 47,
    started_at: '2025-08-05T18:11:46.676Z',
    finished_at: '2025-08-05T18:11:46.723Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain consistent typography'
    },
    hooks: [ '7235dff9-6296-4364-bc7e-83d8d3b4d84d' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:50.941Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:50.923Z',
      uuid: '12b48d6a-2f24-4efd-b575-7db7b12d1f7b',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '12b48d6a-2f24-4efd-b575-7db7b12d1f7b'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:50.930Z',
      uuid: '12b48d6a-2f24-4efd-b575-7db7b12d1f7b',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '12b48d6a-2f24-4efd-b575-7db7b12d1f7b'
    }
  ]
} to 26381:0
2025-08-05T18:11:51.149Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:46.684Z',
      uuid: 'f4711dfc-b75c-478d-a012-924fc09b192b',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'f4711dfc-b75c-478d-a012-924fc09b192b'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:46.709Z',
      uuid: 'f4711dfc-b75c-478d-a012-924fc09b192b',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'f4711dfc-b75c-478d-a012-924fc09b192b'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:46.743Z',
      uuid: 'f4711dfc-b75c-478d-a012-924fc09b192b',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'f4711dfc-b75c-478d-a012-924fc09b192b'
    }
  ]
} to 26381:0
2025-08-05T18:11:51.156Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'f4711dfc-b75c-478d-a012-924fc09b192b',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '15e0fac5-1213-4317-98de-6e35a3404ac2',
    body: { lang: 'node', code: null },
    scope: 'should have consistent button styling',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    started_at: '2025-08-05T18:11:46.681Z',
    finished_at: '2025-08-05T18:11:51.138Z'
  }
} to 26381:0
2025-08-05T18:11:51.177Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '15e0fac5-1213-4317-98de-6e35a3404ac2',
    name: 'should have consistent button styling',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    const buttons = page.locator('button');\n" +
        '    for (let i = 0; i < Math.min(await buttons.count(), 5); i++) {\n' +
        '      const button = buttons.nth(i);\n' +
        '\n' +
        '      // Check button has proper styling\n' +
        '      const styles = await button.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding,\n' +
        '          cursor: computed.cursor\n' +
        '        };\n' +
        '      });\n' +
        "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
        "      (0, _test.expect)(styles.borderRadius).not.toBe('0px');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should have consistent button styling',
    scope: 'should have consistent button styling',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 44,
    started_at: '2025-08-05T18:11:46.668Z',
    finished_at: '2025-08-05T18:11:46.712Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should have consistent button styling'
    },
    hooks: [ 'f4711dfc-b75c-478d-a012-924fc09b192b' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:51.178Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:51.165Z',
      uuid: '15e0fac5-1213-4317-98de-6e35a3404ac2',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '15e0fac5-1213-4317-98de-6e35a3404ac2'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:51.166Z',
      uuid: '15e0fac5-1213-4317-98de-6e35a3404ac2',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '15e0fac5-1213-4317-98de-6e35a3404ac2'
    }
  ]
} to 26381:0
2025-08-05T18:11:51.463Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '172684e8-0d58-4d3f-9068-e57ec1b43709',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'e1e2594d-fbe0-4b28-9340-be6c4da939d0',
      body: [Object],
      scope: 'should display consistent colors across browsers',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      started_at: '2025-08-05T18:11:45.422Z',
      finished_at: '2025-08-05T18:11:49.456Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'e1e2594d-fbe0-4b28-9340-be6c4da939d0',
      name: 'should display consistent colors across browsers',
      body: [Object],
      identifier: 'should display consistent colors across browsers',
      scope: 'should display consistent colors across browsers',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 67,
      started_at: '2025-08-05T18:11:45.415Z',
      finished_at: '2025-08-05T18:11:45.482Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '7235dff9-6296-4364-bc7e-83d8d3b4d84d',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '12b48d6a-2f24-4efd-b575-7db7b12d1f7b',
      body: [Object],
      scope: 'should maintain consistent typography',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      started_at: '2025-08-05T18:11:46.686Z',
      finished_at: '2025-08-05T18:11:50.898Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '12b48d6a-2f24-4efd-b575-7db7b12d1f7b',
      name: 'should maintain consistent typography',
      body: [Object],
      identifier: 'should maintain consistent typography',
      scope: 'should maintain consistent typography',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 47,
      started_at: '2025-08-05T18:11:46.676Z',
      finished_at: '2025-08-05T18:11:46.723Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'f4711dfc-b75c-478d-a012-924fc09b192b',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '15e0fac5-1213-4317-98de-6e35a3404ac2',
      body: [Object],
      scope: 'should have consistent button styling',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      started_at: '2025-08-05T18:11:46.681Z',
      finished_at: '2025-08-05T18:11:51.138Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '15e0fac5-1213-4317-98de-6e35a3404ac2',
      name: 'should have consistent button styling',
      body: [Object],
      identifier: 'should have consistent button styling',
      scope: 'should have consistent button styling',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 44,
      started_at: '2025-08-05T18:11:46.668Z',
      finished_at: '2025-08-05T18:11:46.712Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:11:51.465Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:11:53.228Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'a1753bf2-ff06-4cf6-a748-f01b0c5247fb',
    name: 'should maintain layout consistency on different screen sizes',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    const viewports = [{\n' +
        '      width: 1920,\n' +
        '      height: 1080,\n' +
        "      name: 'Desktop Large'\n" +
        '    }, {\n' +
        '      width: 1366,\n' +
        '      height: 768,\n' +
        "      name: 'Desktop Small'\n" +
        '    }, {\n' +
        '      width: 768,\n' +
        '      height: 1024,\n' +
        "      name: 'Tablet Portrait'\n" +
        '    }, {\n' +
        '      width: 375,\n' +
        '      height: 667,\n' +
        "      name: 'Mobile Portrait'\n" +
        '    }, {\n' +
        '      width: 414,\n' +
        '      height: 896,\n' +
        "      name: 'Mobile Large'\n" +
        '    }];\n' +
        '    for (const viewport of viewports) {\n' +
        '      await page.setViewportSize({\n' +
        '        width: viewport.width,\n' +
        '        height: viewport.height\n' +
        '      });\n' +
        '\n' +
        '      // Wait for layout to stabilize\n' +
        '      await page.waitForTimeout(500);\n' +
        '\n' +
        '      // Check that main content is visible and properly positioned\n' +
        `      const mainContent = page.locator('main, .main, #main, [role="main"]').first();\n` +
        '      if ((await mainContent.count()) > 0) {\n' +
        '        const isVisible = await mainContent.isVisible();\n' +
        '        (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        "        // Check that content doesn't overflow horizontally\n" +
        '        const overflow = await page.evaluate(() => {\n' +
        '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
        '        });\n' +
        '        (0, _test.expect)(overflow).toBe(true);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain layout consistency on different screen sizes',
    scope: 'should maintain layout consistency on different screen sizes',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:11:53.218Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain layout consistency on different screen sizes'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:53.239Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '9c0ba117-3c28-4513-9440-ec7a8499f313',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'a1753bf2-ff06-4cf6-a748-f01b0c5247fb',
    body: { lang: 'node', code: null },
    scope: 'should maintain layout consistency on different screen sizes',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    started_at: '2025-08-05T18:11:53.236Z'
  }
} to 26381:0
2025-08-05T18:11:53.463Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'a1753bf2-ff06-4cf6-a748-f01b0c5247fb',
      name: 'should maintain layout consistency on different screen sizes',
      body: [Object],
      identifier: 'should maintain layout consistency on different screen sizes',
      scope: 'should maintain layout consistency on different screen sizes',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:11:53.218Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '9c0ba117-3c28-4513-9440-ec7a8499f313',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'a1753bf2-ff06-4cf6-a748-f01b0c5247fb',
      body: [Object],
      scope: 'should maintain layout consistency on different screen sizes',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      started_at: '2025-08-05T18:11:53.236Z'
    }
  }
] to 26381:0
2025-08-05T18:11:53.464Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:11:54.571Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '707dd8f5-fcce-4e94-be64-9efce71fdfc1',
    name: 'should handle form elements consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test form input styling\n' +
        "    const inputs = page.locator('input, textarea, select');\n" +
        '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
        '      const input = inputs.nth(i);\n' +
        '      const styles = await input.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          border: computed.border,\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have consistent border and padding\n' +
        "      (0, _test.expect)(styles.border).not.toBe('none');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form elements consistently',
    scope: 'should handle form elements consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:11:54.559Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle form elements consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:54.575Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'cc744f6a-aab8-4ea3-abf8-d31708da6b76',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '707dd8f5-fcce-4e94-be64-9efce71fdfc1',
    body: { lang: 'node', code: null },
    scope: 'should handle form elements consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    started_at: '2025-08-05T18:11:54.570Z'
  }
} to 26381:0
2025-08-05T18:11:54.704Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '12ee7ed9-1c82-4fdb-9755-49531be7af27',
    name: 'should maintain consistent spacing and alignment',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test that elements have consistent spacing\n' +
        "    const containers = page.locator('div, section, article').filter({\n" +
        '      hasText: /./\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await containers.count(), 10); i++) {\n' +
        '      const container = containers.nth(i);\n' +
        '      const styles = await container.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          margin: computed.margin,\n' +
        '          padding: computed.padding,\n' +
        '          display: computed.display\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have consistent display properties\n' +
        "      (0, _test.expect)(['block', 'flex', 'grid', 'inline-block']).toContain(styles.display);\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent spacing and alignment',
    scope: 'should maintain consistent spacing and alignment',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:11:54.647Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain consistent spacing and alignment'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:54.705Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'da28143a-8365-4d35-9048-10dde08bd4bb',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '12ee7ed9-1c82-4fdb-9755-49531be7af27',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent spacing and alignment',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    started_at: '2025-08-05T18:11:54.667Z'
  }
} to 26381:0
2025-08-05T18:11:55.464Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '707dd8f5-fcce-4e94-be64-9efce71fdfc1',
      name: 'should handle form elements consistently',
      body: [Object],
      identifier: 'should handle form elements consistently',
      scope: 'should handle form elements consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:11:54.559Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'cc744f6a-aab8-4ea3-abf8-d31708da6b76',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '707dd8f5-fcce-4e94-be64-9efce71fdfc1',
      body: [Object],
      scope: 'should handle form elements consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      started_at: '2025-08-05T18:11:54.570Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '12ee7ed9-1c82-4fdb-9755-49531be7af27',
      name: 'should maintain consistent spacing and alignment',
      body: [Object],
      identifier: 'should maintain consistent spacing and alignment',
      scope: 'should maintain consistent spacing and alignment',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:11:54.647Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'da28143a-8365-4d35-9048-10dde08bd4bb',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '12ee7ed9-1c82-4fdb-9755-49531be7af27',
      body: [Object],
      scope: 'should maintain consistent spacing and alignment',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      started_at: '2025-08-05T18:11:54.667Z'
    }
  }
] to 26381:0
2025-08-05T18:11:55.467Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:11:57.552Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:53.239Z',
      uuid: '9c0ba117-3c28-4513-9440-ec7a8499f313',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '9c0ba117-3c28-4513-9440-ec7a8499f313'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:53.273Z',
      uuid: '9c0ba117-3c28-4513-9440-ec7a8499f313',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '9c0ba117-3c28-4513-9440-ec7a8499f313'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:53.308Z',
      uuid: '9c0ba117-3c28-4513-9440-ec7a8499f313',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '9c0ba117-3c28-4513-9440-ec7a8499f313'
    }
  ]
} to 26381:0
2025-08-05T18:11:57.555Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '9c0ba117-3c28-4513-9440-ec7a8499f313',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'a1753bf2-ff06-4cf6-a748-f01b0c5247fb',
    body: { lang: 'node', code: null },
    scope: 'should maintain layout consistency on different screen sizes',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    started_at: '2025-08-05T18:11:53.236Z',
    finished_at: '2025-08-05T18:11:57.548Z'
  }
} to 26381:0
2025-08-05T18:11:57.581Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'a1753bf2-ff06-4cf6-a748-f01b0c5247fb',
    name: 'should maintain layout consistency on different screen sizes',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    const viewports = [{\n' +
        '      width: 1920,\n' +
        '      height: 1080,\n' +
        "      name: 'Desktop Large'\n" +
        '    }, {\n' +
        '      width: 1366,\n' +
        '      height: 768,\n' +
        "      name: 'Desktop Small'\n" +
        '    }, {\n' +
        '      width: 768,\n' +
        '      height: 1024,\n' +
        "      name: 'Tablet Portrait'\n" +
        '    }, {\n' +
        '      width: 375,\n' +
        '      height: 667,\n' +
        "      name: 'Mobile Portrait'\n" +
        '    }, {\n' +
        '      width: 414,\n' +
        '      height: 896,\n' +
        "      name: 'Mobile Large'\n" +
        '    }];\n' +
        '    for (const viewport of viewports) {\n' +
        '      await page.setViewportSize({\n' +
        '        width: viewport.width,\n' +
        '        height: viewport.height\n' +
        '      });\n' +
        '\n' +
        '      // Wait for layout to stabilize\n' +
        '      await page.waitForTimeout(500);\n' +
        '\n' +
        '      // Check that main content is visible and properly positioned\n' +
        `      const mainContent = page.locator('main, .main, #main, [role="main"]').first();\n` +
        '      if ((await mainContent.count()) > 0) {\n' +
        '        const isVisible = await mainContent.isVisible();\n' +
        '        (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        "        // Check that content doesn't overflow horizontally\n" +
        '        const overflow = await page.evaluate(() => {\n' +
        '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
        '        });\n' +
        '        (0, _test.expect)(overflow).toBe(true);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain layout consistency on different screen sizes',
    scope: 'should maintain layout consistency on different screen sizes',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 49,
    started_at: '2025-08-05T18:11:53.218Z',
    finished_at: '2025-08-05T18:11:53.267Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain layout consistency on different screen sizes'
    },
    hooks: [ '9c0ba117-3c28-4513-9440-ec7a8499f313' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:57.582Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:57.566Z',
      uuid: 'a1753bf2-ff06-4cf6-a748-f01b0c5247fb',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'a1753bf2-ff06-4cf6-a748-f01b0c5247fb'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:57.567Z',
      uuid: 'a1753bf2-ff06-4cf6-a748-f01b0c5247fb',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'a1753bf2-ff06-4cf6-a748-f01b0c5247fb'
    }
  ]
} to 26381:0
2025-08-05T18:11:58.722Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:54.573Z',
      uuid: 'cc744f6a-aab8-4ea3-abf8-d31708da6b76',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'cc744f6a-aab8-4ea3-abf8-d31708da6b76'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:54.606Z',
      uuid: 'cc744f6a-aab8-4ea3-abf8-d31708da6b76',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'cc744f6a-aab8-4ea3-abf8-d31708da6b76'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:54.653Z',
      uuid: 'cc744f6a-aab8-4ea3-abf8-d31708da6b76',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'cc744f6a-aab8-4ea3-abf8-d31708da6b76'
    }
  ]
} to 26381:0
2025-08-05T18:11:58.724Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'cc744f6a-aab8-4ea3-abf8-d31708da6b76',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '707dd8f5-fcce-4e94-be64-9efce71fdfc1',
    body: { lang: 'node', code: null },
    scope: 'should handle form elements consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    started_at: '2025-08-05T18:11:54.570Z',
    finished_at: '2025-08-05T18:11:58.718Z'
  }
} to 26381:0
2025-08-05T18:11:58.753Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '707dd8f5-fcce-4e94-be64-9efce71fdfc1',
    name: 'should handle form elements consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test form input styling\n' +
        "    const inputs = page.locator('input, textarea, select');\n" +
        '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
        '      const input = inputs.nth(i);\n' +
        '      const styles = await input.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          border: computed.border,\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have consistent border and padding\n' +
        "      (0, _test.expect)(styles.border).not.toBe('none');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form elements consistently',
    scope: 'should handle form elements consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 51,
    started_at: '2025-08-05T18:11:54.559Z',
    finished_at: '2025-08-05T18:11:54.610Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle form elements consistently'
    },
    hooks: [ 'cc744f6a-aab8-4ea3-abf8-d31708da6b76' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:58.753Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:58.737Z',
      uuid: '707dd8f5-fcce-4e94-be64-9efce71fdfc1',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '707dd8f5-fcce-4e94-be64-9efce71fdfc1'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:58.737Z',
      uuid: '707dd8f5-fcce-4e94-be64-9efce71fdfc1',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '707dd8f5-fcce-4e94-be64-9efce71fdfc1'
    }
  ]
} to 26381:0
2025-08-05T18:11:59.372Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:54.671Z',
      uuid: 'da28143a-8365-4d35-9048-10dde08bd4bb',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'da28143a-8365-4d35-9048-10dde08bd4bb'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:54.701Z',
      uuid: 'da28143a-8365-4d35-9048-10dde08bd4bb',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'da28143a-8365-4d35-9048-10dde08bd4bb'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:11:54.748Z',
      uuid: 'da28143a-8365-4d35-9048-10dde08bd4bb',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'da28143a-8365-4d35-9048-10dde08bd4bb'
    }
  ]
} to 26381:0
2025-08-05T18:11:59.375Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'da28143a-8365-4d35-9048-10dde08bd4bb',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '12ee7ed9-1c82-4fdb-9755-49531be7af27',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent spacing and alignment',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    started_at: '2025-08-05T18:11:54.667Z',
    finished_at: '2025-08-05T18:11:59.367Z'
  }
} to 26381:0
2025-08-05T18:11:59.406Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '12ee7ed9-1c82-4fdb-9755-49531be7af27',
    name: 'should maintain consistent spacing and alignment',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test that elements have consistent spacing\n' +
        "    const containers = page.locator('div, section, article').filter({\n" +
        '      hasText: /./\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await containers.count(), 10); i++) {\n' +
        '      const container = containers.nth(i);\n' +
        '      const styles = await container.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          margin: computed.margin,\n' +
        '          padding: computed.padding,\n' +
        '          display: computed.display\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have consistent display properties\n' +
        "      (0, _test.expect)(['block', 'flex', 'grid', 'inline-block']).toContain(styles.display);\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent spacing and alignment',
    scope: 'should maintain consistent spacing and alignment',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 47,
    started_at: '2025-08-05T18:11:54.647Z',
    finished_at: '2025-08-05T18:11:54.694Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain consistent spacing and alignment'
    },
    hooks: [ 'da28143a-8365-4d35-9048-10dde08bd4bb' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:11:59.406Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:59.387Z',
      uuid: '12ee7ed9-1c82-4fdb-9755-49531be7af27',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '12ee7ed9-1c82-4fdb-9755-49531be7af27'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:11:59.388Z',
      uuid: '12ee7ed9-1c82-4fdb-9755-49531be7af27',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '12ee7ed9-1c82-4fdb-9755-49531be7af27'
    }
  ]
} to 26381:0
2025-08-05T18:11:59.490Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '9c0ba117-3c28-4513-9440-ec7a8499f313',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'a1753bf2-ff06-4cf6-a748-f01b0c5247fb',
      body: [Object],
      scope: 'should maintain layout consistency on different screen sizes',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      started_at: '2025-08-05T18:11:53.236Z',
      finished_at: '2025-08-05T18:11:57.548Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'a1753bf2-ff06-4cf6-a748-f01b0c5247fb',
      name: 'should maintain layout consistency on different screen sizes',
      body: [Object],
      identifier: 'should maintain layout consistency on different screen sizes',
      scope: 'should maintain layout consistency on different screen sizes',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 49,
      started_at: '2025-08-05T18:11:53.218Z',
      finished_at: '2025-08-05T18:11:53.267Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'cc744f6a-aab8-4ea3-abf8-d31708da6b76',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '707dd8f5-fcce-4e94-be64-9efce71fdfc1',
      body: [Object],
      scope: 'should handle form elements consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      started_at: '2025-08-05T18:11:54.570Z',
      finished_at: '2025-08-05T18:11:58.718Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '707dd8f5-fcce-4e94-be64-9efce71fdfc1',
      name: 'should handle form elements consistently',
      body: [Object],
      identifier: 'should handle form elements consistently',
      scope: 'should handle form elements consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 51,
      started_at: '2025-08-05T18:11:54.559Z',
      finished_at: '2025-08-05T18:11:54.610Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'da28143a-8365-4d35-9048-10dde08bd4bb',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '12ee7ed9-1c82-4fdb-9755-49531be7af27',
      body: [Object],
      scope: 'should maintain consistent spacing and alignment',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      started_at: '2025-08-05T18:11:54.667Z',
      finished_at: '2025-08-05T18:11:59.367Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '12ee7ed9-1c82-4fdb-9755-49531be7af27',
      name: 'should maintain consistent spacing and alignment',
      body: [Object],
      identifier: 'should maintain consistent spacing and alignment',
      scope: 'should maintain consistent spacing and alignment',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 47,
      started_at: '2025-08-05T18:11:54.647Z',
      finished_at: '2025-08-05T18:11:54.694Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:11:59.491Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:12:01.159Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '054f8011-0136-4e66-b805-fe2ddb3f913a',
    name: 'should handle dark mode consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test dark mode colors\n' +
        '    await page.evaluate(() => {\n' +
        '      // Simulate dark mode\n' +
        "      document.documentElement.style.colorScheme = 'dark';\n" +
        "      document.documentElement.classList.add('dark');\n" +
        '    });\n' +
        '    await page.waitForTimeout(100);\n' +
        '\n' +
        '    // Check that dark mode colors are applied\n' +
        '    const bodyColor = await page.evaluate(() => {\n' +
        '      return window.getComputedStyle(document.body).backgroundColor;\n' +
        '    });\n' +
        '\n' +
        '    // Should have dark background in dark mode\n' +
        '    (0, _test.expect)(bodyColor).toMatch(/rgb\\(10, 10, 10\\)|rgba\\(10, 10, 10/);\n' +
        '  }'
    },
    identifier: 'should handle dark mode consistently',
    scope: 'should handle dark mode consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:12:01.150Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle dark mode consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:01.168Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '71ee2d81-8f62-4d53-9886-fa3cbf58bc75',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '054f8011-0136-4e66-b805-fe2ddb3f913a',
    body: { lang: 'node', code: null },
    scope: 'should handle dark mode consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    started_at: '2025-08-05T18:12:01.165Z'
  }
} to 26381:0
2025-08-05T18:12:01.491Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '054f8011-0136-4e66-b805-fe2ddb3f913a',
      name: 'should handle dark mode consistently',
      body: [Object],
      identifier: 'should handle dark mode consistently',
      scope: 'should handle dark mode consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:12:01.150Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '71ee2d81-8f62-4d53-9886-fa3cbf58bc75',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '054f8011-0136-4e66-b805-fe2ddb3f913a',
      body: [Object],
      scope: 'should handle dark mode consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      started_at: '2025-08-05T18:12:01.165Z'
    }
  }
] to 26381:0
2025-08-05T18:12:01.491Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:12:02.309Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '54dd6787-1a08-45e6-84ee-e6e21b82023c',
    name: 'should maintain accessibility standards',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test color contrast\n' +
        "    const textElements = page.locator('h1, h2, h3, p, span, div').filter({\n" +
        '      hasText: /./\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await textElements.count(), 5); i++) {\n' +
        '      const element = textElements.nth(i);\n' +
        '      const contrast = await element.evaluate(el => {\n' +
        '        const style = window.getComputedStyle(el);\n' +
        '        const backgroundColor = style.backgroundColor;\n' +
        '        const color = style.color;\n' +
        '\n' +
        "        // Simple contrast check - in a real test, you'd use a proper contrast calculation\n" +
        '        return {\n' +
        '          backgroundColor,\n' +
        '          color\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have defined colors\n' +
        "      (0, _test.expect)(contrast.backgroundColor).not.toBe('rgba(0, 0, 0, 0)');\n" +
        "      (0, _test.expect)(contrast.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain accessibility standards',
    scope: 'should maintain accessibility standards',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:12:02.290Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain accessibility standards'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:02.318Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '6d75535c-f302-4941-a7d8-9424323c3fe0',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '54dd6787-1a08-45e6-84ee-e6e21b82023c',
    body: { lang: 'node', code: null },
    scope: 'should maintain accessibility standards',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    started_at: '2025-08-05T18:12:02.299Z'
  }
} to 26381:0
2025-08-05T18:12:02.910Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '445de1a0-ce0b-440e-b38a-db58a7fe9604',
    name: 'should handle images and icons consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    const images = page.locator('img, svg');\n" +
        '    for (let i = 0; i < Math.min(await images.count(), 5); i++) {\n' +
        '      const image = images.nth(i);\n' +
        '\n' +
        '      // Check that images are properly loaded and visible\n' +
        '      const isVisible = await image.isVisible();\n' +
        '      (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        '      // Check that images have proper alt text or aria labels\n' +
        "      const altText = await image.getAttribute('alt');\n" +
        "      const ariaLabel = await image.getAttribute('aria-label');\n" +
        '      if (!altText && !ariaLabel) {\n' +
        '        // For decorative images, this might be acceptable\n' +
        "        const role = await image.getAttribute('role');\n" +
        "        (0, _test.expect)(role === 'presentation' || role === 'img').toBe(true);\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle images and icons consistently',
    scope: 'should handle images and icons consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:12:02.899Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle images and icons consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:02.914Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'c94b6cf9-e1bc-4d25-806b-7fae69785291',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '445de1a0-ce0b-440e-b38a-db58a7fe9604',
    body: { lang: 'node', code: null },
    scope: 'should handle images and icons consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    started_at: '2025-08-05T18:12:02.905Z'
  }
} to 26381:0
2025-08-05T18:12:03.491Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '54dd6787-1a08-45e6-84ee-e6e21b82023c',
      name: 'should maintain accessibility standards',
      body: [Object],
      identifier: 'should maintain accessibility standards',
      scope: 'should maintain accessibility standards',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:12:02.290Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '6d75535c-f302-4941-a7d8-9424323c3fe0',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '54dd6787-1a08-45e6-84ee-e6e21b82023c',
      body: [Object],
      scope: 'should maintain accessibility standards',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      started_at: '2025-08-05T18:12:02.299Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '445de1a0-ce0b-440e-b38a-db58a7fe9604',
      name: 'should handle images and icons consistently',
      body: [Object],
      identifier: 'should handle images and icons consistently',
      scope: 'should handle images and icons consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:12:02.899Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'c94b6cf9-e1bc-4d25-806b-7fae69785291',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '445de1a0-ce0b-440e-b38a-db58a7fe9604',
      body: [Object],
      scope: 'should handle images and icons consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      started_at: '2025-08-05T18:12:02.905Z'
    }
  }
] to 26381:0
2025-08-05T18:12:03.492Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:12:05.472Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:01.169Z',
      uuid: '71ee2d81-8f62-4d53-9886-fa3cbf58bc75',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '71ee2d81-8f62-4d53-9886-fa3cbf58bc75'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:01.207Z',
      uuid: '71ee2d81-8f62-4d53-9886-fa3cbf58bc75',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '71ee2d81-8f62-4d53-9886-fa3cbf58bc75'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:01.237Z',
      uuid: '71ee2d81-8f62-4d53-9886-fa3cbf58bc75',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '71ee2d81-8f62-4d53-9886-fa3cbf58bc75'
    }
  ]
} to 26381:0
2025-08-05T18:12:05.475Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '71ee2d81-8f62-4d53-9886-fa3cbf58bc75',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '054f8011-0136-4e66-b805-fe2ddb3f913a',
    body: { lang: 'node', code: null },
    scope: 'should handle dark mode consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    started_at: '2025-08-05T18:12:01.165Z',
    finished_at: '2025-08-05T18:12:05.469Z'
  }
} to 26381:0
2025-08-05T18:12:05.492Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '71ee2d81-8f62-4d53-9886-fa3cbf58bc75',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '054f8011-0136-4e66-b805-fe2ddb3f913a',
      body: [Object],
      scope: 'should handle dark mode consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      started_at: '2025-08-05T18:12:01.165Z',
      finished_at: '2025-08-05T18:12:05.469Z'
    }
  }
] to 26381:0
2025-08-05T18:12:05.492Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:12:05.523Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '054f8011-0136-4e66-b805-fe2ddb3f913a',
    name: 'should handle dark mode consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test dark mode colors\n' +
        '    await page.evaluate(() => {\n' +
        '      // Simulate dark mode\n' +
        "      document.documentElement.style.colorScheme = 'dark';\n" +
        "      document.documentElement.classList.add('dark');\n" +
        '    });\n' +
        '    await page.waitForTimeout(100);\n' +
        '\n' +
        '    // Check that dark mode colors are applied\n' +
        '    const bodyColor = await page.evaluate(() => {\n' +
        '      return window.getComputedStyle(document.body).backgroundColor;\n' +
        '    });\n' +
        '\n' +
        '    // Should have dark background in dark mode\n' +
        '    (0, _test.expect)(bodyColor).toMatch(/rgb\\(10, 10, 10\\)|rgba\\(10, 10, 10/);\n' +
        '  }'
    },
    identifier: 'should handle dark mode consistently',
    scope: 'should handle dark mode consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 66,
    started_at: '2025-08-05T18:12:01.150Z',
    finished_at: '2025-08-05T18:12:01.216Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle dark mode consistently'
    },
    hooks: [ '71ee2d81-8f62-4d53-9886-fa3cbf58bc75' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:05.523Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:05.501Z',
      uuid: '054f8011-0136-4e66-b805-fe2ddb3f913a',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '054f8011-0136-4e66-b805-fe2ddb3f913a'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:05.503Z',
      uuid: '054f8011-0136-4e66-b805-fe2ddb3f913a',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '054f8011-0136-4e66-b805-fe2ddb3f913a'
    }
  ]
} to 26381:0
2025-08-05T18:12:06.625Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:02.302Z',
      uuid: '6d75535c-f302-4941-a7d8-9424323c3fe0',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '6d75535c-f302-4941-a7d8-9424323c3fe0'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:02.331Z',
      uuid: '6d75535c-f302-4941-a7d8-9424323c3fe0',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '6d75535c-f302-4941-a7d8-9424323c3fe0'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:02.363Z',
      uuid: '6d75535c-f302-4941-a7d8-9424323c3fe0',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '6d75535c-f302-4941-a7d8-9424323c3fe0'
    }
  ]
} to 26381:0
2025-08-05T18:12:06.631Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '6d75535c-f302-4941-a7d8-9424323c3fe0',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '54dd6787-1a08-45e6-84ee-e6e21b82023c',
    body: { lang: 'node', code: null },
    scope: 'should maintain accessibility standards',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    started_at: '2025-08-05T18:12:02.299Z',
    finished_at: '2025-08-05T18:12:06.622Z'
  }
} to 26381:0
2025-08-05T18:12:06.661Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '54dd6787-1a08-45e6-84ee-e6e21b82023c',
    name: 'should maintain accessibility standards',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test color contrast\n' +
        "    const textElements = page.locator('h1, h2, h3, p, span, div').filter({\n" +
        '      hasText: /./\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await textElements.count(), 5); i++) {\n' +
        '      const element = textElements.nth(i);\n' +
        '      const contrast = await element.evaluate(el => {\n' +
        '        const style = window.getComputedStyle(el);\n' +
        '        const backgroundColor = style.backgroundColor;\n' +
        '        const color = style.color;\n' +
        '\n' +
        "        // Simple contrast check - in a real test, you'd use a proper contrast calculation\n" +
        '        return {\n' +
        '          backgroundColor,\n' +
        '          color\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have defined colors\n' +
        "      (0, _test.expect)(contrast.backgroundColor).not.toBe('rgba(0, 0, 0, 0)');\n" +
        "      (0, _test.expect)(contrast.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain accessibility standards',
    scope: 'should maintain accessibility standards',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 44,
    started_at: '2025-08-05T18:12:02.290Z',
    finished_at: '2025-08-05T18:12:02.334Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain accessibility standards'
    },
    hooks: [ '6d75535c-f302-4941-a7d8-9424323c3fe0' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:06.662Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:06.641Z',
      uuid: '54dd6787-1a08-45e6-84ee-e6e21b82023c',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '54dd6787-1a08-45e6-84ee-e6e21b82023c'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:06.642Z',
      uuid: '54dd6787-1a08-45e6-84ee-e6e21b82023c',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '54dd6787-1a08-45e6-84ee-e6e21b82023c'
    }
  ]
} to 26381:0
2025-08-05T18:12:07.423Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:02.908Z',
      uuid: 'c94b6cf9-e1bc-4d25-806b-7fae69785291',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'c94b6cf9-e1bc-4d25-806b-7fae69785291'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:02.932Z',
      uuid: 'c94b6cf9-e1bc-4d25-806b-7fae69785291',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'c94b6cf9-e1bc-4d25-806b-7fae69785291'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:02.960Z',
      uuid: 'c94b6cf9-e1bc-4d25-806b-7fae69785291',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'c94b6cf9-e1bc-4d25-806b-7fae69785291'
    }
  ]
} to 26381:0
2025-08-05T18:12:07.433Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'c94b6cf9-e1bc-4d25-806b-7fae69785291',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '445de1a0-ce0b-440e-b38a-db58a7fe9604',
    body: { lang: 'node', code: null },
    scope: 'should handle images and icons consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    started_at: '2025-08-05T18:12:02.905Z',
    finished_at: '2025-08-05T18:12:07.417Z'
  }
} to 26381:0
2025-08-05T18:12:07.457Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '445de1a0-ce0b-440e-b38a-db58a7fe9604',
    name: 'should handle images and icons consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    const images = page.locator('img, svg');\n" +
        '    for (let i = 0; i < Math.min(await images.count(), 5); i++) {\n' +
        '      const image = images.nth(i);\n' +
        '\n' +
        '      // Check that images are properly loaded and visible\n' +
        '      const isVisible = await image.isVisible();\n' +
        '      (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        '      // Check that images have proper alt text or aria labels\n' +
        "      const altText = await image.getAttribute('alt');\n" +
        "      const ariaLabel = await image.getAttribute('aria-label');\n" +
        '      if (!altText && !ariaLabel) {\n' +
        '        // For decorative images, this might be acceptable\n' +
        "        const role = await image.getAttribute('role');\n" +
        "        (0, _test.expect)(role === 'presentation' || role === 'img').toBe(true);\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle images and icons consistently',
    scope: 'should handle images and icons consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 43,
    started_at: '2025-08-05T18:12:02.899Z',
    finished_at: '2025-08-05T18:12:02.942Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle images and icons consistently'
    },
    hooks: [ 'c94b6cf9-e1bc-4d25-806b-7fae69785291' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:07.458Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:07.440Z',
      uuid: '445de1a0-ce0b-440e-b38a-db58a7fe9604',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '445de1a0-ce0b-440e-b38a-db58a7fe9604'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:07.441Z',
      uuid: '445de1a0-ce0b-440e-b38a-db58a7fe9604',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '445de1a0-ce0b-440e-b38a-db58a7fe9604'
    }
  ]
} to 26381:0
2025-08-05T18:12:07.495Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '054f8011-0136-4e66-b805-fe2ddb3f913a',
      name: 'should handle dark mode consistently',
      body: [Object],
      identifier: 'should handle dark mode consistently',
      scope: 'should handle dark mode consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 66,
      started_at: '2025-08-05T18:12:01.150Z',
      finished_at: '2025-08-05T18:12:01.216Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '6d75535c-f302-4941-a7d8-9424323c3fe0',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '54dd6787-1a08-45e6-84ee-e6e21b82023c',
      body: [Object],
      scope: 'should maintain accessibility standards',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      started_at: '2025-08-05T18:12:02.299Z',
      finished_at: '2025-08-05T18:12:06.622Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '54dd6787-1a08-45e6-84ee-e6e21b82023c',
      name: 'should maintain accessibility standards',
      body: [Object],
      identifier: 'should maintain accessibility standards',
      scope: 'should maintain accessibility standards',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 44,
      started_at: '2025-08-05T18:12:02.290Z',
      finished_at: '2025-08-05T18:12:02.334Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'c94b6cf9-e1bc-4d25-806b-7fae69785291',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '445de1a0-ce0b-440e-b38a-db58a7fe9604',
      body: [Object],
      scope: 'should handle images and icons consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      started_at: '2025-08-05T18:12:02.905Z',
      finished_at: '2025-08-05T18:12:07.417Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '445de1a0-ce0b-440e-b38a-db58a7fe9604',
      name: 'should handle images and icons consistently',
      body: [Object],
      identifier: 'should handle images and icons consistently',
      scope: 'should handle images and icons consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 43,
      started_at: '2025-08-05T18:12:02.899Z',
      finished_at: '2025-08-05T18:12:02.942Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:12:07.496Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:12:09.012Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b1d378e0-328a-4cb7-a127-9a89619a9f02',
    name: 'should display assessment questions consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Wait for assessment content to load\n' +
        `    await page.waitForSelector('[data-testid="assessment-question"], .question, h1, h2', {\n` +
        '      timeout: 10000\n' +
        '    });\n' +
        '\n' +
        '    // Check that questions are visible and properly styled\n' +
        `    const questions = page.locator('[data-testid="assessment-question"], .question, h1, h2').filter({\n` +
        '      hasText: /./\n' +
        '    });\n' +
        '    (0, _test.expect)(await questions.count()).toBeGreaterThan(0);\n' +
        '    for (let i = 0; i < Math.min(await questions.count(), 3); i++) {\n' +
        '      const question = questions.nth(i);\n' +
        '\n' +
        '      // Check visibility\n' +
        '      await (0, _test.expect)(question).toBeVisible();\n' +
        '\n' +
        '      // Check styling\n' +
        '      const styles = await question.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          fontSize: computed.fontSize,\n' +
        '          fontWeight: computed.fontWeight,\n' +
        '          color: computed.color,\n' +
        '          lineHeight: computed.lineHeight\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have readable text styling\n' +
        '      (0, _test.expect)(parseFloat(styles.fontSize)).toBeGreaterThan(12);\n' +
        "      (0, _test.expect)(styles.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display assessment questions consistently',
    scope: 'should display assessment questions consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:12:08.998Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should display assessment questions consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:09.018Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '9143b2c7-36a8-4fa0-9422-0230e0c9917c',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'b1d378e0-328a-4cb7-a127-9a89619a9f02',
    body: { lang: 'node', code: null },
    scope: 'should display assessment questions consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    started_at: '2025-08-05T18:12:09.009Z'
  }
} to 26381:0
2025-08-05T18:12:09.495Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b1d378e0-328a-4cb7-a127-9a89619a9f02',
      name: 'should display assessment questions consistently',
      body: [Object],
      identifier: 'should display assessment questions consistently',
      scope: 'should display assessment questions consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:12:08.998Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '9143b2c7-36a8-4fa0-9422-0230e0c9917c',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'b1d378e0-328a-4cb7-a127-9a89619a9f02',
      body: [Object],
      scope: 'should display assessment questions consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      started_at: '2025-08-05T18:12:09.009Z'
    }
  }
] to 26381:0
2025-08-05T18:12:09.497Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:12:10.203Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '5e80559c-c7e9-4722-b811-dc355fcd53a8',
    name: 'should handle form inputs consistently across browsers',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for form inputs (radio buttons, checkboxes, text inputs)\n' +
        "    const inputs = page.locator('input, textarea, select');\n" +
        '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
        '      const input = inputs.nth(i);\n' +
        '\n' +
        '      // Check input is visible and interactive\n' +
        '      await (0, _test.expect)(input).toBeVisible();\n' +
        "      const inputType = await input.getAttribute('type');\n" +
        "      if (inputType === 'radio' || inputType === 'checkbox') {\n" +
        '        // Test radio/checkbox functionality\n' +
        '        await input.click();\n' +
        '\n' +
        '        // Verify selection state\n' +
        '        const isChecked = await input.isChecked();\n' +
        '        (0, _test.expect)(isChecked).toBe(true);\n' +
        "      } else if (inputType === 'text' || inputType === 'textarea') {\n" +
        '        // Test text input functionality\n' +
        "        await input.fill('Test input');\n" +
        '        const value = await input.inputValue();\n' +
        "        (0, _test.expect)(value).toBe('Test input');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form inputs consistently across browsers',
    scope: 'should handle form inputs consistently across browsers',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:12:10.190Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form inputs consistently across browsers'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:10.204Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'b3986ee4-f288-4ef3-a7ff-285d0bd3b45d',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '5e80559c-c7e9-4722-b811-dc355fcd53a8',
    body: { lang: 'node', code: null },
    scope: 'should handle form inputs consistently across browsers',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    started_at: '2025-08-05T18:12:10.200Z'
  }
} to 26381:0
2025-08-05T18:12:10.940Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b17fbd17-6d45-41c2-a399-50c78800b038',
    name: 'should maintain consistent button styling and behavior',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        `    const buttons = page.locator('button, [role="button"], input[type="submit"]');\n` +
        '    for (let i = 0; i < Math.min(await buttons.count(), 3); i++) {\n' +
        '      const button = buttons.nth(i);\n' +
        '\n' +
        '      // Check button styling\n' +
        '      const styles = await button.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          backgroundColor: computed.backgroundColor,\n' +
        '          color: computed.color,\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding,\n' +
        '          cursor: computed.cursor\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have proper button styling\n' +
        "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '\n' +
        '      // Check button text is readable\n' +
        '      const buttonText = await button.textContent();\n' +
        '      if (buttonText && buttonText.trim()) {\n' +
        '        (0, _test.expect)(buttonText.trim().length).toBeGreaterThan(0);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent button styling and behavior',
    scope: 'should maintain consistent button styling and behavior',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:12:10.929Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent button styling and behavior'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:10.942Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '4d4a3d26-ce96-45e2-b748-b2668143ab4d',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'b17fbd17-6d45-41c2-a399-50c78800b038',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent button styling and behavior',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    started_at: '2025-08-05T18:12:10.936Z'
  }
} to 26381:0
2025-08-05T18:12:11.497Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '5e80559c-c7e9-4722-b811-dc355fcd53a8',
      name: 'should handle form inputs consistently across browsers',
      body: [Object],
      identifier: 'should handle form inputs consistently across browsers',
      scope: 'should handle form inputs consistently across browsers',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:12:10.190Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'b3986ee4-f288-4ef3-a7ff-285d0bd3b45d',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '5e80559c-c7e9-4722-b811-dc355fcd53a8',
      body: [Object],
      scope: 'should handle form inputs consistently across browsers',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      started_at: '2025-08-05T18:12:10.200Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b17fbd17-6d45-41c2-a399-50c78800b038',
      name: 'should maintain consistent button styling and behavior',
      body: [Object],
      identifier: 'should maintain consistent button styling and behavior',
      scope: 'should maintain consistent button styling and behavior',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:12:10.929Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '4d4a3d26-ce96-45e2-b748-b2668143ab4d',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'b17fbd17-6d45-41c2-a399-50c78800b038',
      body: [Object],
      scope: 'should maintain consistent button styling and behavior',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      started_at: '2025-08-05T18:12:10.936Z'
    }
  }
] to 26381:0
2025-08-05T18:12:11.498Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:12:16.454Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:09.013Z',
      uuid: '9143b2c7-36a8-4fa0-9422-0230e0c9917c',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '9143b2c7-36a8-4fa0-9422-0230e0c9917c'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:09.040Z',
      uuid: '9143b2c7-36a8-4fa0-9422-0230e0c9917c',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '9143b2c7-36a8-4fa0-9422-0230e0c9917c'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:09.071Z',
      uuid: '9143b2c7-36a8-4fa0-9422-0230e0c9917c',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '9143b2c7-36a8-4fa0-9422-0230e0c9917c'
    }
  ]
} to 26381:0
2025-08-05T18:12:16.458Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '9143b2c7-36a8-4fa0-9422-0230e0c9917c',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'b1d378e0-328a-4cb7-a127-9a89619a9f02',
    body: { lang: 'node', code: null },
    scope: 'should display assessment questions consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    started_at: '2025-08-05T18:12:09.009Z',
    finished_at: '2025-08-05T18:12:16.447Z'
  }
} to 26381:0
2025-08-05T18:12:16.492Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b1d378e0-328a-4cb7-a127-9a89619a9f02',
    name: 'should display assessment questions consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Wait for assessment content to load\n' +
        `    await page.waitForSelector('[data-testid="assessment-question"], .question, h1, h2', {\n` +
        '      timeout: 10000\n' +
        '    });\n' +
        '\n' +
        '    // Check that questions are visible and properly styled\n' +
        `    const questions = page.locator('[data-testid="assessment-question"], .question, h1, h2').filter({\n` +
        '      hasText: /./\n' +
        '    });\n' +
        '    (0, _test.expect)(await questions.count()).toBeGreaterThan(0);\n' +
        '    for (let i = 0; i < Math.min(await questions.count(), 3); i++) {\n' +
        '      const question = questions.nth(i);\n' +
        '\n' +
        '      // Check visibility\n' +
        '      await (0, _test.expect)(question).toBeVisible();\n' +
        '\n' +
        '      // Check styling\n' +
        '      const styles = await question.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          fontSize: computed.fontSize,\n' +
        '          fontWeight: computed.fontWeight,\n' +
        '          color: computed.color,\n' +
        '          lineHeight: computed.lineHeight\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have readable text styling\n' +
        '      (0, _test.expect)(parseFloat(styles.fontSize)).toBeGreaterThan(12);\n' +
        "      (0, _test.expect)(styles.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display assessment questions consistently',
    scope: 'should display assessment questions consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 49,
    started_at: '2025-08-05T18:12:08.998Z',
    finished_at: '2025-08-05T18:12:09.047Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should display assessment questions consistently'
    },
    hooks: [ '9143b2c7-36a8-4fa0-9422-0230e0c9917c' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:16.493Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:16.476Z',
      uuid: 'b1d378e0-328a-4cb7-a127-9a89619a9f02',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b1d378e0-328a-4cb7-a127-9a89619a9f02'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:16.477Z',
      uuid: 'b1d378e0-328a-4cb7-a127-9a89619a9f02',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b1d378e0-328a-4cb7-a127-9a89619a9f02'
    }
  ]
} to 26381:0
2025-08-05T18:12:17.497Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '9143b2c7-36a8-4fa0-9422-0230e0c9917c',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'b1d378e0-328a-4cb7-a127-9a89619a9f02',
      body: [Object],
      scope: 'should display assessment questions consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      started_at: '2025-08-05T18:12:09.009Z',
      finished_at: '2025-08-05T18:12:16.447Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b1d378e0-328a-4cb7-a127-9a89619a9f02',
      name: 'should display assessment questions consistently',
      body: [Object],
      identifier: 'should display assessment questions consistently',
      scope: 'should display assessment questions consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 49,
      started_at: '2025-08-05T18:12:08.998Z',
      finished_at: '2025-08-05T18:12:09.047Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:12:17.498Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:12:17.925Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:10.939Z',
      uuid: '4d4a3d26-ce96-45e2-b748-b2668143ab4d',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '4d4a3d26-ce96-45e2-b748-b2668143ab4d'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:10.969Z',
      uuid: '4d4a3d26-ce96-45e2-b748-b2668143ab4d',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '4d4a3d26-ce96-45e2-b748-b2668143ab4d'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:11.000Z',
      uuid: '4d4a3d26-ce96-45e2-b748-b2668143ab4d',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '4d4a3d26-ce96-45e2-b748-b2668143ab4d'
    }
  ]
} to 26381:0
2025-08-05T18:12:17.931Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '4d4a3d26-ce96-45e2-b748-b2668143ab4d',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'b17fbd17-6d45-41c2-a399-50c78800b038',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent button styling and behavior',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    started_at: '2025-08-05T18:12:10.936Z',
    finished_at: '2025-08-05T18:12:17.918Z'
  }
} to 26381:0
2025-08-05T18:12:17.950Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b17fbd17-6d45-41c2-a399-50c78800b038',
    name: 'should maintain consistent button styling and behavior',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        `    const buttons = page.locator('button, [role="button"], input[type="submit"]');\n` +
        '    for (let i = 0; i < Math.min(await buttons.count(), 3); i++) {\n' +
        '      const button = buttons.nth(i);\n' +
        '\n' +
        '      // Check button styling\n' +
        '      const styles = await button.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          backgroundColor: computed.backgroundColor,\n' +
        '          color: computed.color,\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding,\n' +
        '          cursor: computed.cursor\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have proper button styling\n' +
        "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '\n' +
        '      // Check button text is readable\n' +
        '      const buttonText = await button.textContent();\n' +
        '      if (buttonText && buttonText.trim()) {\n' +
        '        (0, _test.expect)(buttonText.trim().length).toBeGreaterThan(0);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent button styling and behavior',
    scope: 'should maintain consistent button styling and behavior',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 45,
    started_at: '2025-08-05T18:12:10.929Z',
    finished_at: '2025-08-05T18:12:10.974Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent button styling and behavior'
    },
    hooks: [ '4d4a3d26-ce96-45e2-b748-b2668143ab4d' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:17.951Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:17.936Z',
      uuid: 'b17fbd17-6d45-41c2-a399-50c78800b038',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b17fbd17-6d45-41c2-a399-50c78800b038'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:17.937Z',
      uuid: 'b17fbd17-6d45-41c2-a399-50c78800b038',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b17fbd17-6d45-41c2-a399-50c78800b038'
    }
  ]
} to 26381:0
2025-08-05T18:12:18.349Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:10.204Z',
      uuid: 'b3986ee4-f288-4ef3-a7ff-285d0bd3b45d',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'b3986ee4-f288-4ef3-a7ff-285d0bd3b45d'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:10.236Z',
      uuid: 'b3986ee4-f288-4ef3-a7ff-285d0bd3b45d',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'b3986ee4-f288-4ef3-a7ff-285d0bd3b45d'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:10.286Z',
      uuid: 'b3986ee4-f288-4ef3-a7ff-285d0bd3b45d',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'b3986ee4-f288-4ef3-a7ff-285d0bd3b45d'
    }
  ]
} to 26381:0
2025-08-05T18:12:18.362Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'b3986ee4-f288-4ef3-a7ff-285d0bd3b45d',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '5e80559c-c7e9-4722-b811-dc355fcd53a8',
    body: { lang: 'node', code: null },
    scope: 'should handle form inputs consistently across browsers',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    started_at: '2025-08-05T18:12:10.200Z',
    finished_at: '2025-08-05T18:12:18.338Z'
  }
} to 26381:0
2025-08-05T18:12:18.381Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '5e80559c-c7e9-4722-b811-dc355fcd53a8',
    name: 'should handle form inputs consistently across browsers',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for form inputs (radio buttons, checkboxes, text inputs)\n' +
        "    const inputs = page.locator('input, textarea, select');\n" +
        '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
        '      const input = inputs.nth(i);\n' +
        '\n' +
        '      // Check input is visible and interactive\n' +
        '      await (0, _test.expect)(input).toBeVisible();\n' +
        "      const inputType = await input.getAttribute('type');\n" +
        "      if (inputType === 'radio' || inputType === 'checkbox') {\n" +
        '        // Test radio/checkbox functionality\n' +
        '        await input.click();\n' +
        '\n' +
        '        // Verify selection state\n' +
        '        const isChecked = await input.isChecked();\n' +
        '        (0, _test.expect)(isChecked).toBe(true);\n' +
        "      } else if (inputType === 'text' || inputType === 'textarea') {\n" +
        '        // Test text input functionality\n' +
        "        await input.fill('Test input');\n" +
        '        const value = await input.inputValue();\n' +
        "        (0, _test.expect)(value).toBe('Test input');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form inputs consistently across browsers',
    scope: 'should handle form inputs consistently across browsers',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 48,
    started_at: '2025-08-05T18:12:10.190Z',
    finished_at: '2025-08-05T18:12:10.238Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form inputs consistently across browsers'
    },
    hooks: [ 'b3986ee4-f288-4ef3-a7ff-285d0bd3b45d' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:18.382Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:18.362Z',
      uuid: '5e80559c-c7e9-4722-b811-dc355fcd53a8',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '5e80559c-c7e9-4722-b811-dc355fcd53a8'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:18.363Z',
      uuid: '5e80559c-c7e9-4722-b811-dc355fcd53a8',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '5e80559c-c7e9-4722-b811-dc355fcd53a8'
    }
  ]
} to 26381:0
2025-08-05T18:12:19.498Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '4d4a3d26-ce96-45e2-b748-b2668143ab4d',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'b17fbd17-6d45-41c2-a399-50c78800b038',
      body: [Object],
      scope: 'should maintain consistent button styling and behavior',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      started_at: '2025-08-05T18:12:10.936Z',
      finished_at: '2025-08-05T18:12:17.918Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b17fbd17-6d45-41c2-a399-50c78800b038',
      name: 'should maintain consistent button styling and behavior',
      body: [Object],
      identifier: 'should maintain consistent button styling and behavior',
      scope: 'should maintain consistent button styling and behavior',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 45,
      started_at: '2025-08-05T18:12:10.929Z',
      finished_at: '2025-08-05T18:12:10.974Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'b3986ee4-f288-4ef3-a7ff-285d0bd3b45d',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '5e80559c-c7e9-4722-b811-dc355fcd53a8',
      body: [Object],
      scope: 'should handle form inputs consistently across browsers',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      started_at: '2025-08-05T18:12:10.200Z',
      finished_at: '2025-08-05T18:12:18.338Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '5e80559c-c7e9-4722-b811-dc355fcd53a8',
      name: 'should handle form inputs consistently across browsers',
      body: [Object],
      identifier: 'should handle form inputs consistently across browsers',
      scope: 'should handle form inputs consistently across browsers',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 48,
      started_at: '2025-08-05T18:12:10.190Z',
      finished_at: '2025-08-05T18:12:10.238Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:12:19.500Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:12:20.274Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '835f63ce-1edf-497b-838c-41f7b4127090',
    name: 'should handle responsive design for assessment flow',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    const viewports = [{\n' +
        '      width: 375,\n' +
        '      height: 667,\n' +
        "      name: 'Mobile'\n" +
        '    }, {\n' +
        '      width: 768,\n' +
        '      height: 1024,\n' +
        "      name: 'Tablet'\n" +
        '    }, {\n' +
        '      width: 1024,\n' +
        '      height: 768,\n' +
        "      name: 'Desktop'\n" +
        '    }];\n' +
        '    for (const viewport of viewports) {\n' +
        '      await page.setViewportSize({\n' +
        '        width: viewport.width,\n' +
        '        height: viewport.height\n' +
        '      });\n' +
        '      await page.waitForTimeout(500);\n' +
        '\n' +
        '      // Check that assessment content is properly contained\n' +
        `      const container = page.locator('main, .container, .assessment-container, [role="main"]').first();\n` +
        '      if ((await container.count()) > 0) {\n' +
        '        const isVisible = await container.isVisible();\n' +
        '        (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        '        // Check no horizontal overflow\n' +
        '        const overflow = await page.evaluate(() => {\n' +
        '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
        '        });\n' +
        '        (0, _test.expect)(overflow).toBe(true);\n' +
        '      }\n' +
        '\n' +
        '      // Check that form elements are still accessible\n' +
        "      const inputs = page.locator('input, textarea, select');\n" +
        '      if ((await inputs.count()) > 0) {\n' +
        '        const firstInput = inputs.first();\n' +
        '        await (0, _test.expect)(firstInput).toBeVisible();\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle responsive design for assessment flow',
    scope: 'should handle responsive design for assessment flow',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:12:20.262Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle responsive design for assessment flow'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:20.287Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '710908e2-26e4-4542-88c0-37431c9629bd',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '835f63ce-1edf-497b-838c-41f7b4127090',
    body: { lang: 'node', code: null },
    scope: 'should handle responsive design for assessment flow',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    started_at: '2025-08-05T18:12:20.284Z'
  }
} to 26381:0
2025-08-05T18:12:21.498Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '835f63ce-1edf-497b-838c-41f7b4127090',
      name: 'should handle responsive design for assessment flow',
      body: [Object],
      identifier: 'should handle responsive design for assessment flow',
      scope: 'should handle responsive design for assessment flow',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:12:20.262Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '710908e2-26e4-4542-88c0-37431c9629bd',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '835f63ce-1edf-497b-838c-41f7b4127090',
      body: [Object],
      scope: 'should handle responsive design for assessment flow',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      started_at: '2025-08-05T18:12:20.284Z'
    }
  }
] to 26381:0
2025-08-05T18:12:21.499Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:12:21.649Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'c4665705-35e6-4bb8-aa84-d93ee39435a6',
    name: 'should handle form validation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for submit buttons\n' +
        `    const submitButtons = page.locator('button[type="submit"], input[type="submit"], button:has-text("Submit"), button:has-text("Next")');\n` +
        '    if ((await submitButtons.count()) > 0) {\n' +
        '      const submitButton = submitButtons.first();\n' +
        '\n' +
        '      // Try to submit without filling required fields\n' +
        '      await submitButton.click();\n' +
        '\n' +
        '      // Wait for potential validation messages\n' +
        '      await page.waitForTimeout(1000);\n' +
        '\n' +
        '      // Check for validation messages\n' +
        `      const errorMessages = page.locator('.error, .validation-error, [role="alert"], .text-red-500, .text-red-600');\n` +
        '\n' +
        '      // If there are validation errors, they should be visible and styled consistently\n' +
        '      if ((await errorMessages.count()) > 0) {\n' +
        '        for (let i = 0; i < Math.min(await errorMessages.count(), 3); i++) {\n' +
        '          const error = errorMessages.nth(i);\n' +
        '          await (0, _test.expect)(error).toBeVisible();\n' +
        '\n' +
        '          // Check error styling\n' +
        '          const color = await error.evaluate(el => {\n' +
        '            return window.getComputedStyle(el).color;\n' +
        '          });\n' +
        '\n' +
        '          // Should have error color styling\n' +
        '          (0, _test.expect)(color).toMatch(/rgb\\(239, 68, 68\\)|rgb\\(220, 38, 38\\)|red/);\n' +
        '        }\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form validation consistently',
    scope: 'should handle form validation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:12:21.633Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form validation consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:21.654Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '8bb29752-1019-4313-baf6-ad9503966dd1',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'c4665705-35e6-4bb8-aa84-d93ee39435a6',
    body: { lang: 'node', code: null },
    scope: 'should handle form validation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    started_at: '2025-08-05T18:12:21.648Z'
  }
} to 26381:0
2025-08-05T18:12:21.989Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '4eff4b69-58c6-46a5-beac-3c78c311d66f',
    name: 'should maintain consistent loading states',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for loading indicators\n' +
        `    const loadingIndicators = page.locator('.loading, .spinner, [aria-busy="true"], .animate-spin');\n` +
        '    if ((await loadingIndicators.count()) > 0) {\n' +
        '      for (let i = 0; i < Math.min(await loadingIndicators.count(), 3); i++) {\n' +
        '        const loader = loadingIndicators.nth(i);\n' +
        '\n' +
        '        // Check loading indicator is visible\n' +
        '        await (0, _test.expect)(loader).toBeVisible();\n' +
        '\n' +
        '        // Check it has proper styling\n' +
        '        const styles = await loader.evaluate(el => {\n' +
        '          const computed = window.getComputedStyle(el);\n' +
        '          return {\n' +
        '            display: computed.display,\n' +
        '            visibility: computed.visibility\n' +
        '          };\n' +
        '        });\n' +
        "        (0, _test.expect)(styles.display).not.toBe('none');\n" +
        "        (0, _test.expect)(styles.visibility).not.toBe('hidden');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent loading states',
    scope: 'should maintain consistent loading states',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:12:21.978Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent loading states'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:21.996Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '524f70b6-3487-43cd-9b51-3f47b0bc4b17',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '4eff4b69-58c6-46a5-beac-3c78c311d66f',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent loading states',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    started_at: '2025-08-05T18:12:21.989Z'
  }
} to 26381:0
2025-08-05T18:12:23.501Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'c4665705-35e6-4bb8-aa84-d93ee39435a6',
      name: 'should handle form validation consistently',
      body: [Object],
      identifier: 'should handle form validation consistently',
      scope: 'should handle form validation consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:12:21.633Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '8bb29752-1019-4313-baf6-ad9503966dd1',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'c4665705-35e6-4bb8-aa84-d93ee39435a6',
      body: [Object],
      scope: 'should handle form validation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      started_at: '2025-08-05T18:12:21.648Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '4eff4b69-58c6-46a5-beac-3c78c311d66f',
      name: 'should maintain consistent loading states',
      body: [Object],
      identifier: 'should maintain consistent loading states',
      scope: 'should maintain consistent loading states',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:12:21.978Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '524f70b6-3487-43cd-9b51-3f47b0bc4b17',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '4eff4b69-58c6-46a5-beac-3c78c311d66f',
      body: [Object],
      scope: 'should maintain consistent loading states',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      started_at: '2025-08-05T18:12:21.989Z'
    }
  }
] to 26381:0
2025-08-05T18:12:23.503Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:12:28.689Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:21.653Z',
      uuid: '8bb29752-1019-4313-baf6-ad9503966dd1',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '8bb29752-1019-4313-baf6-ad9503966dd1'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:21.686Z',
      uuid: '8bb29752-1019-4313-baf6-ad9503966dd1',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '8bb29752-1019-4313-baf6-ad9503966dd1'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:21.715Z',
      uuid: '8bb29752-1019-4313-baf6-ad9503966dd1',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '8bb29752-1019-4313-baf6-ad9503966dd1'
    }
  ]
} to 26381:0
2025-08-05T18:12:28.693Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '8bb29752-1019-4313-baf6-ad9503966dd1',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'c4665705-35e6-4bb8-aa84-d93ee39435a6',
    body: { lang: 'node', code: null },
    scope: 'should handle form validation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    started_at: '2025-08-05T18:12:21.648Z',
    finished_at: '2025-08-05T18:12:28.682Z'
  }
} to 26381:0
2025-08-05T18:12:28.731Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'c4665705-35e6-4bb8-aa84-d93ee39435a6',
    name: 'should handle form validation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for submit buttons\n' +
        `    const submitButtons = page.locator('button[type="submit"], input[type="submit"], button:has-text("Submit"), button:has-text("Next")');\n` +
        '    if ((await submitButtons.count()) > 0) {\n' +
        '      const submitButton = submitButtons.first();\n' +
        '\n' +
        '      // Try to submit without filling required fields\n' +
        '      await submitButton.click();\n' +
        '\n' +
        '      // Wait for potential validation messages\n' +
        '      await page.waitForTimeout(1000);\n' +
        '\n' +
        '      // Check for validation messages\n' +
        `      const errorMessages = page.locator('.error, .validation-error, [role="alert"], .text-red-500, .text-red-600');\n` +
        '\n' +
        '      // If there are validation errors, they should be visible and styled consistently\n' +
        '      if ((await errorMessages.count()) > 0) {\n' +
        '        for (let i = 0; i < Math.min(await errorMessages.count(), 3); i++) {\n' +
        '          const error = errorMessages.nth(i);\n' +
        '          await (0, _test.expect)(error).toBeVisible();\n' +
        '\n' +
        '          // Check error styling\n' +
        '          const color = await error.evaluate(el => {\n' +
        '            return window.getComputedStyle(el).color;\n' +
        '          });\n' +
        '\n' +
        '          // Should have error color styling\n' +
        '          (0, _test.expect)(color).toMatch(/rgb\\(239, 68, 68\\)|rgb\\(220, 38, 38\\)|red/);\n' +
        '        }\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form validation consistently',
    scope: 'should handle form validation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 56,
    started_at: '2025-08-05T18:12:21.633Z',
    finished_at: '2025-08-05T18:12:21.689Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form validation consistently'
    },
    hooks: [ '8bb29752-1019-4313-baf6-ad9503966dd1' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:28.733Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:28.710Z',
      uuid: 'c4665705-35e6-4bb8-aa84-d93ee39435a6',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'c4665705-35e6-4bb8-aa84-d93ee39435a6'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:28.712Z',
      uuid: 'c4665705-35e6-4bb8-aa84-d93ee39435a6',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'c4665705-35e6-4bb8-aa84-d93ee39435a6'
    }
  ]
} to 26381:0
2025-08-05T18:12:29.503Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '8bb29752-1019-4313-baf6-ad9503966dd1',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'c4665705-35e6-4bb8-aa84-d93ee39435a6',
      body: [Object],
      scope: 'should handle form validation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      started_at: '2025-08-05T18:12:21.648Z',
      finished_at: '2025-08-05T18:12:28.682Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'c4665705-35e6-4bb8-aa84-d93ee39435a6',
      name: 'should handle form validation consistently',
      body: [Object],
      identifier: 'should handle form validation consistently',
      scope: 'should handle form validation consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 56,
      started_at: '2025-08-05T18:12:21.633Z',
      finished_at: '2025-08-05T18:12:21.689Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:12:29.504Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:12:31.955Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'ee0d27fe-5d08-4872-86ed-fc57b6b02e0c',
    name: 'should handle navigation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test navigation buttons/links\n' +
        `    const navButtons = page.locator('a, button, [role="link"]').filter({\n` +
        '      hasText: /back|next|previous|continue/i\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await navButtons.count(), 3); i++) {\n' +
        '      const navButton = navButtons.nth(i);\n' +
        '\n' +
        '      // Check navigation element is visible and clickable\n' +
        '      await (0, _test.expect)(navButton).toBeVisible();\n' +
        '      const styles = await navButton.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          cursor: computed.cursor,\n' +
        '          pointerEvents: computed.pointerEvents\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should be clickable\n' +
        "      (0, _test.expect)(['pointer', 'default']).toContain(styles.cursor);\n" +
        "      (0, _test.expect)(styles.pointerEvents).not.toBe('none');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle navigation consistently',
    scope: 'should handle navigation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:12:31.943Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle navigation consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:31.957Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'd01338d2-0242-49fd-bb39-186297895337',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'ee0d27fe-5d08-4872-86ed-fc57b6b02e0c',
    body: { lang: 'node', code: null },
    scope: 'should handle navigation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    started_at: '2025-08-05T18:12:31.951Z'
  }
} to 26381:0
2025-08-05T18:12:33.073Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:21.992Z',
      uuid: '524f70b6-3487-43cd-9b51-3f47b0bc4b17',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '524f70b6-3487-43cd-9b51-3f47b0bc4b17'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:22.016Z',
      uuid: '524f70b6-3487-43cd-9b51-3f47b0bc4b17',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '524f70b6-3487-43cd-9b51-3f47b0bc4b17'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:22.043Z',
      uuid: '524f70b6-3487-43cd-9b51-3f47b0bc4b17',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '524f70b6-3487-43cd-9b51-3f47b0bc4b17'
    }
  ]
} to 26381:0
2025-08-05T18:12:33.076Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '524f70b6-3487-43cd-9b51-3f47b0bc4b17',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '4eff4b69-58c6-46a5-beac-3c78c311d66f',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent loading states',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    started_at: '2025-08-05T18:12:21.989Z',
    finished_at: '2025-08-05T18:12:33.069Z'
  }
} to 26381:0
2025-08-05T18:12:33.102Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '4eff4b69-58c6-46a5-beac-3c78c311d66f',
    name: 'should maintain consistent loading states',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for loading indicators\n' +
        `    const loadingIndicators = page.locator('.loading, .spinner, [aria-busy="true"], .animate-spin');\n` +
        '    if ((await loadingIndicators.count()) > 0) {\n' +
        '      for (let i = 0; i < Math.min(await loadingIndicators.count(), 3); i++) {\n' +
        '        const loader = loadingIndicators.nth(i);\n' +
        '\n' +
        '        // Check loading indicator is visible\n' +
        '        await (0, _test.expect)(loader).toBeVisible();\n' +
        '\n' +
        '        // Check it has proper styling\n' +
        '        const styles = await loader.evaluate(el => {\n' +
        '          const computed = window.getComputedStyle(el);\n' +
        '          return {\n' +
        '            display: computed.display,\n' +
        '            visibility: computed.visibility\n' +
        '          };\n' +
        '        });\n' +
        "        (0, _test.expect)(styles.display).not.toBe('none');\n" +
        "        (0, _test.expect)(styles.visibility).not.toBe('hidden');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent loading states',
    scope: 'should maintain consistent loading states',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 38,
    started_at: '2025-08-05T18:12:21.978Z',
    finished_at: '2025-08-05T18:12:22.016Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent loading states'
    },
    hooks: [ '524f70b6-3487-43cd-9b51-3f47b0bc4b17' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:33.103Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:33.087Z',
      uuid: '4eff4b69-58c6-46a5-beac-3c78c311d66f',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '4eff4b69-58c6-46a5-beac-3c78c311d66f'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:33.088Z',
      uuid: '4eff4b69-58c6-46a5-beac-3c78c311d66f',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '4eff4b69-58c6-46a5-beac-3c78c311d66f'
    }
  ]
} to 26381:0
2025-08-05T18:12:33.504Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'ee0d27fe-5d08-4872-86ed-fc57b6b02e0c',
      name: 'should handle navigation consistently',
      body: [Object],
      identifier: 'should handle navigation consistently',
      scope: 'should handle navigation consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:12:31.943Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'd01338d2-0242-49fd-bb39-186297895337',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'ee0d27fe-5d08-4872-86ed-fc57b6b02e0c',
      body: [Object],
      scope: 'should handle navigation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      started_at: '2025-08-05T18:12:31.951Z'
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '524f70b6-3487-43cd-9b51-3f47b0bc4b17',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '4eff4b69-58c6-46a5-beac-3c78c311d66f',
      body: [Object],
      scope: 'should maintain consistent loading states',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      started_at: '2025-08-05T18:12:21.989Z',
      finished_at: '2025-08-05T18:12:33.069Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '4eff4b69-58c6-46a5-beac-3c78c311d66f',
      name: 'should maintain consistent loading states',
      body: [Object],
      identifier: 'should maintain consistent loading states',
      scope: 'should maintain consistent loading states',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 38,
      started_at: '2025-08-05T18:12:21.978Z',
      finished_at: '2025-08-05T18:12:22.016Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:12:33.505Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:12:36.191Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '547c970d-5876-4446-9f3e-82b1fd67b16b',
    name: 'should connect to BrowserStack and load the homepage',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to the homepage\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-connection-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load the homepage',
    scope: 'should connect to BrowserStack and load the homepage',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:12:36.182Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should connect to BrowserStack and load the homepage'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:37.504Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '547c970d-5876-4446-9f3e-82b1fd67b16b',
      name: 'should connect to BrowserStack and load the homepage',
      body: [Object],
      identifier: 'should connect to BrowserStack and load the homepage',
      scope: 'should connect to BrowserStack and load the homepage',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:12:36.182Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 26381:0
2025-08-05T18:12:37.506Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:12:39.435Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:31.953Z',
      uuid: 'd01338d2-0242-49fd-bb39-186297895337',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'd01338d2-0242-49fd-bb39-186297895337'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:31.978Z',
      uuid: 'd01338d2-0242-49fd-bb39-186297895337',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'd01338d2-0242-49fd-bb39-186297895337'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:32.009Z',
      uuid: 'd01338d2-0242-49fd-bb39-186297895337',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'd01338d2-0242-49fd-bb39-186297895337'
    }
  ]
} to 26381:0
2025-08-05T18:12:39.439Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'd01338d2-0242-49fd-bb39-186297895337',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'ee0d27fe-5d08-4872-86ed-fc57b6b02e0c',
    body: { lang: 'node', code: null },
    scope: 'should handle navigation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    started_at: '2025-08-05T18:12:31.951Z',
    finished_at: '2025-08-05T18:12:39.431Z'
  }
} to 26381:0
2025-08-05T18:12:39.468Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'ee0d27fe-5d08-4872-86ed-fc57b6b02e0c',
    name: 'should handle navigation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test navigation buttons/links\n' +
        `    const navButtons = page.locator('a, button, [role="link"]').filter({\n` +
        '      hasText: /back|next|previous|continue/i\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await navButtons.count(), 3); i++) {\n' +
        '      const navButton = navButtons.nth(i);\n' +
        '\n' +
        '      // Check navigation element is visible and clickable\n' +
        '      await (0, _test.expect)(navButton).toBeVisible();\n' +
        '      const styles = await navButton.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          cursor: computed.cursor,\n' +
        '          pointerEvents: computed.pointerEvents\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should be clickable\n' +
        "      (0, _test.expect)(['pointer', 'default']).toContain(styles.cursor);\n" +
        "      (0, _test.expect)(styles.pointerEvents).not.toBe('none');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle navigation consistently',
    scope: 'should handle navigation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 42,
    started_at: '2025-08-05T18:12:31.943Z',
    finished_at: '2025-08-05T18:12:31.985Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle navigation consistently'
    },
    hooks: [ 'd01338d2-0242-49fd-bb39-186297895337' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:39.470Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:39.455Z',
      uuid: 'ee0d27fe-5d08-4872-86ed-fc57b6b02e0c',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'ee0d27fe-5d08-4872-86ed-fc57b6b02e0c'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:39.456Z',
      uuid: 'ee0d27fe-5d08-4872-86ed-fc57b6b02e0c',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'ee0d27fe-5d08-4872-86ed-fc57b6b02e0c'
    }
  ]
} to 26381:0
2025-08-05T18:12:39.506Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'd01338d2-0242-49fd-bb39-186297895337',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'ee0d27fe-5d08-4872-86ed-fc57b6b02e0c',
      body: [Object],
      scope: 'should handle navigation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      started_at: '2025-08-05T18:12:31.951Z',
      finished_at: '2025-08-05T18:12:39.431Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'ee0d27fe-5d08-4872-86ed-fc57b6b02e0c',
      name: 'should handle navigation consistently',
      body: [Object],
      identifier: 'should handle navigation consistently',
      scope: 'should handle navigation consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 42,
      started_at: '2025-08-05T18:12:31.943Z',
      finished_at: '2025-08-05T18:12:31.985Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:12:39.507Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:12:42.737Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '5ed2cebc-3ae7-4483-b355-4a05f8919ea7',
    name: 'should display consistent branding colors',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for any elements with Gutcheck brand colors\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    if ((await gutcheckElements.count()) > 0) {\n' +
        '      console.log(`🎨 Found ${await gutcheckElements.count()} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display consistent branding colors',
    scope: 'should display consistent branding colors',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:12:42.727Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should display consistent branding colors'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:43.507Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '5ed2cebc-3ae7-4483-b355-4a05f8919ea7',
      name: 'should display consistent branding colors',
      body: [Object],
      identifier: 'should display consistent branding colors',
      scope: 'should display consistent branding colors',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:12:42.727Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 26381:0
2025-08-05T18:12:43.509Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:12:44.237Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '547c970d-5876-4446-9f3e-82b1fd67b16b',
    name: 'should connect to BrowserStack and load the homepage',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to the homepage\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-connection-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load the homepage',
    scope: 'should connect to BrowserStack and load the homepage',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'failed',
    duration_in_ms: 41,
    started_at: '2025-08-05T18:12:36.182Z',
    finished_at: '2025-08-05T18:12:36.223Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should connect to BrowserStack and load the homepage'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:44.237Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:44.223Z',
      uuid: '547c970d-5876-4446-9f3e-82b1fd67b16b',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '547c970d-5876-4446-9f3e-82b1fd67b16b'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:44.224Z',
      uuid: '547c970d-5876-4446-9f3e-82b1fd67b16b',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '547c970d-5876-4446-9f3e-82b1fd67b16b'
    }
  ]
} to 26381:0
2025-08-05T18:12:45.507Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '547c970d-5876-4446-9f3e-82b1fd67b16b',
      name: 'should connect to BrowserStack and load the homepage',
      body: [Object],
      identifier: 'should connect to BrowserStack and load the homepage',
      scope: 'should connect to BrowserStack and load the homepage',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'failed',
      duration_in_ms: 41,
      started_at: '2025-08-05T18:12:36.182Z',
      finished_at: '2025-08-05T18:12:36.223Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:12:45.508Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:12:47.303Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '875a0601-8269-42f4-a91f-68ea578793ac',
    name: 'should connect to BrowserStack and load a public website',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to a public website instead of localhost\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-public-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '    console.log(`🌐 URL: ${page.url()}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load a public website',
    scope: 'should connect to BrowserStack and load a public website',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:12:47.292Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should connect to BrowserStack and load a public website'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:47.508Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '875a0601-8269-42f4-a91f-68ea578793ac',
      name: 'should connect to BrowserStack and load a public website',
      body: [Object],
      identifier: 'should connect to BrowserStack and load a public website',
      scope: 'should connect to BrowserStack and load a public website',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:12:47.292Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 26381:0
2025-08-05T18:12:47.509Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:12:47.561Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:20.310Z',
      uuid: '710908e2-26e4-4542-88c0-37431c9629bd',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '710908e2-26e4-4542-88c0-37431c9629bd'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:20.374Z',
      uuid: '710908e2-26e4-4542-88c0-37431c9629bd',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '710908e2-26e4-4542-88c0-37431c9629bd'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:20.428Z',
      uuid: '710908e2-26e4-4542-88c0-37431c9629bd',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '710908e2-26e4-4542-88c0-37431c9629bd'
    }
  ]
} to 26381:0
2025-08-05T18:12:47.565Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '710908e2-26e4-4542-88c0-37431c9629bd',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '835f63ce-1edf-497b-838c-41f7b4127090',
    body: { lang: 'node', code: null },
    scope: 'should handle responsive design for assessment flow',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    started_at: '2025-08-05T18:12:20.284Z',
    finished_at: '2025-08-05T18:12:47.551Z'
  }
} to 26381:0
2025-08-05T18:12:47.588Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '835f63ce-1edf-497b-838c-41f7b4127090',
    name: 'should handle responsive design for assessment flow',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    const viewports = [{\n' +
        '      width: 375,\n' +
        '      height: 667,\n' +
        "      name: 'Mobile'\n" +
        '    }, {\n' +
        '      width: 768,\n' +
        '      height: 1024,\n' +
        "      name: 'Tablet'\n" +
        '    }, {\n' +
        '      width: 1024,\n' +
        '      height: 768,\n' +
        "      name: 'Desktop'\n" +
        '    }];\n' +
        '    for (const viewport of viewports) {\n' +
        '      await page.setViewportSize({\n' +
        '        width: viewport.width,\n' +
        '        height: viewport.height\n' +
        '      });\n' +
        '      await page.waitForTimeout(500);\n' +
        '\n' +
        '      // Check that assessment content is properly contained\n' +
        `      const container = page.locator('main, .container, .assessment-container, [role="main"]').first();\n` +
        '      if ((await container.count()) > 0) {\n' +
        '        const isVisible = await container.isVisible();\n' +
        '        (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        '        // Check no horizontal overflow\n' +
        '        const overflow = await page.evaluate(() => {\n' +
        '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
        '        });\n' +
        '        (0, _test.expect)(overflow).toBe(true);\n' +
        '      }\n' +
        '\n' +
        '      // Check that form elements are still accessible\n' +
        "      const inputs = page.locator('input, textarea, select');\n" +
        '      if ((await inputs.count()) > 0) {\n' +
        '        const firstInput = inputs.first();\n' +
        '        await (0, _test.expect)(firstInput).toBeVisible();\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle responsive design for assessment flow',
    scope: 'should handle responsive design for assessment flow',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 79,
    started_at: '2025-08-05T18:12:20.262Z',
    finished_at: '2025-08-05T18:12:20.341Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle responsive design for assessment flow'
    },
    hooks: [ '710908e2-26e4-4542-88c0-37431c9629bd' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:47.588Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:47.575Z',
      uuid: '835f63ce-1edf-497b-838c-41f7b4127090',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '835f63ce-1edf-497b-838c-41f7b4127090'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:47.576Z',
      uuid: '835f63ce-1edf-497b-838c-41f7b4127090',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '835f63ce-1edf-497b-838c-41f7b4127090'
    }
  ]
} to 26381:0
2025-08-05T18:12:49.509Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '710908e2-26e4-4542-88c0-37431c9629bd',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '835f63ce-1edf-497b-838c-41f7b4127090',
      body: [Object],
      scope: 'should handle responsive design for assessment flow',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      started_at: '2025-08-05T18:12:20.284Z',
      finished_at: '2025-08-05T18:12:47.551Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '835f63ce-1edf-497b-838c-41f7b4127090',
      name: 'should handle responsive design for assessment flow',
      body: [Object],
      identifier: 'should handle responsive design for assessment flow',
      scope: 'should handle responsive design for assessment flow',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 79,
      started_at: '2025-08-05T18:12:20.262Z',
      finished_at: '2025-08-05T18:12:20.341Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:12:49.509Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:12:49.580Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '5ed2cebc-3ae7-4483-b355-4a05f8919ea7',
    name: 'should display consistent branding colors',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for any elements with Gutcheck brand colors\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    if ((await gutcheckElements.count()) > 0) {\n' +
        '      console.log(`🎨 Found ${await gutcheckElements.count()} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display consistent branding colors',
    scope: 'should display consistent branding colors',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'failed',
    duration_in_ms: 41,
    started_at: '2025-08-05T18:12:42.727Z',
    finished_at: '2025-08-05T18:12:42.768Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should display consistent branding colors'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:49.581Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:49.566Z',
      uuid: '5ed2cebc-3ae7-4483-b355-4a05f8919ea7',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '5ed2cebc-3ae7-4483-b355-4a05f8919ea7'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:49.567Z',
      uuid: '5ed2cebc-3ae7-4483-b355-4a05f8919ea7',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '5ed2cebc-3ae7-4483-b355-4a05f8919ea7'
    }
  ]
} to 26381:0
2025-08-05T18:12:50.918Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '2ddbf195-0769-4d41-ad87-52d0a456b2a0',
    name: 'should verify browser capabilities',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Get browser information\n' +
        '    const userAgent = await page.evaluate(() => navigator.userAgent);\n' +
        '    const viewport = page.viewportSize();\n' +
        '    console.log(`🔍 User Agent: ${userAgent}`);\n' +
        '    console.log(`📐 Viewport: ${viewport === null || viewport === void 0 ? void 0 : viewport.width}x${viewport === null || viewport === void 0 ? void 0 : viewport.height}`);\n' +
        '\n' +
        "    // Verify we're running in a real browser environment\n" +
        "    (0, _test.expect)(userAgent).toContain('Chrome');\n" +
        '    (0, _test.expect)(viewport).toBeTruthy();\n' +
        '  }'
    },
    identifier: 'should verify browser capabilities',
    scope: 'should verify browser capabilities',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:12:50.901Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should verify browser capabilities'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:51.510Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '5ed2cebc-3ae7-4483-b355-4a05f8919ea7',
      name: 'should display consistent branding colors',
      body: [Object],
      identifier: 'should display consistent branding colors',
      scope: 'should display consistent branding colors',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'failed',
      duration_in_ms: 41,
      started_at: '2025-08-05T18:12:42.727Z',
      finished_at: '2025-08-05T18:12:42.768Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '2ddbf195-0769-4d41-ad87-52d0a456b2a0',
      name: 'should verify browser capabilities',
      body: [Object],
      identifier: 'should verify browser capabilities',
      scope: 'should verify browser capabilities',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:12:50.901Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 26381:0
2025-08-05T18:12:51.511Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:12:52.851Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '8a1ca59d-4bb0-4569-9e00-a40c9133e00d',
    name: 'should display consistent colors across browsers',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test Gutcheck brand colors\n' +
        '    const colorTests = [{\n' +
        "      selector: '.bg-gutcheck-deep-navy',\n" +
        "      expectedColor: 'rgb(10, 31, 68)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-electric-blue',\n" +
        "      expectedColor: 'rgb(20, 122, 255)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-vibrant-teal',\n" +
        "      expectedColor: 'rgb(25, 194, 160)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-bright-orange',\n" +
        "      expectedColor: 'rgb(255, 107, 0)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-bright-yellow',\n" +
        "      expectedColor: 'rgb(255, 199, 0)'\n" +
        '    }];\n' +
        '    for (const test of colorTests) {\n' +
        '      const element = page.locator(test.selector).first();\n' +
        '      if ((await element.count()) > 0) {\n' +
        '        const backgroundColor = await element.evaluate(el => {\n' +
        '          return window.getComputedStyle(el).backgroundColor;\n' +
        '        });\n' +
        '        (0, _test.expect)(backgroundColor).toBe(test.expectedColor);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should display consistent colors across browsers',
    scope: 'should display consistent colors across browsers',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:12:52.836Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should display consistent colors across browsers'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:52.857Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'dd297432-1058-41f0-8c9f-e69cbbcb3344',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '8a1ca59d-4bb0-4569-9e00-a40c9133e00d',
    body: { lang: 'node', code: null },
    scope: 'should display consistent colors across browsers',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    started_at: '2025-08-05T18:12:52.842Z'
  }
} to 26381:0
2025-08-05T18:12:53.511Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '8a1ca59d-4bb0-4569-9e00-a40c9133e00d',
      name: 'should display consistent colors across browsers',
      body: [Object],
      identifier: 'should display consistent colors across browsers',
      scope: 'should display consistent colors across browsers',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:12:52.836Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'dd297432-1058-41f0-8c9f-e69cbbcb3344',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '8a1ca59d-4bb0-4569-9e00-a40c9133e00d',
      body: [Object],
      scope: 'should display consistent colors across browsers',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      started_at: '2025-08-05T18:12:52.842Z'
    }
  }
] to 26381:0
2025-08-05T18:12:53.512Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:12:55.116Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '875a0601-8269-42f4-a91f-68ea578793ac',
    name: 'should connect to BrowserStack and load a public website',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to a public website instead of localhost\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-public-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '    console.log(`🌐 URL: ${page.url()}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load a public website',
    scope: 'should connect to BrowserStack and load a public website',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'failed',
    duration_in_ms: 42,
    started_at: '2025-08-05T18:12:47.292Z',
    finished_at: '2025-08-05T18:12:47.334Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should connect to BrowserStack and load a public website'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:55.118Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:55.092Z',
      uuid: '875a0601-8269-42f4-a91f-68ea578793ac',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '875a0601-8269-42f4-a91f-68ea578793ac'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:55.093Z',
      uuid: '875a0601-8269-42f4-a91f-68ea578793ac',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '875a0601-8269-42f4-a91f-68ea578793ac'
    }
  ]
} to 26381:0
2025-08-05T18:12:55.511Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '875a0601-8269-42f4-a91f-68ea578793ac',
      name: 'should connect to BrowserStack and load a public website',
      body: [Object],
      identifier: 'should connect to BrowserStack and load a public website',
      scope: 'should connect to BrowserStack and load a public website',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'failed',
      duration_in_ms: 42,
      started_at: '2025-08-05T18:12:47.292Z',
      finished_at: '2025-08-05T18:12:47.334Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:12:55.512Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:12:57.904Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '2ddbf195-0769-4d41-ad87-52d0a456b2a0',
    name: 'should verify browser capabilities',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Get browser information\n' +
        '    const userAgent = await page.evaluate(() => navigator.userAgent);\n' +
        '    const viewport = page.viewportSize();\n' +
        '    console.log(`🔍 User Agent: ${userAgent}`);\n' +
        '    console.log(`📐 Viewport: ${viewport === null || viewport === void 0 ? void 0 : viewport.width}x${viewport === null || viewport === void 0 ? void 0 : viewport.height}`);\n' +
        '\n' +
        "    // Verify we're running in a real browser environment\n" +
        "    (0, _test.expect)(userAgent).toContain('Chrome');\n" +
        '    (0, _test.expect)(viewport).toBeTruthy();\n' +
        '  }'
    },
    identifier: 'should verify browser capabilities',
    scope: 'should verify browser capabilities',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'failed',
    duration_in_ms: 41,
    started_at: '2025-08-05T18:12:50.901Z',
    finished_at: '2025-08-05T18:12:50.942Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should verify browser capabilities'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:57.905Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:57.885Z',
      uuid: '2ddbf195-0769-4d41-ad87-52d0a456b2a0',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '2ddbf195-0769-4d41-ad87-52d0a456b2a0'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:12:57.886Z',
      uuid: '2ddbf195-0769-4d41-ad87-52d0a456b2a0',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '2ddbf195-0769-4d41-ad87-52d0a456b2a0'
    }
  ]
} to 26381:0
2025-08-05T18:12:58.547Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '14a96d8a-54bb-4605-9011-2e4954acaf5e',
    name: 'should maintain consistent typography',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test font family consistency\n' +
        "    const textElements = page.locator('h1, h2, h3, p, button, input, textarea');\n" +
        '    for (let i = 0; i < Math.min(await textElements.count(), 10); i++) {\n' +
        '      const element = textElements.nth(i);\n' +
        '      const fontFamily = await element.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).fontFamily;\n' +
        '      });\n' +
        '\n' +
        '      // Should use Inter font family or fallback to system fonts\n' +
        '      (0, _test.expect)(fontFamily).toMatch(/Inter|system-ui|sans-serif/);\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent typography',
    scope: 'should maintain consistent typography',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:12:58.534Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain consistent typography'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:12:58.558Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'aaf7a8f0-830f-4565-a65d-6a0879babd3a',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '14a96d8a-54bb-4605-9011-2e4954acaf5e',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent typography',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    started_at: '2025-08-05T18:12:58.554Z'
  }
} to 26381:0
2025-08-05T18:12:59.512Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '2ddbf195-0769-4d41-ad87-52d0a456b2a0',
      name: 'should verify browser capabilities',
      body: [Object],
      identifier: 'should verify browser capabilities',
      scope: 'should verify browser capabilities',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'failed',
      duration_in_ms: 41,
      started_at: '2025-08-05T18:12:50.901Z',
      finished_at: '2025-08-05T18:12:50.942Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '14a96d8a-54bb-4605-9011-2e4954acaf5e',
      name: 'should maintain consistent typography',
      body: [Object],
      identifier: 'should maintain consistent typography',
      scope: 'should maintain consistent typography',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:12:58.534Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'aaf7a8f0-830f-4565-a65d-6a0879babd3a',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '14a96d8a-54bb-4605-9011-2e4954acaf5e',
      body: [Object],
      scope: 'should maintain consistent typography',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      started_at: '2025-08-05T18:12:58.554Z'
    }
  }
] to 26381:0
2025-08-05T18:12:59.513Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:13:00.999Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '6e2cbb7a-cd2b-47e1-bd54-4a53622f9e6f',
    name: 'should have consistent button styling',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    const buttons = page.locator('button');\n" +
        '    for (let i = 0; i < Math.min(await buttons.count(), 5); i++) {\n' +
        '      const button = buttons.nth(i);\n' +
        '\n' +
        '      // Check button has proper styling\n' +
        '      const styles = await button.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding,\n' +
        '          cursor: computed.cursor\n' +
        '        };\n' +
        '      });\n' +
        "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
        "      (0, _test.expect)(styles.borderRadius).not.toBe('0px');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should have consistent button styling',
    scope: 'should have consistent button styling',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:13:00.984Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should have consistent button styling'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:13:01.004Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'c787528c-05ea-4bd3-a8ba-293ad6b5e4e4',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '6e2cbb7a-cd2b-47e1-bd54-4a53622f9e6f',
    body: { lang: 'node', code: null },
    scope: 'should have consistent button styling',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    started_at: '2025-08-05T18:13:00.990Z'
  }
} to 26381:0
2025-08-05T18:13:01.488Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:52.846Z',
      uuid: 'dd297432-1058-41f0-8c9f-e69cbbcb3344',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'dd297432-1058-41f0-8c9f-e69cbbcb3344'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:52.871Z',
      uuid: 'dd297432-1058-41f0-8c9f-e69cbbcb3344',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'dd297432-1058-41f0-8c9f-e69cbbcb3344'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:52.900Z',
      uuid: 'dd297432-1058-41f0-8c9f-e69cbbcb3344',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'dd297432-1058-41f0-8c9f-e69cbbcb3344'
    }
  ]
} to 26381:0
2025-08-05T18:13:01.493Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'dd297432-1058-41f0-8c9f-e69cbbcb3344',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '8a1ca59d-4bb0-4569-9e00-a40c9133e00d',
    body: { lang: 'node', code: null },
    scope: 'should display consistent colors across browsers',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    started_at: '2025-08-05T18:12:52.842Z',
    finished_at: '2025-08-05T18:13:01.479Z'
  }
} to 26381:0
2025-08-05T18:13:01.515Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '6e2cbb7a-cd2b-47e1-bd54-4a53622f9e6f',
      name: 'should have consistent button styling',
      body: [Object],
      identifier: 'should have consistent button styling',
      scope: 'should have consistent button styling',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:13:00.984Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'c787528c-05ea-4bd3-a8ba-293ad6b5e4e4',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '6e2cbb7a-cd2b-47e1-bd54-4a53622f9e6f',
      body: [Object],
      scope: 'should have consistent button styling',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      started_at: '2025-08-05T18:13:00.990Z'
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'dd297432-1058-41f0-8c9f-e69cbbcb3344',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '8a1ca59d-4bb0-4569-9e00-a40c9133e00d',
      body: [Object],
      scope: 'should display consistent colors across browsers',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      started_at: '2025-08-05T18:12:52.842Z',
      finished_at: '2025-08-05T18:13:01.479Z'
    }
  }
] to 26381:0
2025-08-05T18:13:01.517Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:13:01.522Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '8a1ca59d-4bb0-4569-9e00-a40c9133e00d',
    name: 'should display consistent colors across browsers',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test Gutcheck brand colors\n' +
        '    const colorTests = [{\n' +
        "      selector: '.bg-gutcheck-deep-navy',\n" +
        "      expectedColor: 'rgb(10, 31, 68)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-electric-blue',\n" +
        "      expectedColor: 'rgb(20, 122, 255)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-vibrant-teal',\n" +
        "      expectedColor: 'rgb(25, 194, 160)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-bright-orange',\n" +
        "      expectedColor: 'rgb(255, 107, 0)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-bright-yellow',\n" +
        "      expectedColor: 'rgb(255, 199, 0)'\n" +
        '    }];\n' +
        '    for (const test of colorTests) {\n' +
        '      const element = page.locator(test.selector).first();\n' +
        '      if ((await element.count()) > 0) {\n' +
        '        const backgroundColor = await element.evaluate(el => {\n' +
        '          return window.getComputedStyle(el).backgroundColor;\n' +
        '        });\n' +
        '        (0, _test.expect)(backgroundColor).toBe(test.expectedColor);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should display consistent colors across browsers',
    scope: 'should display consistent colors across browsers',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 45,
    started_at: '2025-08-05T18:12:52.836Z',
    finished_at: '2025-08-05T18:12:52.881Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should display consistent colors across browsers'
    },
    hooks: [ 'dd297432-1058-41f0-8c9f-e69cbbcb3344' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:13:01.523Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:13:01.507Z',
      uuid: '8a1ca59d-4bb0-4569-9e00-a40c9133e00d',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '8a1ca59d-4bb0-4569-9e00-a40c9133e00d'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:13:01.507Z',
      uuid: '8a1ca59d-4bb0-4569-9e00-a40c9133e00d',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '8a1ca59d-4bb0-4569-9e00-a40c9133e00d'
    }
  ]
} to 26381:0
2025-08-05T18:13:03.512Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '8a1ca59d-4bb0-4569-9e00-a40c9133e00d',
      name: 'should display consistent colors across browsers',
      body: [Object],
      identifier: 'should display consistent colors across browsers',
      scope: 'should display consistent colors across browsers',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 45,
      started_at: '2025-08-05T18:12:52.836Z',
      finished_at: '2025-08-05T18:12:52.881Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:13:03.512Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:13:04.542Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '15d1d919-1bf4-41c0-bdf3-56741c639cea',
    name: 'should maintain layout consistency on different screen sizes',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    const viewports = [{\n' +
        '      width: 1920,\n' +
        '      height: 1080,\n' +
        "      name: 'Desktop Large'\n" +
        '    }, {\n' +
        '      width: 1366,\n' +
        '      height: 768,\n' +
        "      name: 'Desktop Small'\n" +
        '    }, {\n' +
        '      width: 768,\n' +
        '      height: 1024,\n' +
        "      name: 'Tablet Portrait'\n" +
        '    }, {\n' +
        '      width: 375,\n' +
        '      height: 667,\n' +
        "      name: 'Mobile Portrait'\n" +
        '    }, {\n' +
        '      width: 414,\n' +
        '      height: 896,\n' +
        "      name: 'Mobile Large'\n" +
        '    }];\n' +
        '    for (const viewport of viewports) {\n' +
        '      await page.setViewportSize({\n' +
        '        width: viewport.width,\n' +
        '        height: viewport.height\n' +
        '      });\n' +
        '\n' +
        '      // Wait for layout to stabilize\n' +
        '      await page.waitForTimeout(500);\n' +
        '\n' +
        '      // Check that main content is visible and properly positioned\n' +
        `      const mainContent = page.locator('main, .main, #main, [role="main"]').first();\n` +
        '      if ((await mainContent.count()) > 0) {\n' +
        '        const isVisible = await mainContent.isVisible();\n' +
        '        (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        "        // Check that content doesn't overflow horizontally\n" +
        '        const overflow = await page.evaluate(() => {\n' +
        '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
        '        });\n' +
        '        (0, _test.expect)(overflow).toBe(true);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain layout consistency on different screen sizes',
    scope: 'should maintain layout consistency on different screen sizes',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:13:04.532Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain layout consistency on different screen sizes'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:13:04.548Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'bcdaf9ed-a36f-4ede-a7ba-057d973da285',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '15d1d919-1bf4-41c0-bdf3-56741c639cea',
    body: { lang: 'node', code: null },
    scope: 'should maintain layout consistency on different screen sizes',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    started_at: '2025-08-05T18:13:04.542Z'
  }
} to 26381:0
2025-08-05T18:13:05.512Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '15d1d919-1bf4-41c0-bdf3-56741c639cea',
      name: 'should maintain layout consistency on different screen sizes',
      body: [Object],
      identifier: 'should maintain layout consistency on different screen sizes',
      scope: 'should maintain layout consistency on different screen sizes',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:13:04.532Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'bcdaf9ed-a36f-4ede-a7ba-057d973da285',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '15d1d919-1bf4-41c0-bdf3-56741c639cea',
      body: [Object],
      scope: 'should maintain layout consistency on different screen sizes',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      started_at: '2025-08-05T18:13:04.542Z'
    }
  }
] to 26381:0
2025-08-05T18:13:05.512Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:13:13.023Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:13:04.547Z',
      uuid: 'bcdaf9ed-a36f-4ede-a7ba-057d973da285',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'bcdaf9ed-a36f-4ede-a7ba-057d973da285'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:13:04.573Z',
      uuid: 'bcdaf9ed-a36f-4ede-a7ba-057d973da285',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'bcdaf9ed-a36f-4ede-a7ba-057d973da285'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:13:04.602Z',
      uuid: 'bcdaf9ed-a36f-4ede-a7ba-057d973da285',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'bcdaf9ed-a36f-4ede-a7ba-057d973da285'
    }
  ]
} to 26381:0
2025-08-05T18:13:13.025Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'bcdaf9ed-a36f-4ede-a7ba-057d973da285',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '15d1d919-1bf4-41c0-bdf3-56741c639cea',
    body: { lang: 'node', code: null },
    scope: 'should maintain layout consistency on different screen sizes',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    started_at: '2025-08-05T18:13:04.542Z',
    finished_at: '2025-08-05T18:13:13.020Z'
  }
} to 26381:0
2025-08-05T18:13:13.072Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '15d1d919-1bf4-41c0-bdf3-56741c639cea',
    name: 'should maintain layout consistency on different screen sizes',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    const viewports = [{\n' +
        '      width: 1920,\n' +
        '      height: 1080,\n' +
        "      name: 'Desktop Large'\n" +
        '    }, {\n' +
        '      width: 1366,\n' +
        '      height: 768,\n' +
        "      name: 'Desktop Small'\n" +
        '    }, {\n' +
        '      width: 768,\n' +
        '      height: 1024,\n' +
        "      name: 'Tablet Portrait'\n" +
        '    }, {\n' +
        '      width: 375,\n' +
        '      height: 667,\n' +
        "      name: 'Mobile Portrait'\n" +
        '    }, {\n' +
        '      width: 414,\n' +
        '      height: 896,\n' +
        "      name: 'Mobile Large'\n" +
        '    }];\n' +
        '    for (const viewport of viewports) {\n' +
        '      await page.setViewportSize({\n' +
        '        width: viewport.width,\n' +
        '        height: viewport.height\n' +
        '      });\n' +
        '\n' +
        '      // Wait for layout to stabilize\n' +
        '      await page.waitForTimeout(500);\n' +
        '\n' +
        '      // Check that main content is visible and properly positioned\n' +
        `      const mainContent = page.locator('main, .main, #main, [role="main"]').first();\n` +
        '      if ((await mainContent.count()) > 0) {\n' +
        '        const isVisible = await mainContent.isVisible();\n' +
        '        (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        "        // Check that content doesn't overflow horizontally\n" +
        '        const overflow = await page.evaluate(() => {\n' +
        '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
        '        });\n' +
        '        (0, _test.expect)(overflow).toBe(true);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain layout consistency on different screen sizes',
    scope: 'should maintain layout consistency on different screen sizes',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 48,
    started_at: '2025-08-05T18:13:04.532Z',
    finished_at: '2025-08-05T18:13:04.580Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain layout consistency on different screen sizes'
    },
    hooks: [ 'bcdaf9ed-a36f-4ede-a7ba-057d973da285' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:13:13.072Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:13:13.045Z',
      uuid: '15d1d919-1bf4-41c0-bdf3-56741c639cea',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '15d1d919-1bf4-41c0-bdf3-56741c639cea'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:13:13.047Z',
      uuid: '15d1d919-1bf4-41c0-bdf3-56741c639cea',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '15d1d919-1bf4-41c0-bdf3-56741c639cea'
    }
  ]
} to 26381:0
2025-08-05T18:13:13.293Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:58.556Z',
      uuid: 'aaf7a8f0-830f-4565-a65d-6a0879babd3a',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'aaf7a8f0-830f-4565-a65d-6a0879babd3a'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:58.590Z',
      uuid: 'aaf7a8f0-830f-4565-a65d-6a0879babd3a',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'aaf7a8f0-830f-4565-a65d-6a0879babd3a'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:12:58.625Z',
      uuid: 'aaf7a8f0-830f-4565-a65d-6a0879babd3a',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'aaf7a8f0-830f-4565-a65d-6a0879babd3a'
    }
  ]
} to 26381:0
2025-08-05T18:13:13.299Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'aaf7a8f0-830f-4565-a65d-6a0879babd3a',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '14a96d8a-54bb-4605-9011-2e4954acaf5e',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent typography',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    started_at: '2025-08-05T18:12:58.554Z',
    finished_at: '2025-08-05T18:13:13.288Z'
  }
} to 26381:0
2025-08-05T18:13:13.322Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '14a96d8a-54bb-4605-9011-2e4954acaf5e',
    name: 'should maintain consistent typography',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test font family consistency\n' +
        "    const textElements = page.locator('h1, h2, h3, p, button, input, textarea');\n" +
        '    for (let i = 0; i < Math.min(await textElements.count(), 10); i++) {\n' +
        '      const element = textElements.nth(i);\n' +
        '      const fontFamily = await element.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).fontFamily;\n' +
        '      });\n' +
        '\n' +
        '      // Should use Inter font family or fallback to system fonts\n' +
        '      (0, _test.expect)(fontFamily).toMatch(/Inter|system-ui|sans-serif/);\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent typography',
    scope: 'should maintain consistent typography',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 50,
    started_at: '2025-08-05T18:12:58.534Z',
    finished_at: '2025-08-05T18:12:58.584Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain consistent typography'
    },
    hooks: [ 'aaf7a8f0-830f-4565-a65d-6a0879babd3a' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:13:13.323Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:13:13.308Z',
      uuid: '14a96d8a-54bb-4605-9011-2e4954acaf5e',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '14a96d8a-54bb-4605-9011-2e4954acaf5e'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:13:13.309Z',
      uuid: '14a96d8a-54bb-4605-9011-2e4954acaf5e',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '14a96d8a-54bb-4605-9011-2e4954acaf5e'
    }
  ]
} to 26381:0
2025-08-05T18:13:13.515Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'bcdaf9ed-a36f-4ede-a7ba-057d973da285',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '15d1d919-1bf4-41c0-bdf3-56741c639cea',
      body: [Object],
      scope: 'should maintain layout consistency on different screen sizes',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      started_at: '2025-08-05T18:13:04.542Z',
      finished_at: '2025-08-05T18:13:13.020Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '15d1d919-1bf4-41c0-bdf3-56741c639cea',
      name: 'should maintain layout consistency on different screen sizes',
      body: [Object],
      identifier: 'should maintain layout consistency on different screen sizes',
      scope: 'should maintain layout consistency on different screen sizes',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 48,
      started_at: '2025-08-05T18:13:04.532Z',
      finished_at: '2025-08-05T18:13:04.580Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'aaf7a8f0-830f-4565-a65d-6a0879babd3a',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '14a96d8a-54bb-4605-9011-2e4954acaf5e',
      body: [Object],
      scope: 'should maintain consistent typography',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      started_at: '2025-08-05T18:12:58.554Z',
      finished_at: '2025-08-05T18:13:13.288Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '14a96d8a-54bb-4605-9011-2e4954acaf5e',
      name: 'should maintain consistent typography',
      body: [Object],
      identifier: 'should maintain consistent typography',
      scope: 'should maintain consistent typography',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 50,
      started_at: '2025-08-05T18:12:58.534Z',
      finished_at: '2025-08-05T18:12:58.584Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:13:13.517Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:13:16.252Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '05d81720-f731-4e3f-b427-d814e37d2ac3',
    name: 'should handle form elements consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test form input styling\n' +
        "    const inputs = page.locator('input, textarea, select');\n" +
        '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
        '      const input = inputs.nth(i);\n' +
        '      const styles = await input.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          border: computed.border,\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have consistent border and padding\n' +
        "      (0, _test.expect)(styles.border).not.toBe('none');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form elements consistently',
    scope: 'should handle form elements consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:13:16.240Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle form elements consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:13:16.255Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'bb4fd40b-3058-4ccd-936c-094014900378',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '05d81720-f731-4e3f-b427-d814e37d2ac3',
    body: { lang: 'node', code: null },
    scope: 'should handle form elements consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    started_at: '2025-08-05T18:13:16.251Z'
  }
} to 26381:0
2025-08-05T18:13:16.318Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:13:00.992Z',
      uuid: 'c787528c-05ea-4bd3-a8ba-293ad6b5e4e4',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'c787528c-05ea-4bd3-a8ba-293ad6b5e4e4'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:13:01.018Z',
      uuid: 'c787528c-05ea-4bd3-a8ba-293ad6b5e4e4',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'c787528c-05ea-4bd3-a8ba-293ad6b5e4e4'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:13:01.046Z',
      uuid: 'c787528c-05ea-4bd3-a8ba-293ad6b5e4e4',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'c787528c-05ea-4bd3-a8ba-293ad6b5e4e4'
    }
  ]
} to 26381:0
2025-08-05T18:13:16.322Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'c787528c-05ea-4bd3-a8ba-293ad6b5e4e4',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '6e2cbb7a-cd2b-47e1-bd54-4a53622f9e6f',
    body: { lang: 'node', code: null },
    scope: 'should have consistent button styling',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    started_at: '2025-08-05T18:13:00.990Z',
    finished_at: '2025-08-05T18:13:16.313Z'
  }
} to 26381:0
2025-08-05T18:13:16.351Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '6e2cbb7a-cd2b-47e1-bd54-4a53622f9e6f',
    name: 'should have consistent button styling',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    const buttons = page.locator('button');\n" +
        '    for (let i = 0; i < Math.min(await buttons.count(), 5); i++) {\n' +
        '      const button = buttons.nth(i);\n' +
        '\n' +
        '      // Check button has proper styling\n' +
        '      const styles = await button.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding,\n' +
        '          cursor: computed.cursor\n' +
        '        };\n' +
        '      });\n' +
        "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
        "      (0, _test.expect)(styles.borderRadius).not.toBe('0px');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should have consistent button styling',
    scope: 'should have consistent button styling',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 44,
    started_at: '2025-08-05T18:13:00.984Z',
    finished_at: '2025-08-05T18:13:01.028Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should have consistent button styling'
    },
    hooks: [ 'c787528c-05ea-4bd3-a8ba-293ad6b5e4e4' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:13:16.352Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:13:16.337Z',
      uuid: '6e2cbb7a-cd2b-47e1-bd54-4a53622f9e6f',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '6e2cbb7a-cd2b-47e1-bd54-4a53622f9e6f'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:13:16.337Z',
      uuid: '6e2cbb7a-cd2b-47e1-bd54-4a53622f9e6f',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '6e2cbb7a-cd2b-47e1-bd54-4a53622f9e6f'
    }
  ]
} to 26381:0
2025-08-05T18:13:16.551Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '0bd7d105-094e-4a98-b112-677c26daade4',
    name: 'should maintain consistent spacing and alignment',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test that elements have consistent spacing\n' +
        "    const containers = page.locator('div, section, article').filter({\n" +
        '      hasText: /./\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await containers.count(), 10); i++) {\n' +
        '      const container = containers.nth(i);\n' +
        '      const styles = await container.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          margin: computed.margin,\n' +
        '          padding: computed.padding,\n' +
        '          display: computed.display\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have consistent display properties\n' +
        "      (0, _test.expect)(['block', 'flex', 'grid', 'inline-block']).toContain(styles.display);\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent spacing and alignment',
    scope: 'should maintain consistent spacing and alignment',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:13:16.540Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain consistent spacing and alignment'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:13:16.557Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '15bd7fe7-9145-43ec-86b7-b57b0199215f',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '0bd7d105-094e-4a98-b112-677c26daade4',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent spacing and alignment',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    started_at: '2025-08-05T18:13:16.555Z'
  }
} to 26381:0
2025-08-05T18:13:17.515Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '05d81720-f731-4e3f-b427-d814e37d2ac3',
      name: 'should handle form elements consistently',
      body: [Object],
      identifier: 'should handle form elements consistently',
      scope: 'should handle form elements consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:13:16.240Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'bb4fd40b-3058-4ccd-936c-094014900378',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '05d81720-f731-4e3f-b427-d814e37d2ac3',
      body: [Object],
      scope: 'should handle form elements consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      started_at: '2025-08-05T18:13:16.251Z'
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'c787528c-05ea-4bd3-a8ba-293ad6b5e4e4',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '6e2cbb7a-cd2b-47e1-bd54-4a53622f9e6f',
      body: [Object],
      scope: 'should have consistent button styling',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      started_at: '2025-08-05T18:13:00.990Z',
      finished_at: '2025-08-05T18:13:16.313Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '6e2cbb7a-cd2b-47e1-bd54-4a53622f9e6f',
      name: 'should have consistent button styling',
      body: [Object],
      identifier: 'should have consistent button styling',
      scope: 'should have consistent button styling',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 44,
      started_at: '2025-08-05T18:13:00.984Z',
      finished_at: '2025-08-05T18:13:01.028Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '0bd7d105-094e-4a98-b112-677c26daade4',
      name: 'should maintain consistent spacing and alignment',
      body: [Object],
      identifier: 'should maintain consistent spacing and alignment',
      scope: 'should maintain consistent spacing and alignment',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:13:16.540Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '15bd7fe7-9145-43ec-86b7-b57b0199215f',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '0bd7d105-094e-4a98-b112-677c26daade4',
      body: [Object],
      scope: 'should maintain consistent spacing and alignment',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      started_at: '2025-08-05T18:13:16.555Z'
    }
  }
] to 26381:0
2025-08-05T18:13:17.517Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:13:20.179Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'a6edcd7a-22d1-45cc-85c2-3a7f6050d6f0',
    name: 'should handle dark mode consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test dark mode colors\n' +
        '    await page.evaluate(() => {\n' +
        '      // Simulate dark mode\n' +
        "      document.documentElement.style.colorScheme = 'dark';\n" +
        "      document.documentElement.classList.add('dark');\n" +
        '    });\n' +
        '    await page.waitForTimeout(100);\n' +
        '\n' +
        '    // Check that dark mode colors are applied\n' +
        '    const bodyColor = await page.evaluate(() => {\n' +
        '      return window.getComputedStyle(document.body).backgroundColor;\n' +
        '    });\n' +
        '\n' +
        '    // Should have dark background in dark mode\n' +
        '    (0, _test.expect)(bodyColor).toMatch(/rgb\\(10, 10, 10\\)|rgba\\(10, 10, 10/);\n' +
        '  }'
    },
    identifier: 'should handle dark mode consistently',
    scope: 'should handle dark mode consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:13:20.163Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle dark mode consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:13:20.189Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '35632626-b2f5-4dee-ae36-3fc028ce6712',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'a6edcd7a-22d1-45cc-85c2-3a7f6050d6f0',
    body: { lang: 'node', code: null },
    scope: 'should handle dark mode consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    started_at: '2025-08-05T18:13:20.183Z'
  }
} to 26381:0
2025-08-05T18:13:21.516Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'a6edcd7a-22d1-45cc-85c2-3a7f6050d6f0',
      name: 'should handle dark mode consistently',
      body: [Object],
      identifier: 'should handle dark mode consistently',
      scope: 'should handle dark mode consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:13:20.163Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '35632626-b2f5-4dee-ae36-3fc028ce6712',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'a6edcd7a-22d1-45cc-85c2-3a7f6050d6f0',
      body: [Object],
      scope: 'should handle dark mode consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      started_at: '2025-08-05T18:13:20.183Z'
    }
  }
] to 26381:0
2025-08-05T18:13:21.517Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:13:23.927Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:13:16.557Z',
      uuid: '15bd7fe7-9145-43ec-86b7-b57b0199215f',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '15bd7fe7-9145-43ec-86b7-b57b0199215f'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:13:16.585Z',
      uuid: '15bd7fe7-9145-43ec-86b7-b57b0199215f',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '15bd7fe7-9145-43ec-86b7-b57b0199215f'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:13:16.614Z',
      uuid: '15bd7fe7-9145-43ec-86b7-b57b0199215f',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '15bd7fe7-9145-43ec-86b7-b57b0199215f'
    }
  ]
} to 26381:0
2025-08-05T18:13:23.931Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '15bd7fe7-9145-43ec-86b7-b57b0199215f',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '0bd7d105-094e-4a98-b112-677c26daade4',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent spacing and alignment',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    started_at: '2025-08-05T18:13:16.555Z',
    finished_at: '2025-08-05T18:13:23.921Z'
  }
} to 26381:0
2025-08-05T18:13:23.969Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '0bd7d105-094e-4a98-b112-677c26daade4',
    name: 'should maintain consistent spacing and alignment',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test that elements have consistent spacing\n' +
        "    const containers = page.locator('div, section, article').filter({\n" +
        '      hasText: /./\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await containers.count(), 10); i++) {\n' +
        '      const container = containers.nth(i);\n' +
        '      const styles = await container.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          margin: computed.margin,\n' +
        '          padding: computed.padding,\n' +
        '          display: computed.display\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have consistent display properties\n' +
        "      (0, _test.expect)(['block', 'flex', 'grid', 'inline-block']).toContain(styles.display);\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent spacing and alignment',
    scope: 'should maintain consistent spacing and alignment',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 55,
    started_at: '2025-08-05T18:13:16.540Z',
    finished_at: '2025-08-05T18:13:16.595Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain consistent spacing and alignment'
    },
    hooks: [ '15bd7fe7-9145-43ec-86b7-b57b0199215f' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:13:23.970Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:13:23.952Z',
      uuid: '0bd7d105-094e-4a98-b112-677c26daade4',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '0bd7d105-094e-4a98-b112-677c26daade4'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:13:23.953Z',
      uuid: '0bd7d105-094e-4a98-b112-677c26daade4',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '0bd7d105-094e-4a98-b112-677c26daade4'
    }
  ]
} to 26381:0
2025-08-05T18:13:25.517Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '15bd7fe7-9145-43ec-86b7-b57b0199215f',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '0bd7d105-094e-4a98-b112-677c26daade4',
      body: [Object],
      scope: 'should maintain consistent spacing and alignment',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      started_at: '2025-08-05T18:13:16.555Z',
      finished_at: '2025-08-05T18:13:23.921Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '0bd7d105-094e-4a98-b112-677c26daade4',
      name: 'should maintain consistent spacing and alignment',
      body: [Object],
      identifier: 'should maintain consistent spacing and alignment',
      scope: 'should maintain consistent spacing and alignment',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 55,
      started_at: '2025-08-05T18:13:16.540Z',
      finished_at: '2025-08-05T18:13:16.595Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:13:25.518Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:13:27.271Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '4ccba81f-fd80-40fe-b7e0-b87c315be0aa',
    name: 'should maintain accessibility standards',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test color contrast\n' +
        "    const textElements = page.locator('h1, h2, h3, p, span, div').filter({\n" +
        '      hasText: /./\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await textElements.count(), 5); i++) {\n' +
        '      const element = textElements.nth(i);\n' +
        '      const contrast = await element.evaluate(el => {\n' +
        '        const style = window.getComputedStyle(el);\n' +
        '        const backgroundColor = style.backgroundColor;\n' +
        '        const color = style.color;\n' +
        '\n' +
        "        // Simple contrast check - in a real test, you'd use a proper contrast calculation\n" +
        '        return {\n' +
        '          backgroundColor,\n' +
        '          color\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have defined colors\n' +
        "      (0, _test.expect)(contrast.backgroundColor).not.toBe('rgba(0, 0, 0, 0)');\n" +
        "      (0, _test.expect)(contrast.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain accessibility standards',
    scope: 'should maintain accessibility standards',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:13:27.201Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain accessibility standards'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:13:27.273Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'a6ba3f62-cfc1-499e-8d37-6bae5a706913',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '4ccba81f-fd80-40fe-b7e0-b87c315be0aa',
    body: { lang: 'node', code: null },
    scope: 'should maintain accessibility standards',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    started_at: '2025-08-05T18:13:27.214Z'
  }
} to 26381:0
2025-08-05T18:13:27.518Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '4ccba81f-fd80-40fe-b7e0-b87c315be0aa',
      name: 'should maintain accessibility standards',
      body: [Object],
      identifier: 'should maintain accessibility standards',
      scope: 'should maintain accessibility standards',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:13:27.201Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'a6ba3f62-cfc1-499e-8d37-6bae5a706913',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '4ccba81f-fd80-40fe-b7e0-b87c315be0aa',
      body: [Object],
      scope: 'should maintain accessibility standards',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      started_at: '2025-08-05T18:13:27.214Z'
    }
  }
] to 26381:0
2025-08-05T18:13:27.519Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:13:35.548Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:13:27.217Z',
      uuid: 'a6ba3f62-cfc1-499e-8d37-6bae5a706913',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'a6ba3f62-cfc1-499e-8d37-6bae5a706913'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:13:27.241Z',
      uuid: 'a6ba3f62-cfc1-499e-8d37-6bae5a706913',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'a6ba3f62-cfc1-499e-8d37-6bae5a706913'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:13:27.273Z',
      uuid: 'a6ba3f62-cfc1-499e-8d37-6bae5a706913',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'a6ba3f62-cfc1-499e-8d37-6bae5a706913'
    }
  ]
} to 26381:0
2025-08-05T18:13:35.551Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'a6ba3f62-cfc1-499e-8d37-6bae5a706913',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '4ccba81f-fd80-40fe-b7e0-b87c315be0aa',
    body: { lang: 'node', code: null },
    scope: 'should maintain accessibility standards',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    started_at: '2025-08-05T18:13:27.214Z',
    finished_at: '2025-08-05T18:13:35.542Z'
  }
} to 26381:0
2025-08-05T18:13:35.577Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '4ccba81f-fd80-40fe-b7e0-b87c315be0aa',
    name: 'should maintain accessibility standards',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test color contrast\n' +
        "    const textElements = page.locator('h1, h2, h3, p, span, div').filter({\n" +
        '      hasText: /./\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await textElements.count(), 5); i++) {\n' +
        '      const element = textElements.nth(i);\n' +
        '      const contrast = await element.evaluate(el => {\n' +
        '        const style = window.getComputedStyle(el);\n' +
        '        const backgroundColor = style.backgroundColor;\n' +
        '        const color = style.color;\n' +
        '\n' +
        "        // Simple contrast check - in a real test, you'd use a proper contrast calculation\n" +
        '        return {\n' +
        '          backgroundColor,\n' +
        '          color\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have defined colors\n' +
        "      (0, _test.expect)(contrast.backgroundColor).not.toBe('rgba(0, 0, 0, 0)');\n" +
        "      (0, _test.expect)(contrast.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain accessibility standards',
    scope: 'should maintain accessibility standards',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 43,
    started_at: '2025-08-05T18:13:27.201Z',
    finished_at: '2025-08-05T18:13:27.244Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain accessibility standards'
    },
    hooks: [ 'a6ba3f62-cfc1-499e-8d37-6bae5a706913' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:13:35.578Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:13:35.564Z',
      uuid: '4ccba81f-fd80-40fe-b7e0-b87c315be0aa',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '4ccba81f-fd80-40fe-b7e0-b87c315be0aa'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:13:35.565Z',
      uuid: '4ccba81f-fd80-40fe-b7e0-b87c315be0aa',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '4ccba81f-fd80-40fe-b7e0-b87c315be0aa'
    }
  ]
} to 26381:0
2025-08-05T18:13:37.187Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:13:20.186Z',
      uuid: '35632626-b2f5-4dee-ae36-3fc028ce6712',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '35632626-b2f5-4dee-ae36-3fc028ce6712'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:13:20.223Z',
      uuid: '35632626-b2f5-4dee-ae36-3fc028ce6712',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '35632626-b2f5-4dee-ae36-3fc028ce6712'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:13:20.265Z',
      uuid: '35632626-b2f5-4dee-ae36-3fc028ce6712',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '35632626-b2f5-4dee-ae36-3fc028ce6712'
    }
  ]
} to 26381:0
2025-08-05T18:13:37.196Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '35632626-b2f5-4dee-ae36-3fc028ce6712',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'a6edcd7a-22d1-45cc-85c2-3a7f6050d6f0',
    body: { lang: 'node', code: null },
    scope: 'should handle dark mode consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    started_at: '2025-08-05T18:13:20.183Z',
    finished_at: '2025-08-05T18:13:37.180Z'
  }
} to 26381:0
2025-08-05T18:13:37.222Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'a6edcd7a-22d1-45cc-85c2-3a7f6050d6f0',
    name: 'should handle dark mode consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test dark mode colors\n' +
        '    await page.evaluate(() => {\n' +
        '      // Simulate dark mode\n' +
        "      document.documentElement.style.colorScheme = 'dark';\n" +
        "      document.documentElement.classList.add('dark');\n" +
        '    });\n' +
        '    await page.waitForTimeout(100);\n' +
        '\n' +
        '    // Check that dark mode colors are applied\n' +
        '    const bodyColor = await page.evaluate(() => {\n' +
        '      return window.getComputedStyle(document.body).backgroundColor;\n' +
        '    });\n' +
        '\n' +
        '    // Should have dark background in dark mode\n' +
        '    (0, _test.expect)(bodyColor).toMatch(/rgb\\(10, 10, 10\\)|rgba\\(10, 10, 10/);\n' +
        '  }'
    },
    identifier: 'should handle dark mode consistently',
    scope: 'should handle dark mode consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 59,
    started_at: '2025-08-05T18:13:20.163Z',
    finished_at: '2025-08-05T18:13:20.222Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle dark mode consistently'
    },
    hooks: [ '35632626-b2f5-4dee-ae36-3fc028ce6712' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:13:37.223Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:13:37.205Z',
      uuid: 'a6edcd7a-22d1-45cc-85c2-3a7f6050d6f0',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'a6edcd7a-22d1-45cc-85c2-3a7f6050d6f0'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:13:37.206Z',
      uuid: 'a6edcd7a-22d1-45cc-85c2-3a7f6050d6f0',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'a6edcd7a-22d1-45cc-85c2-3a7f6050d6f0'
    }
  ]
} to 26381:0
2025-08-05T18:13:37.521Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'a6ba3f62-cfc1-499e-8d37-6bae5a706913',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '4ccba81f-fd80-40fe-b7e0-b87c315be0aa',
      body: [Object],
      scope: 'should maintain accessibility standards',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      started_at: '2025-08-05T18:13:27.214Z',
      finished_at: '2025-08-05T18:13:35.542Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '4ccba81f-fd80-40fe-b7e0-b87c315be0aa',
      name: 'should maintain accessibility standards',
      body: [Object],
      identifier: 'should maintain accessibility standards',
      scope: 'should maintain accessibility standards',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 43,
      started_at: '2025-08-05T18:13:27.201Z',
      finished_at: '2025-08-05T18:13:27.244Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '35632626-b2f5-4dee-ae36-3fc028ce6712',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'a6edcd7a-22d1-45cc-85c2-3a7f6050d6f0',
      body: [Object],
      scope: 'should handle dark mode consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      started_at: '2025-08-05T18:13:20.183Z',
      finished_at: '2025-08-05T18:13:37.180Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'a6edcd7a-22d1-45cc-85c2-3a7f6050d6f0',
      name: 'should handle dark mode consistently',
      body: [Object],
      identifier: 'should handle dark mode consistently',
      scope: 'should handle dark mode consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 59,
      started_at: '2025-08-05T18:13:20.163Z',
      finished_at: '2025-08-05T18:13:20.222Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:13:37.524Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:13:38.979Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '2c898170-0c97-4eac-9295-6dc4338ca658',
    name: 'should handle images and icons consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    const images = page.locator('img, svg');\n" +
        '    for (let i = 0; i < Math.min(await images.count(), 5); i++) {\n' +
        '      const image = images.nth(i);\n' +
        '\n' +
        '      // Check that images are properly loaded and visible\n' +
        '      const isVisible = await image.isVisible();\n' +
        '      (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        '      // Check that images have proper alt text or aria labels\n' +
        "      const altText = await image.getAttribute('alt');\n" +
        "      const ariaLabel = await image.getAttribute('aria-label');\n" +
        '      if (!altText && !ariaLabel) {\n' +
        '        // For decorative images, this might be acceptable\n' +
        "        const role = await image.getAttribute('role');\n" +
        "        (0, _test.expect)(role === 'presentation' || role === 'img').toBe(true);\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle images and icons consistently',
    scope: 'should handle images and icons consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:13:38.955Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle images and icons consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:13:38.985Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'ecad6d29-714a-4b21-99d5-84accae0b850',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '2c898170-0c97-4eac-9295-6dc4338ca658',
    body: { lang: 'node', code: null },
    scope: 'should handle images and icons consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    started_at: '2025-08-05T18:13:38.981Z'
  }
} to 26381:0
2025-08-05T18:13:39.522Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '2c898170-0c97-4eac-9295-6dc4338ca658',
      name: 'should handle images and icons consistently',
      body: [Object],
      identifier: 'should handle images and icons consistently',
      scope: 'should handle images and icons consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:13:38.955Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'ecad6d29-714a-4b21-99d5-84accae0b850',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '2c898170-0c97-4eac-9295-6dc4338ca658',
      body: [Object],
      scope: 'should handle images and icons consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      started_at: '2025-08-05T18:13:38.981Z'
    }
  }
] to 26381:0
2025-08-05T18:13:39.524Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:13:48.446Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:13:38.984Z',
      uuid: 'ecad6d29-714a-4b21-99d5-84accae0b850',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'ecad6d29-714a-4b21-99d5-84accae0b850'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:13:39.013Z',
      uuid: 'ecad6d29-714a-4b21-99d5-84accae0b850',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'ecad6d29-714a-4b21-99d5-84accae0b850'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:13:39.042Z',
      uuid: 'ecad6d29-714a-4b21-99d5-84accae0b850',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'ecad6d29-714a-4b21-99d5-84accae0b850'
    }
  ]
} to 26381:0
2025-08-05T18:13:48.449Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'ecad6d29-714a-4b21-99d5-84accae0b850',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '2c898170-0c97-4eac-9295-6dc4338ca658',
    body: { lang: 'node', code: null },
    scope: 'should handle images and icons consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    started_at: '2025-08-05T18:13:38.981Z',
    finished_at: '2025-08-05T18:13:48.443Z'
  }
} to 26381:0
2025-08-05T18:13:48.474Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '2c898170-0c97-4eac-9295-6dc4338ca658',
    name: 'should handle images and icons consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    const images = page.locator('img, svg');\n" +
        '    for (let i = 0; i < Math.min(await images.count(), 5); i++) {\n' +
        '      const image = images.nth(i);\n' +
        '\n' +
        '      // Check that images are properly loaded and visible\n' +
        '      const isVisible = await image.isVisible();\n' +
        '      (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        '      // Check that images have proper alt text or aria labels\n' +
        "      const altText = await image.getAttribute('alt');\n" +
        "      const ariaLabel = await image.getAttribute('aria-label');\n" +
        '      if (!altText && !ariaLabel) {\n' +
        '        // For decorative images, this might be acceptable\n' +
        "        const role = await image.getAttribute('role');\n" +
        "        (0, _test.expect)(role === 'presentation' || role === 'img').toBe(true);\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle images and icons consistently',
    scope: 'should handle images and icons consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 42,
    started_at: '2025-08-05T18:13:38.955Z',
    finished_at: '2025-08-05T18:13:38.997Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle images and icons consistently'
    },
    hooks: [ 'ecad6d29-714a-4b21-99d5-84accae0b850' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:13:48.475Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:13:48.460Z',
      uuid: '2c898170-0c97-4eac-9295-6dc4338ca658',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '2c898170-0c97-4eac-9295-6dc4338ca658'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:13:48.461Z',
      uuid: '2c898170-0c97-4eac-9295-6dc4338ca658',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '2c898170-0c97-4eac-9295-6dc4338ca658'
    }
  ]
} to 26381:0
2025-08-05T18:13:49.528Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'ecad6d29-714a-4b21-99d5-84accae0b850',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '2c898170-0c97-4eac-9295-6dc4338ca658',
      body: [Object],
      scope: 'should handle images and icons consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      started_at: '2025-08-05T18:13:38.981Z',
      finished_at: '2025-08-05T18:13:48.443Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '2c898170-0c97-4eac-9295-6dc4338ca658',
      name: 'should handle images and icons consistently',
      body: [Object],
      identifier: 'should handle images and icons consistently',
      scope: 'should handle images and icons consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 42,
      started_at: '2025-08-05T18:13:38.955Z',
      finished_at: '2025-08-05T18:13:38.997Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:13:49.529Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:13:51.520Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:13:16.255Z',
      uuid: 'bb4fd40b-3058-4ccd-936c-094014900378',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'bb4fd40b-3058-4ccd-936c-094014900378'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:13:16.280Z',
      uuid: 'bb4fd40b-3058-4ccd-936c-094014900378',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'bb4fd40b-3058-4ccd-936c-094014900378'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:13:16.313Z',
      uuid: 'bb4fd40b-3058-4ccd-936c-094014900378',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'bb4fd40b-3058-4ccd-936c-094014900378'
    }
  ]
} to 26381:0
2025-08-05T18:13:51.525Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'bb4fd40b-3058-4ccd-936c-094014900378',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '05d81720-f731-4e3f-b427-d814e37d2ac3',
    body: { lang: 'node', code: null },
    scope: 'should handle form elements consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    started_at: '2025-08-05T18:13:16.251Z',
    finished_at: '2025-08-05T18:13:51.516Z'
  }
} to 26381:0
2025-08-05T18:13:51.529Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'bb4fd40b-3058-4ccd-936c-094014900378',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '05d81720-f731-4e3f-b427-d814e37d2ac3',
      body: [Object],
      scope: 'should handle form elements consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      started_at: '2025-08-05T18:13:16.251Z',
      finished_at: '2025-08-05T18:13:51.516Z'
    }
  }
] to 26381:0
2025-08-05T18:13:51.530Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:13:51.559Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '05d81720-f731-4e3f-b427-d814e37d2ac3',
    name: 'should handle form elements consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test form input styling\n' +
        "    const inputs = page.locator('input, textarea, select');\n" +
        '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
        '      const input = inputs.nth(i);\n' +
        '      const styles = await input.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          border: computed.border,\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have consistent border and padding\n' +
        "      (0, _test.expect)(styles.border).not.toBe('none');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form elements consistently',
    scope: 'should handle form elements consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 46,
    started_at: '2025-08-05T18:13:16.240Z',
    finished_at: '2025-08-05T18:13:16.286Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle form elements consistently'
    },
    hooks: [ 'bb4fd40b-3058-4ccd-936c-094014900378' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 26381:0
2025-08-05T18:13:51.560Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:13:51.547Z',
      uuid: '05d81720-f731-4e3f-b427-d814e37d2ac3',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '05d81720-f731-4e3f-b427-d814e37d2ac3'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:13:51.547Z',
      uuid: '05d81720-f731-4e3f-b427-d814e37d2ac3',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '05d81720-f731-4e3f-b427-d814e37d2ac3'
    }
  ]
} to 26381:0
2025-08-05T18:13:53.529Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '05d81720-f731-4e3f-b427-d814e37d2ac3',
      name: 'should handle form elements consistently',
      body: [Object],
      identifier: 'should handle form elements consistently',
      scope: 'should handle form elements consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 46,
      started_at: '2025-08-05T18:13:16.240Z',
      finished_at: '2025-08-05T18:13:16.286Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 26381:0
2025-08-05T18:13:53.530Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:16:19.588Z CLI info [main]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  Received graceful signal termination, performing cleanup
2025-08-05T18:16:20.236Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:16:20.251Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:16:20.260Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:16:20.335Z CLI error [testhub:module]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [collectBuildData] Exception in collecting build data for build UUID 0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn: {"message":"Build data collection started"}
2025-08-05T18:16:20.336Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making PUT request to https://collector-observability.browserstack.com
2025-08-05T18:16:20.340Z CLI error [testhub:module]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [collectBuildData] Exception in collecting build data for build UUID 0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn: {"message":"Build data collection started"}
2025-08-05T18:16:20.340Z CLI info  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  [PRODUCTION] Making PUT request to https://collector-observability.browserstack.com
2025-08-05T18:16:20.422Z CLI info [testhub:module]  [coreylipsey_CicmlG]  [0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn]  [07f841b0-0068-4a36-b3d4-3613d447094a]  stopBuild: 0ru0rsem86jc1sw1zlbhyotqcoapeimzqsk3nfjn request={"finished_at":"2025-08-05T18:16:19.592Z","finished_metadata":[],"custom_metadata":null} response={"data":""}
2025-08-05T18:21:34.130Z CLI info     Config : {"userName":"coreylipsey_CicmlG","accessKey":"qRbyY1vhLqJDjNwJqN7E","platforms":[{"os":"Windows","osVersion":11,"browserName":"chrome","browserVersion":"latest"},{"os":"OS X","osVersion":"Ventura","browserName":"playwright-webkit","browserVersion":"latest"},{"deviceName":"Samsung Galaxy S23 Ultra","browserName":"chrome","osVersion":13}]}
2025-08-05T18:21:34.168Z CLI info [testhub:module]  [coreylipsey_CicmlG]   [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Starting testhub from 28110:0
2025-08-05T18:21:34.169Z CLI info [testhub:module]  [coreylipsey_CicmlG]   [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  startBuild: payload=

{"started_at":"2025-08-05T18:21:34.169Z","host_info":{"hostname":"Coreys-MBP","platform":"darwin","type":"Darwin","version":"Darwin Kernel Version 23.6.0: Mon Jul 29 21:13:00 PDT 2024; root:xnu-10063.141.2~1/RELEASE_X86_64","arch":"x64"},"ci_info":{"build_number":null},"version_control":{"name":"git","sha":"969b256d6d4e2c4c6fe0c1ecfb8c00ae004a8510","short_sha":"969b256d6d","branch":"main","tag":null,"committer":"Corey Lipsey <your.email@example.com>","committer_date":"2025-08-05T16:32:35.000Z","author":"Corey Lipsey <your.email@example.com>","author_date":"2025-08-05T16:32:35.000Z","commit_message":"fix: Resolve ESLint errors and TypeScript issues - Fix all TypeScript 'any' type errors - Remove unused imports and variables - Improve type safety across the codebase - All linting now passes successfully","root":"/Users/coreylipsey/gutcheck-score-mvp","common_git_dir":"/Users/coreylipsey/gutcheck-score-mvp/.git","worktree_git_dir":"/Users/coreylipsey/gutcheck-score-mvp/.git","last_tag":null,"commits_since_last_tag":0,"remotes":[{"name":"origin","url":"https://github.com/coreylipsey/gutcheck-score-mvp.git"}]},"project_name":"","build_run_identifier":null,"description":"","tags":[],"failed_tests_rerun":false,"accessibility":{"settings":{}},"framework_details":{"frameworkName":"Playwright","frameworkVersion":"1.54.2","sdkVersion":"1.40.6","cliVersion":"1.6.6","language":"javascript","testFramework":{"name":"Playwright","version":"1.54.2"}},"product_map":{"observability":true,"accessibility":null,"percy":false,"automate":true,"app_automate":false},"browserstackAutomation":true,"test_orchestration":{}}
2025-08-05T18:21:34.170Z CLI info  [coreylipsey_CicmlG]   [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:21:34.680Z CLI info [testhub:module]  [coreylipsey_CicmlG]   [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  startBuild: response=cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds
2025-08-05T18:21:34.684Z CLI info  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [PRODUCTION] Making POST request to https://api.browserstack.com
2025-08-05T18:21:39.389Z CLI info  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [PRODUCTION] Making GET request to https://hub.browserstack.com
2025-08-05T18:21:39.508Z CLI info  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [PRODUCTION] Making GET request to https://hub-use.browserstack.com
2025-08-05T18:21:39.509Z CLI info  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [PRODUCTION] Making GET request to https://hub-usw.browserstack.com
2025-08-05T18:21:39.509Z CLI info  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [PRODUCTION] Making GET request to https://hub-euw.browserstack.com
2025-08-05T18:21:44.489Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '8bd953b8-0c17-421d-b086-93493128e057',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:21:44.388Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 28110:0
2025-08-05T18:21:44.491Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b3c8c819-f8ab-4b4c-ba86-df8a1513342c',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:21:44.388Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 28110:0
2025-08-05T18:21:44.503Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'acf6ae7d-b983-4e31-a1df-7b49450c8907',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:21:44.427Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 28110:0
2025-08-05T18:21:44.686Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '8bd953b8-0c17-421d-b086-93493128e057',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:21:44.388Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b3c8c819-f8ab-4b4c-ba86-df8a1513342c',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:21:44.388Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'acf6ae7d-b983-4e31-a1df-7b49450c8907',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:21:44.427Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 28110:0
2025-08-05T18:21:44.688Z CLI info  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:21:53.410Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'acf6ae7d-b983-4e31-a1df-7b49450c8907',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 58,
    started_at: '2025-08-05T18:21:44.427Z',
    finished_at: '2025-08-05T18:21:44.485Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 28110:0
2025-08-05T18:21:53.419Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:21:53.346Z',
      uuid: 'acf6ae7d-b983-4e31-a1df-7b49450c8907',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'acf6ae7d-b983-4e31-a1df-7b49450c8907'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:21:53.347Z',
      uuid: 'acf6ae7d-b983-4e31-a1df-7b49450c8907',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'acf6ae7d-b983-4e31-a1df-7b49450c8907'
    }
  ]
} to 28110:0
2025-08-05T18:21:53.987Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '8bd953b8-0c17-421d-b086-93493128e057',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 39,
    started_at: '2025-08-05T18:21:44.388Z',
    finished_at: '2025-08-05T18:21:44.427Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 28110:0
2025-08-05T18:21:53.988Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:21:53.968Z',
      uuid: '8bd953b8-0c17-421d-b086-93493128e057',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '8bd953b8-0c17-421d-b086-93493128e057'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:21:53.969Z',
      uuid: '8bd953b8-0c17-421d-b086-93493128e057',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '8bd953b8-0c17-421d-b086-93493128e057'
    }
  ]
} to 28110:0
2025-08-05T18:21:54.187Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b3c8c819-f8ab-4b4c-ba86-df8a1513342c',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 38,
    started_at: '2025-08-05T18:21:44.388Z',
    finished_at: '2025-08-05T18:21:44.426Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 28110:0
2025-08-05T18:21:54.188Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:21:54.119Z',
      uuid: 'b3c8c819-f8ab-4b4c-ba86-df8a1513342c',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b3c8c819-f8ab-4b4c-ba86-df8a1513342c'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:21:54.120Z',
      uuid: 'b3c8c819-f8ab-4b4c-ba86-df8a1513342c',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b3c8c819-f8ab-4b4c-ba86-df8a1513342c'
    }
  ]
} to 28110:0
2025-08-05T18:21:54.688Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'acf6ae7d-b983-4e31-a1df-7b49450c8907',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 58,
      started_at: '2025-08-05T18:21:44.427Z',
      finished_at: '2025-08-05T18:21:44.485Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '8bd953b8-0c17-421d-b086-93493128e057',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 39,
      started_at: '2025-08-05T18:21:44.388Z',
      finished_at: '2025-08-05T18:21:44.427Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b3c8c819-f8ab-4b4c-ba86-df8a1513342c',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 38,
      started_at: '2025-08-05T18:21:44.388Z',
      finished_at: '2025-08-05T18:21:44.426Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 28110:0
2025-08-05T18:21:54.690Z CLI info  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:21:58.986Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '22d4648d-063d-48d4-b689-ee305dece2cf',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:21:58.960Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 28110:0
2025-08-05T18:21:58.988Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'da6321e6-38bb-4d60-9acf-e5a2b72f9782',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:21:58.966Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 28110:0
2025-08-05T18:21:59.033Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '8ca9824a-997e-41bf-a6ee-880026fc22d2',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:21:59.017Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 28110:0
2025-08-05T18:22:00.689Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '22d4648d-063d-48d4-b689-ee305dece2cf',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:21:58.960Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'da6321e6-38bb-4d60-9acf-e5a2b72f9782',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:21:58.966Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '8ca9824a-997e-41bf-a6ee-880026fc22d2',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:21:59.017Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 28110:0
2025-08-05T18:22:00.691Z CLI info  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:22:03.057Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '8ca9824a-997e-41bf-a6ee-880026fc22d2',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 71,
    started_at: '2025-08-05T18:21:59.017Z',
    finished_at: '2025-08-05T18:21:59.088Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 28110:0
2025-08-05T18:22:03.058Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:22:03.019Z',
      uuid: '8ca9824a-997e-41bf-a6ee-880026fc22d2',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '8ca9824a-997e-41bf-a6ee-880026fc22d2'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:22:03.022Z',
      uuid: '8ca9824a-997e-41bf-a6ee-880026fc22d2',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '8ca9824a-997e-41bf-a6ee-880026fc22d2'
    }
  ]
} to 28110:0
2025-08-05T18:22:03.167Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'da6321e6-38bb-4d60-9acf-e5a2b72f9782',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 76,
    started_at: '2025-08-05T18:21:58.966Z',
    finished_at: '2025-08-05T18:21:59.042Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 28110:0
2025-08-05T18:22:03.168Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:22:03.140Z',
      uuid: 'da6321e6-38bb-4d60-9acf-e5a2b72f9782',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'da6321e6-38bb-4d60-9acf-e5a2b72f9782'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:22:03.141Z',
      uuid: 'da6321e6-38bb-4d60-9acf-e5a2b72f9782',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'da6321e6-38bb-4d60-9acf-e5a2b72f9782'
    }
  ]
} to 28110:0
2025-08-05T18:22:03.429Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '22d4648d-063d-48d4-b689-ee305dece2cf',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 49,
    started_at: '2025-08-05T18:21:58.960Z',
    finished_at: '2025-08-05T18:21:59.009Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 28110:0
2025-08-05T18:22:03.434Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:22:03.405Z',
      uuid: '22d4648d-063d-48d4-b689-ee305dece2cf',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '22d4648d-063d-48d4-b689-ee305dece2cf'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:22:03.406Z',
      uuid: '22d4648d-063d-48d4-b689-ee305dece2cf',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '22d4648d-063d-48d4-b689-ee305dece2cf'
    }
  ]
} to 28110:0
2025-08-05T18:22:04.691Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '8ca9824a-997e-41bf-a6ee-880026fc22d2',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 71,
      started_at: '2025-08-05T18:21:59.017Z',
      finished_at: '2025-08-05T18:21:59.088Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'da6321e6-38bb-4d60-9acf-e5a2b72f9782',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 76,
      started_at: '2025-08-05T18:21:58.966Z',
      finished_at: '2025-08-05T18:21:59.042Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '22d4648d-063d-48d4-b689-ee305dece2cf',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 49,
      started_at: '2025-08-05T18:21:58.960Z',
      finished_at: '2025-08-05T18:21:59.009Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 28110:0
2025-08-05T18:22:04.693Z CLI info  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:22:06.962Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '9451a883-96a9-4ec4-a1f6-1992f3e3c47c',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:22:06.919Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 28110:0
2025-08-05T18:22:06.974Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '17e67236-e450-417e-b821-564e1e774239',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:22:06.931Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 28110:0
2025-08-05T18:22:07.209Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'faf07567-dcc1-4da2-a2a3-d116bab66cbf',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:22:07.192Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 28110:0
2025-08-05T18:22:08.694Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '9451a883-96a9-4ec4-a1f6-1992f3e3c47c',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:22:06.919Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '17e67236-e450-417e-b821-564e1e774239',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:22:06.931Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'faf07567-dcc1-4da2-a2a3-d116bab66cbf',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:22:07.192Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 28110:0
2025-08-05T18:22:08.695Z CLI info  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:22:14.712Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '17e67236-e450-417e-b821-564e1e774239',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 52,
    started_at: '2025-08-05T18:22:06.931Z',
    finished_at: '2025-08-05T18:22:06.983Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 28110:0
2025-08-05T18:22:14.712Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:22:14.691Z',
      uuid: '17e67236-e450-417e-b821-564e1e774239',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '17e67236-e450-417e-b821-564e1e774239'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:22:14.691Z',
      uuid: '17e67236-e450-417e-b821-564e1e774239',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '17e67236-e450-417e-b821-564e1e774239'
    }
  ]
} to 28110:0
2025-08-05T18:22:16.695Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '17e67236-e450-417e-b821-564e1e774239',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 52,
      started_at: '2025-08-05T18:22:06.931Z',
      finished_at: '2025-08-05T18:22:06.983Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 28110:0
2025-08-05T18:22:16.698Z CLI info  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:22:22.746Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '9451a883-96a9-4ec4-a1f6-1992f3e3c47c',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 51,
    started_at: '2025-08-05T18:22:06.919Z',
    finished_at: '2025-08-05T18:22:06.970Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 28110:0
2025-08-05T18:22:22.757Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:22:22.723Z',
      uuid: '9451a883-96a9-4ec4-a1f6-1992f3e3c47c',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '9451a883-96a9-4ec4-a1f6-1992f3e3c47c'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:22:22.724Z',
      uuid: '9451a883-96a9-4ec4-a1f6-1992f3e3c47c',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '9451a883-96a9-4ec4-a1f6-1992f3e3c47c'
    }
  ]
} to 28110:0
2025-08-05T18:22:24.701Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '9451a883-96a9-4ec4-a1f6-1992f3e3c47c',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 51,
      started_at: '2025-08-05T18:22:06.919Z',
      finished_at: '2025-08-05T18:22:06.970Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 28110:0
2025-08-05T18:22:24.703Z CLI info  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:22:26.355Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'faf07567-dcc1-4da2-a2a3-d116bab66cbf',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 43,
    started_at: '2025-08-05T18:22:07.192Z',
    finished_at: '2025-08-05T18:22:07.235Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 28110:0
2025-08-05T18:22:26.358Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:22:26.325Z',
      uuid: 'faf07567-dcc1-4da2-a2a3-d116bab66cbf',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'faf07567-dcc1-4da2-a2a3-d116bab66cbf'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:22:26.326Z',
      uuid: 'faf07567-dcc1-4da2-a2a3-d116bab66cbf',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'faf07567-dcc1-4da2-a2a3-d116bab66cbf'
    }
  ]
} to 28110:0
2025-08-05T18:22:26.703Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'faf07567-dcc1-4da2-a2a3-d116bab66cbf',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 43,
      started_at: '2025-08-05T18:22:07.192Z',
      finished_at: '2025-08-05T18:22:07.235Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 28110:0
2025-08-05T18:22:26.704Z CLI info  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:23:05.956Z CLI info [main]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Received graceful signal termination, performing cleanup
2025-08-05T18:23:06.972Z CLI info  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:23:06.984Z CLI info  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:23:07.000Z CLI info  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:23:07.129Z CLI error [testhub:module]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [collectBuildData] Exception in collecting build data for build UUID cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds: {"message":"Build data collection started"}
2025-08-05T18:23:07.129Z CLI info  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [PRODUCTION] Making PUT request to https://collector-observability.browserstack.com
2025-08-05T18:23:07.220Z CLI error [testhub:module]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [collectBuildData] Exception in collecting build data for build UUID cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds: {"message":"Build data collection started"}
2025-08-05T18:23:07.221Z CLI info  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [PRODUCTION] Making PUT request to https://collector-observability.browserstack.com
2025-08-05T18:23:07.229Z CLI error [testhub:module]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [collectBuildData] Exception in collecting build data for build UUID cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds: {"message":"Build data collection started"}
2025-08-05T18:23:07.229Z CLI info  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [PRODUCTION] Making PUT request to https://collector-observability.browserstack.com
2025-08-05T18:23:07.293Z CLI info [testhub:module]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  stopBuild: cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds request={"finished_at":"2025-08-05T18:23:06.200Z","finished_metadata":[],"custom_metadata":{}} response={"data":""}
2025-08-05T18:23:07.296Z CLI info  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [PRODUCTION] Making POST request to https://api.browserstack.com
2025-08-05T18:23:07.299Z CLI info [observability:module]  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  Visit https://observability.browserstack.com/builds/cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds to view build report, insights, and many more debugging information all at one place!
2025-08-05T18:23:07.306Z CLI info  [coreylipsey_CicmlG]  [cvlmig7kykxqdfmxblcvertfmjrq2lmfxemh2tds]  [ca1de21e-4a35-425f-968c-14cdb7fcb2df]  [PRODUCTION] Making GET request to https://api.browserstack.com
2025-08-05T18:24:34.196Z CLI info     Config : {"userName":"coreylipsey_CicmlG","accessKey":"qRbyY1vhLqJDjNwJqN7E","platforms":[{"os":"Windows","osVersion":11,"browserName":"chrome","browserVersion":"latest"},{"os":"OS X","osVersion":"Ventura","browserName":"playwright-webkit","browserVersion":"latest"},{"deviceName":"Samsung Galaxy S23 Ultra","browserName":"chrome","osVersion":13}]}
2025-08-05T18:24:34.232Z CLI info [testhub:module]  [coreylipsey_CicmlG]   [e6d54d86-a008-4d24-b751-eca899209f36]  Starting testhub from 30331:0
2025-08-05T18:24:34.233Z CLI info [testhub:module]  [coreylipsey_CicmlG]   [e6d54d86-a008-4d24-b751-eca899209f36]  startBuild: payload=

{"started_at":"2025-08-05T18:24:34.233Z","host_info":{"hostname":"Coreys-MBP","platform":"darwin","type":"Darwin","version":"Darwin Kernel Version 23.6.0: Mon Jul 29 21:13:00 PDT 2024; root:xnu-10063.141.2~1/RELEASE_X86_64","arch":"x64"},"ci_info":{"build_number":null},"version_control":{"name":"git","sha":"969b256d6d4e2c4c6fe0c1ecfb8c00ae004a8510","short_sha":"969b256d6d","branch":"main","tag":null,"committer":"Corey Lipsey <your.email@example.com>","committer_date":"2025-08-05T16:32:35.000Z","author":"Corey Lipsey <your.email@example.com>","author_date":"2025-08-05T16:32:35.000Z","commit_message":"fix: Resolve ESLint errors and TypeScript issues - Fix all TypeScript 'any' type errors - Remove unused imports and variables - Improve type safety across the codebase - All linting now passes successfully","root":"/Users/coreylipsey/gutcheck-score-mvp","common_git_dir":"/Users/coreylipsey/gutcheck-score-mvp/.git","worktree_git_dir":"/Users/coreylipsey/gutcheck-score-mvp/.git","last_tag":null,"commits_since_last_tag":0,"remotes":[{"name":"origin","url":"https://github.com/coreylipsey/gutcheck-score-mvp.git"}]},"project_name":"","build_run_identifier":null,"description":"","tags":[],"failed_tests_rerun":false,"accessibility":{"settings":{}},"framework_details":{"frameworkName":"Playwright","frameworkVersion":"1.54.2","sdkVersion":"1.40.6","cliVersion":"1.6.6","language":"javascript","testFramework":{"name":"Playwright","version":"1.54.2"}},"product_map":{"observability":true,"accessibility":null,"percy":false,"automate":true,"app_automate":false},"browserstackAutomation":true,"test_orchestration":{}}
2025-08-05T18:24:34.234Z CLI info  [coreylipsey_CicmlG]   [e6d54d86-a008-4d24-b751-eca899209f36]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:24:34.607Z CLI info [testhub:module]  [coreylipsey_CicmlG]   [e6d54d86-a008-4d24-b751-eca899209f36]  startBuild: response=jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z
2025-08-05T18:24:34.609Z CLI info  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [PRODUCTION] Making POST request to https://api.browserstack.com
2025-08-05T18:24:38.610Z CLI info  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [PRODUCTION] Making GET request to https://hub.browserstack.com
2025-08-05T18:24:38.691Z CLI info  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [PRODUCTION] Making GET request to https://hub-use.browserstack.com
2025-08-05T18:24:38.692Z CLI info  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [PRODUCTION] Making GET request to https://hub-usw.browserstack.com
2025-08-05T18:24:38.692Z CLI info  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [PRODUCTION] Making GET request to https://hub-euw.browserstack.com
2025-08-05T18:24:43.638Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'd8fd219d-e870-4d45-827e-8eb30a713198',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:24:43.435Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 30331:0
2025-08-05T18:24:43.639Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '22996a5d-3012-414c-9fb5-874ec201bddd',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:24:43.437Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 30331:0
2025-08-05T18:24:43.641Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '9046ec00-320b-44d2-acdd-866601e27651',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:24:43.447Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 30331:0
2025-08-05T18:24:44.611Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'd8fd219d-e870-4d45-827e-8eb30a713198',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:24:43.435Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '22996a5d-3012-414c-9fb5-874ec201bddd',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:24:43.437Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '9046ec00-320b-44d2-acdd-866601e27651',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:24:43.447Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 30331:0
2025-08-05T18:24:44.612Z CLI info  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:24:51.695Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '9046ec00-320b-44d2-acdd-866601e27651',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 44,
    started_at: '2025-08-05T18:24:43.447Z',
    finished_at: '2025-08-05T18:24:43.491Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 30331:0
2025-08-05T18:24:51.700Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:24:51.622Z',
      uuid: '9046ec00-320b-44d2-acdd-866601e27651',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '9046ec00-320b-44d2-acdd-866601e27651'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:24:51.623Z',
      uuid: '9046ec00-320b-44d2-acdd-866601e27651',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '9046ec00-320b-44d2-acdd-866601e27651'
    }
  ]
} to 30331:0
2025-08-05T18:24:51.852Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'd8fd219d-e870-4d45-827e-8eb30a713198',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 47,
    started_at: '2025-08-05T18:24:43.435Z',
    finished_at: '2025-08-05T18:24:43.482Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 30331:0
2025-08-05T18:24:51.853Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:24:51.768Z',
      uuid: 'd8fd219d-e870-4d45-827e-8eb30a713198',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'd8fd219d-e870-4d45-827e-8eb30a713198'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:24:51.770Z',
      uuid: 'd8fd219d-e870-4d45-827e-8eb30a713198',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'd8fd219d-e870-4d45-827e-8eb30a713198'
    }
  ]
} to 30331:0
2025-08-05T18:24:52.001Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '22996a5d-3012-414c-9fb5-874ec201bddd',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 41,
    started_at: '2025-08-05T18:24:43.437Z',
    finished_at: '2025-08-05T18:24:43.478Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 30331:0
2025-08-05T18:24:52.003Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:24:51.973Z',
      uuid: '22996a5d-3012-414c-9fb5-874ec201bddd',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '22996a5d-3012-414c-9fb5-874ec201bddd'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:24:51.974Z',
      uuid: '22996a5d-3012-414c-9fb5-874ec201bddd',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '22996a5d-3012-414c-9fb5-874ec201bddd'
    }
  ]
} to 30331:0
2025-08-05T18:24:52.616Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '9046ec00-320b-44d2-acdd-866601e27651',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 44,
      started_at: '2025-08-05T18:24:43.447Z',
      finished_at: '2025-08-05T18:24:43.491Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'd8fd219d-e870-4d45-827e-8eb30a713198',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 47,
      started_at: '2025-08-05T18:24:43.435Z',
      finished_at: '2025-08-05T18:24:43.482Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '22996a5d-3012-414c-9fb5-874ec201bddd',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 41,
      started_at: '2025-08-05T18:24:43.437Z',
      finished_at: '2025-08-05T18:24:43.478Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 30331:0
2025-08-05T18:24:52.617Z CLI info  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:24:55.631Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '0949fa4f-35cf-40f8-adcb-c093c41fa89c',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:24:55.602Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 30331:0
2025-08-05T18:24:55.650Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '792c7a4d-275c-4a95-880c-e1e946c5fd47',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:24:55.616Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 30331:0
2025-08-05T18:24:55.661Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'e44592b6-e633-4947-8d4b-2b35551d30e1',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:24:55.632Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 30331:0
2025-08-05T18:24:56.620Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '0949fa4f-35cf-40f8-adcb-c093c41fa89c',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:24:55.602Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '792c7a4d-275c-4a95-880c-e1e946c5fd47',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:24:55.616Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'e44592b6-e633-4947-8d4b-2b35551d30e1',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:24:55.632Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 30331:0
2025-08-05T18:24:56.621Z CLI info  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:24:59.710Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '0949fa4f-35cf-40f8-adcb-c093c41fa89c',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 50,
    started_at: '2025-08-05T18:24:55.602Z',
    finished_at: '2025-08-05T18:24:55.652Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 30331:0
2025-08-05T18:24:59.712Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:24:59.671Z',
      uuid: '0949fa4f-35cf-40f8-adcb-c093c41fa89c',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '0949fa4f-35cf-40f8-adcb-c093c41fa89c'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:24:59.672Z',
      uuid: '0949fa4f-35cf-40f8-adcb-c093c41fa89c',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '0949fa4f-35cf-40f8-adcb-c093c41fa89c'
    }
  ]
} to 30331:0
2025-08-05T18:25:00.028Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '792c7a4d-275c-4a95-880c-e1e946c5fd47',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 81,
    started_at: '2025-08-05T18:24:55.616Z',
    finished_at: '2025-08-05T18:24:55.697Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 30331:0
2025-08-05T18:25:00.029Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:25:00.001Z',
      uuid: '792c7a4d-275c-4a95-880c-e1e946c5fd47',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '792c7a4d-275c-4a95-880c-e1e946c5fd47'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:25:00.002Z',
      uuid: '792c7a4d-275c-4a95-880c-e1e946c5fd47',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '792c7a4d-275c-4a95-880c-e1e946c5fd47'
    }
  ]
} to 30331:0
2025-08-05T18:25:00.622Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '0949fa4f-35cf-40f8-adcb-c093c41fa89c',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 50,
      started_at: '2025-08-05T18:24:55.602Z',
      finished_at: '2025-08-05T18:24:55.652Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '792c7a4d-275c-4a95-880c-e1e946c5fd47',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 81,
      started_at: '2025-08-05T18:24:55.616Z',
      finished_at: '2025-08-05T18:24:55.697Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 30331:0
2025-08-05T18:25:00.622Z CLI info  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:25:01.073Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'e44592b6-e633-4947-8d4b-2b35551d30e1',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 141,
    started_at: '2025-08-05T18:24:55.632Z',
    finished_at: '2025-08-05T18:24:55.773Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 30331:0
2025-08-05T18:25:01.078Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:25:01.039Z',
      uuid: 'e44592b6-e633-4947-8d4b-2b35551d30e1',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'e44592b6-e633-4947-8d4b-2b35551d30e1'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:25:01.042Z',
      uuid: 'e44592b6-e633-4947-8d4b-2b35551d30e1',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'e44592b6-e633-4947-8d4b-2b35551d30e1'
    }
  ]
} to 30331:0
2025-08-05T18:25:02.622Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'e44592b6-e633-4947-8d4b-2b35551d30e1',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 141,
      started_at: '2025-08-05T18:24:55.632Z',
      finished_at: '2025-08-05T18:24:55.773Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 30331:0
2025-08-05T18:25:02.623Z CLI info  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:25:03.971Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'c08d3857-b000-4179-b8b3-25bf936672ca',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:25:03.952Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 30331:0
2025-08-05T18:25:04.085Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '23d86878-e90c-434a-938f-70357c8d02a5',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:25:04.053Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 30331:0
2025-08-05T18:25:04.624Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'c08d3857-b000-4179-b8b3-25bf936672ca',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:25:03.952Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '23d86878-e90c-434a-938f-70357c8d02a5',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:25:04.053Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 30331:0
2025-08-05T18:25:04.625Z CLI info  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:25:04.673Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'd05facb3-9363-4197-afa9-30bb3081b1c4',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:25:04.659Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 30331:0
2025-08-05T18:25:06.626Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'd05facb3-9363-4197-afa9-30bb3081b1c4',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:25:04.659Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 30331:0
2025-08-05T18:25:06.627Z CLI info  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:25:10.963Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'c08d3857-b000-4179-b8b3-25bf936672ca',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 55,
    started_at: '2025-08-05T18:25:03.952Z',
    finished_at: '2025-08-05T18:25:04.007Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 30331:0
2025-08-05T18:25:10.967Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:25:10.940Z',
      uuid: 'c08d3857-b000-4179-b8b3-25bf936672ca',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'c08d3857-b000-4179-b8b3-25bf936672ca'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:25:10.941Z',
      uuid: 'c08d3857-b000-4179-b8b3-25bf936672ca',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'c08d3857-b000-4179-b8b3-25bf936672ca'
    }
  ]
} to 30331:0
2025-08-05T18:25:12.629Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'c08d3857-b000-4179-b8b3-25bf936672ca',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 55,
      started_at: '2025-08-05T18:25:03.952Z',
      finished_at: '2025-08-05T18:25:04.007Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 30331:0
2025-08-05T18:25:12.631Z CLI info  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:25:13.670Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'd05facb3-9363-4197-afa9-30bb3081b1c4',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 39,
    started_at: '2025-08-05T18:25:04.659Z',
    finished_at: '2025-08-05T18:25:04.698Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 30331:0
2025-08-05T18:25:13.674Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:25:13.638Z',
      uuid: 'd05facb3-9363-4197-afa9-30bb3081b1c4',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'd05facb3-9363-4197-afa9-30bb3081b1c4'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:25:13.639Z',
      uuid: 'd05facb3-9363-4197-afa9-30bb3081b1c4',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'd05facb3-9363-4197-afa9-30bb3081b1c4'
    }
  ]
} to 30331:0
2025-08-05T18:25:14.630Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'd05facb3-9363-4197-afa9-30bb3081b1c4',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 39,
      started_at: '2025-08-05T18:25:04.659Z',
      finished_at: '2025-08-05T18:25:04.698Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 30331:0
2025-08-05T18:25:14.631Z CLI info  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:25:23.617Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '23d86878-e90c-434a-938f-70357c8d02a5',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 46,
    started_at: '2025-08-05T18:25:04.053Z',
    finished_at: '2025-08-05T18:25:04.099Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 30331:0
2025-08-05T18:25:23.618Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:25:23.583Z',
      uuid: '23d86878-e90c-434a-938f-70357c8d02a5',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '23d86878-e90c-434a-938f-70357c8d02a5'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:25:23.586Z',
      uuid: '23d86878-e90c-434a-938f-70357c8d02a5',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '23d86878-e90c-434a-938f-70357c8d02a5'
    }
  ]
} to 30331:0
2025-08-05T18:25:24.636Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '23d86878-e90c-434a-938f-70357c8d02a5',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 46,
      started_at: '2025-08-05T18:25:04.053Z',
      finished_at: '2025-08-05T18:25:04.099Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 30331:0
2025-08-05T18:25:24.645Z CLI info  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:25:45.722Z CLI info [main]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  Received graceful signal termination, performing cleanup
2025-08-05T18:25:46.895Z CLI info  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:25:46.921Z CLI info  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:25:46.943Z CLI info  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:25:46.979Z CLI error [testhub:module]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [collectBuildData] Exception in collecting build data for build UUID jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z: {"message":"Build data collection started"}
2025-08-05T18:25:46.979Z CLI info  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [PRODUCTION] Making PUT request to https://collector-observability.browserstack.com
2025-08-05T18:25:47.006Z CLI error [testhub:module]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [collectBuildData] Exception in collecting build data for build UUID jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z: {"message":"Build data collection started"}
2025-08-05T18:25:47.006Z CLI info  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [PRODUCTION] Making PUT request to https://collector-observability.browserstack.com
2025-08-05T18:25:47.019Z CLI error [testhub:module]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [collectBuildData] Exception in collecting build data for build UUID jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z: {"message":"Build data collection started"}
2025-08-05T18:25:47.019Z CLI info  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  [PRODUCTION] Making PUT request to https://collector-observability.browserstack.com
2025-08-05T18:25:47.088Z CLI info [testhub:module]  [coreylipsey_CicmlG]  [jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z]  [e6d54d86-a008-4d24-b751-eca899209f36]  stopBuild: jphho4mihe61kvarhwhcczxbvtyxjydveab9tf9z request={"finished_at":"2025-08-05T18:25:45.750Z","finished_metadata":[],"custom_metadata":null} response={"data":""}
2025-08-05T18:29:36.959Z CLI info     Config : {"userName":"coreylipsey_CicmlG","accessKey":"qRbyY1vhLqJDjNwJqN7E","localIdentifier":"gutcheck-mvp-test","platforms":[{"os":"Windows","osVersion":11,"browserName":"chrome","browserVersion":"latest"},{"os":"OS X","osVersion":"Ventura","browserName":"playwright-webkit","browserVersion":"latest"},{"deviceName":"Samsung Galaxy S23 Ultra","browserName":"chrome","osVersion":13}]}
2025-08-05T18:29:37.016Z CLI info [testhub:module]  [coreylipsey_CicmlG]   [75054c56-8242-43e8-b012-f9d903f62ecf]  Starting testhub from 32451:0
2025-08-05T18:29:37.017Z CLI info [testhub:module]  [coreylipsey_CicmlG]   [75054c56-8242-43e8-b012-f9d903f62ecf]  startBuild: payload=

{"started_at":"2025-08-05T18:29:37.017Z","host_info":{"hostname":"Coreys-MBP","platform":"darwin","type":"Darwin","version":"Darwin Kernel Version 23.6.0: Mon Jul 29 21:13:00 PDT 2024; root:xnu-10063.141.2~1/RELEASE_X86_64","arch":"x64"},"ci_info":{"build_number":null},"version_control":{"name":"git","sha":"969b256d6d4e2c4c6fe0c1ecfb8c00ae004a8510","short_sha":"969b256d6d","branch":"main","tag":null,"committer":"Corey Lipsey <your.email@example.com>","committer_date":"2025-08-05T16:32:35.000Z","author":"Corey Lipsey <your.email@example.com>","author_date":"2025-08-05T16:32:35.000Z","commit_message":"fix: Resolve ESLint errors and TypeScript issues - Fix all TypeScript 'any' type errors - Remove unused imports and variables - Improve type safety across the codebase - All linting now passes successfully","root":"/Users/coreylipsey/gutcheck-score-mvp","common_git_dir":"/Users/coreylipsey/gutcheck-score-mvp/.git","worktree_git_dir":"/Users/coreylipsey/gutcheck-score-mvp/.git","last_tag":null,"commits_since_last_tag":0,"remotes":[{"name":"origin","url":"https://github.com/coreylipsey/gutcheck-score-mvp.git"}]},"project_name":"","build_run_identifier":null,"description":"","tags":[],"failed_tests_rerun":false,"accessibility":{"settings":{}},"framework_details":{"frameworkName":"Playwright","frameworkVersion":"1.54.2","sdkVersion":"1.40.6","cliVersion":"1.6.6","language":"javascript","testFramework":{"name":"Playwright","version":"1.54.2"}},"product_map":{"observability":true,"accessibility":null,"percy":false,"automate":true,"app_automate":false},"browserstackAutomation":true,"test_orchestration":{}}
2025-08-05T18:29:37.017Z CLI info  [coreylipsey_CicmlG]   [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:29:37.709Z CLI info [testhub:module]  [coreylipsey_CicmlG]   [75054c56-8242-43e8-b012-f9d903f62ecf]  startBuild: response=mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17
2025-08-05T18:29:37.711Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making POST request to https://api.browserstack.com
2025-08-05T18:29:42.585Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making GET request to https://hub.browserstack.com
2025-08-05T18:29:42.691Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making GET request to https://hub-use.browserstack.com
2025-08-05T18:29:42.692Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making GET request to https://hub-usw.browserstack.com
2025-08-05T18:29:42.692Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making GET request to https://hub-euw.browserstack.com
2025-08-05T18:29:47.125Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'c04286af-792e-477b-8003-fd2b1f82e083',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:29:47.033Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 32451:0
2025-08-05T18:29:47.159Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'a8fe48e8-b987-4e18-b567-cc951da0bd18',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:29:47.050Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 32451:0
2025-08-05T18:29:47.195Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '3a38d31a-42ae-4410-8957-2b1ccf629af2',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:29:47.070Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 32451:0
2025-08-05T18:29:47.716Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'c04286af-792e-477b-8003-fd2b1f82e083',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:29:47.033Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'a8fe48e8-b987-4e18-b567-cc951da0bd18',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:29:47.050Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '3a38d31a-42ae-4410-8957-2b1ccf629af2',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:29:47.070Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 32451:0
2025-08-05T18:29:47.717Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:29:55.610Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'c04286af-792e-477b-8003-fd2b1f82e083',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 56,
    started_at: '2025-08-05T18:29:47.033Z',
    finished_at: '2025-08-05T18:29:47.089Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 32451:0
2025-08-05T18:29:55.618Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:29:55.537Z',
      uuid: 'c04286af-792e-477b-8003-fd2b1f82e083',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'c04286af-792e-477b-8003-fd2b1f82e083'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:29:55.538Z',
      uuid: 'c04286af-792e-477b-8003-fd2b1f82e083',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'c04286af-792e-477b-8003-fd2b1f82e083'
    }
  ]
} to 32451:0
2025-08-05T18:29:55.718Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'c04286af-792e-477b-8003-fd2b1f82e083',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 56,
      started_at: '2025-08-05T18:29:47.033Z',
      finished_at: '2025-08-05T18:29:47.089Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 32451:0
2025-08-05T18:29:55.719Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:29:57.956Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'a8fe48e8-b987-4e18-b567-cc951da0bd18',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 51,
    started_at: '2025-08-05T18:29:47.050Z',
    finished_at: '2025-08-05T18:29:47.101Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 32451:0
2025-08-05T18:29:57.958Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:29:57.925Z',
      uuid: 'a8fe48e8-b987-4e18-b567-cc951da0bd18',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'a8fe48e8-b987-4e18-b567-cc951da0bd18'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:29:57.926Z',
      uuid: 'a8fe48e8-b987-4e18-b567-cc951da0bd18',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'a8fe48e8-b987-4e18-b567-cc951da0bd18'
    }
  ]
} to 32451:0
2025-08-05T18:29:58.303Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '3a38d31a-42ae-4410-8957-2b1ccf629af2',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 43,
    started_at: '2025-08-05T18:29:47.070Z',
    finished_at: '2025-08-05T18:29:47.113Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 32451:0
2025-08-05T18:29:58.304Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:29:58.285Z',
      uuid: '3a38d31a-42ae-4410-8957-2b1ccf629af2',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '3a38d31a-42ae-4410-8957-2b1ccf629af2'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:29:58.286Z',
      uuid: '3a38d31a-42ae-4410-8957-2b1ccf629af2',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '3a38d31a-42ae-4410-8957-2b1ccf629af2'
    }
  ]
} to 32451:0
2025-08-05T18:29:59.647Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'aa1f0c70-e0ff-42f8-85d9-07f9a74939c7',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:29:59.632Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 32451:0
2025-08-05T18:29:59.719Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'a8fe48e8-b987-4e18-b567-cc951da0bd18',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 51,
      started_at: '2025-08-05T18:29:47.050Z',
      finished_at: '2025-08-05T18:29:47.101Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '3a38d31a-42ae-4410-8957-2b1ccf629af2',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 43,
      started_at: '2025-08-05T18:29:47.070Z',
      finished_at: '2025-08-05T18:29:47.113Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'aa1f0c70-e0ff-42f8-85d9-07f9a74939c7',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:29:59.632Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 32451:0
2025-08-05T18:29:59.720Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:30:02.096Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '65cbb6d6-aa8d-427b-a8d2-ceff536be91e',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:30:02.080Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 32451:0
2025-08-05T18:30:02.398Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '46d81ff9-ba7a-450e-9eb2-886a76f68701',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:30:02.313Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 32451:0
2025-08-05T18:30:03.718Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '65cbb6d6-aa8d-427b-a8d2-ceff536be91e',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:30:02.080Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '46d81ff9-ba7a-450e-9eb2-886a76f68701',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:30:02.313Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 32451:0
2025-08-05T18:30:03.719Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:30:04.013Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'aa1f0c70-e0ff-42f8-85d9-07f9a74939c7',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 65,
    started_at: '2025-08-05T18:29:59.632Z',
    finished_at: '2025-08-05T18:29:59.697Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 32451:0
2025-08-05T18:30:04.014Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:30:03.997Z',
      uuid: 'aa1f0c70-e0ff-42f8-85d9-07f9a74939c7',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'aa1f0c70-e0ff-42f8-85d9-07f9a74939c7'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:30:03.998Z',
      uuid: 'aa1f0c70-e0ff-42f8-85d9-07f9a74939c7',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'aa1f0c70-e0ff-42f8-85d9-07f9a74939c7'
    }
  ]
} to 32451:0
2025-08-05T18:30:05.718Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'aa1f0c70-e0ff-42f8-85d9-07f9a74939c7',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 65,
      started_at: '2025-08-05T18:29:59.632Z',
      finished_at: '2025-08-05T18:29:59.697Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 32451:0
2025-08-05T18:30:05.720Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:30:06.043Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '46d81ff9-ba7a-450e-9eb2-886a76f68701',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 65,
    started_at: '2025-08-05T18:30:02.313Z',
    finished_at: '2025-08-05T18:30:02.378Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 32451:0
2025-08-05T18:30:06.045Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:30:06.004Z',
      uuid: '46d81ff9-ba7a-450e-9eb2-886a76f68701',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '46d81ff9-ba7a-450e-9eb2-886a76f68701'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:30:06.005Z',
      uuid: '46d81ff9-ba7a-450e-9eb2-886a76f68701',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '46d81ff9-ba7a-450e-9eb2-886a76f68701'
    }
  ]
} to 32451:0
2025-08-05T18:30:06.740Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '65cbb6d6-aa8d-427b-a8d2-ceff536be91e',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 38,
    started_at: '2025-08-05T18:30:02.080Z',
    finished_at: '2025-08-05T18:30:02.118Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 32451:0
2025-08-05T18:30:06.741Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:30:06.724Z',
      uuid: '65cbb6d6-aa8d-427b-a8d2-ceff536be91e',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '65cbb6d6-aa8d-427b-a8d2-ceff536be91e'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:30:06.725Z',
      uuid: '65cbb6d6-aa8d-427b-a8d2-ceff536be91e',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '65cbb6d6-aa8d-427b-a8d2-ceff536be91e'
    }
  ]
} to 32451:0
2025-08-05T18:30:07.444Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '9d0bf2da-2468-48ea-b43a-56e232e34d95',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:30:07.428Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 32451:0
2025-08-05T18:30:07.720Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '46d81ff9-ba7a-450e-9eb2-886a76f68701',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 65,
      started_at: '2025-08-05T18:30:02.313Z',
      finished_at: '2025-08-05T18:30:02.378Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '65cbb6d6-aa8d-427b-a8d2-ceff536be91e',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 38,
      started_at: '2025-08-05T18:30:02.080Z',
      finished_at: '2025-08-05T18:30:02.118Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '9d0bf2da-2468-48ea-b43a-56e232e34d95',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:30:07.428Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 32451:0
2025-08-05T18:30:07.721Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:30:09.642Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'd6074af1-4c6e-41af-a845-6bc3c79f1e39',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:30:09.629Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 32451:0
2025-08-05T18:30:09.720Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'd6074af1-4c6e-41af-a845-6bc3c79f1e39',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:30:09.629Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 32451:0
2025-08-05T18:30:09.721Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:30:10.264Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'bc345f8d-2822-4f76-88b1-3b28d4ba3d5d',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:30:10.252Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 32451:0
2025-08-05T18:30:11.721Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'bc345f8d-2822-4f76-88b1-3b28d4ba3d5d',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:30:10.252Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 32451:0
2025-08-05T18:30:11.721Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:30:14.803Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '9d0bf2da-2468-48ea-b43a-56e232e34d95',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 53,
    started_at: '2025-08-05T18:30:07.428Z',
    finished_at: '2025-08-05T18:30:07.481Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 32451:0
2025-08-05T18:30:14.806Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:30:14.783Z',
      uuid: '9d0bf2da-2468-48ea-b43a-56e232e34d95',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '9d0bf2da-2468-48ea-b43a-56e232e34d95'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:30:14.784Z',
      uuid: '9d0bf2da-2468-48ea-b43a-56e232e34d95',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '9d0bf2da-2468-48ea-b43a-56e232e34d95'
    }
  ]
} to 32451:0
2025-08-05T18:30:15.722Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '9d0bf2da-2468-48ea-b43a-56e232e34d95',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 53,
      started_at: '2025-08-05T18:30:07.428Z',
      finished_at: '2025-08-05T18:30:07.481Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 32451:0
2025-08-05T18:30:15.722Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:30:16.810Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'd6074af1-4c6e-41af-a845-6bc3c79f1e39',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 46,
    started_at: '2025-08-05T18:30:09.629Z',
    finished_at: '2025-08-05T18:30:09.675Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 32451:0
2025-08-05T18:30:16.811Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:30:16.783Z',
      uuid: 'd6074af1-4c6e-41af-a845-6bc3c79f1e39',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'd6074af1-4c6e-41af-a845-6bc3c79f1e39'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:30:16.785Z',
      uuid: 'd6074af1-4c6e-41af-a845-6bc3c79f1e39',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'd6074af1-4c6e-41af-a845-6bc3c79f1e39'
    }
  ]
} to 32451:0
2025-08-05T18:30:17.722Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'd6074af1-4c6e-41af-a845-6bc3c79f1e39',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 46,
      started_at: '2025-08-05T18:30:09.629Z',
      finished_at: '2025-08-05T18:30:09.675Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 32451:0
2025-08-05T18:30:17.724Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:30:17.860Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'bc345f8d-2822-4f76-88b1-3b28d4ba3d5d',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 42,
    started_at: '2025-08-05T18:30:10.252Z',
    finished_at: '2025-08-05T18:30:10.294Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 32451:0
2025-08-05T18:30:17.862Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:30:17.827Z',
      uuid: 'bc345f8d-2822-4f76-88b1-3b28d4ba3d5d',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'bc345f8d-2822-4f76-88b1-3b28d4ba3d5d'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:30:17.828Z',
      uuid: 'bc345f8d-2822-4f76-88b1-3b28d4ba3d5d',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'bc345f8d-2822-4f76-88b1-3b28d4ba3d5d'
    }
  ]
} to 32451:0
2025-08-05T18:30:19.724Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'bc345f8d-2822-4f76-88b1-3b28d4ba3d5d',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 42,
      started_at: '2025-08-05T18:30:10.252Z',
      finished_at: '2025-08-05T18:30:10.294Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 32451:0
2025-08-05T18:30:19.725Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:30:47.376Z CLI info [main]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Received graceful signal termination, performing cleanup
2025-08-05T18:30:47.967Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:30:47.972Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:30:47.978Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:30:48.049Z CLI error [testhub:module]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [collectBuildData] Exception in collecting build data for build UUID mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17: {"message":"Build data collection started"}
2025-08-05T18:30:48.049Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making PUT request to https://collector-observability.browserstack.com
2025-08-05T18:30:48.058Z CLI error [testhub:module]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [collectBuildData] Exception in collecting build data for build UUID mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17: {"message":"Build data collection started"}
2025-08-05T18:30:48.058Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making PUT request to https://collector-observability.browserstack.com
2025-08-05T18:30:48.062Z CLI error [testhub:module]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [collectBuildData] Exception in collecting build data for build UUID mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17: {"message":"Build data collection started"}
2025-08-05T18:30:48.063Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making PUT request to https://collector-observability.browserstack.com
2025-08-05T18:30:48.144Z CLI info [testhub:module]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  stopBuild: mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17 request={"finished_at":"2025-08-05T18:30:47.446Z","finished_metadata":[],"custom_metadata":{}} response={"data":""}
2025-08-05T18:30:48.146Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making POST request to https://api.browserstack.com
2025-08-05T18:30:48.150Z CLI info [observability:module]  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  Visit https://observability.browserstack.com/builds/mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17 to view build report, insights, and many more debugging information all at one place!
2025-08-05T18:30:48.156Z CLI info  [coreylipsey_CicmlG]  [mckkfd3yuj3bcpapbcxjlajpts0feau4x2c9bz17]  [75054c56-8242-43e8-b012-f9d903f62ecf]  [PRODUCTION] Making GET request to https://api.browserstack.com
2025-08-05T18:31:33.626Z CLI info     Config : {"userName":"coreylipsey_CicmlG","accessKey":"qRbyY1vhLqJDjNwJqN7E","framework":"playwright","localIdentifier":"gutcheck-mvp-test","platforms":[{"os":"Windows","osVersion":11,"browserName":"chrome","browserVersion":"latest"},{"os":"OS X","osVersion":"Ventura","browserName":"playwright-webkit","browserVersion":"latest"},{"deviceName":"Samsung Galaxy S23 Ultra","browserName":"chrome","osVersion":13}],"browserstackLocal":true,"buildName":"gutcheck-mvp-test","projectName":"Gutcheck MVP","debug":true,"consoleLogs":"info"}
2025-08-05T18:31:33.696Z CLI info [testhub:module]  [coreylipsey_CicmlG]   [2f294399-3571-4ce9-a26e-4153d3b26785]  Starting testhub from 33486:0
2025-08-05T18:31:33.697Z CLI info [testhub:module]  [coreylipsey_CicmlG]   [2f294399-3571-4ce9-a26e-4153d3b26785]  startBuild: payload=

{"started_at":"2025-08-05T18:31:33.697Z","host_info":{"hostname":"Coreys-MBP","platform":"darwin","type":"Darwin","version":"Darwin Kernel Version 23.6.0: Mon Jul 29 21:13:00 PDT 2024; root:xnu-10063.141.2~1/RELEASE_X86_64","arch":"x64"},"ci_info":{"build_number":null},"version_control":{"name":"git","sha":"969b256d6d4e2c4c6fe0c1ecfb8c00ae004a8510","short_sha":"969b256d6d","branch":"main","tag":null,"committer":"Corey Lipsey <your.email@example.com>","committer_date":"2025-08-05T16:32:35.000Z","author":"Corey Lipsey <your.email@example.com>","author_date":"2025-08-05T16:32:35.000Z","commit_message":"fix: Resolve ESLint errors and TypeScript issues - Fix all TypeScript 'any' type errors - Remove unused imports and variables - Improve type safety across the codebase - All linting now passes successfully","root":"/Users/coreylipsey/gutcheck-score-mvp","common_git_dir":"/Users/coreylipsey/gutcheck-score-mvp/.git","worktree_git_dir":"/Users/coreylipsey/gutcheck-score-mvp/.git","last_tag":null,"commits_since_last_tag":0,"remotes":[{"name":"origin","url":"https://github.com/coreylipsey/gutcheck-score-mvp.git"}]},"project_name":"Gutcheck MVP","name":"gutcheck-mvp-test","build_identifier":"#1","build_run_identifier":null,"description":"","tags":[],"failed_tests_rerun":false,"accessibility":{"settings":{}},"framework_details":{"frameworkName":"Playwright","frameworkVersion":"1.54.2","sdkVersion":"1.40.6","cliVersion":"1.6.6","language":"javascript","testFramework":{"name":"Playwright","version":"1.54.2"}},"product_map":{"observability":true,"accessibility":null,"percy":false,"automate":true,"app_automate":false},"browserstackAutomation":true,"test_orchestration":{}}
2025-08-05T18:31:33.698Z CLI info  [coreylipsey_CicmlG]   [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:31:34.018Z CLI info [testhub:module]  [coreylipsey_CicmlG]   [2f294399-3571-4ce9-a26e-4153d3b26785]  startBuild: response=cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628
2025-08-05T18:31:34.020Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making POST request to https://api.browserstack.com
2025-08-05T18:31:42.804Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making GET request to https://hub.browserstack.com
2025-08-05T18:31:42.910Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making GET request to https://hub-use.browserstack.com
2025-08-05T18:31:42.911Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making GET request to https://hub-usw.browserstack.com
2025-08-05T18:31:42.912Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making GET request to https://hub-euw.browserstack.com
2025-08-05T18:31:47.778Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'c5458114-cee6-4393-b594-5b443b2d4f12',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:31:47.603Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 33486:0
2025-08-05T18:31:47.816Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '39e06122-b2dc-4f1e-84e3-c8d38f3056fa',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:31:47.611Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 33486:0
2025-08-05T18:31:47.817Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '54aa8d8a-54a4-4d9e-b1a3-cbeb4d532000',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:31:47.634Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 33486:0
2025-08-05T18:31:48.029Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'c5458114-cee6-4393-b594-5b443b2d4f12',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:31:47.603Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '39e06122-b2dc-4f1e-84e3-c8d38f3056fa',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:31:47.611Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '54aa8d8a-54a4-4d9e-b1a3-cbeb4d532000',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:31:47.634Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 33486:0
2025-08-05T18:31:48.031Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:31:55.485Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '54aa8d8a-54a4-4d9e-b1a3-cbeb4d532000',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 64,
    started_at: '2025-08-05T18:31:47.634Z',
    finished_at: '2025-08-05T18:31:47.698Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 33486:0
2025-08-05T18:31:55.488Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:31:55.419Z',
      uuid: '54aa8d8a-54a4-4d9e-b1a3-cbeb4d532000',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '54aa8d8a-54a4-4d9e-b1a3-cbeb4d532000'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:31:55.420Z',
      uuid: '54aa8d8a-54a4-4d9e-b1a3-cbeb4d532000',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '54aa8d8a-54a4-4d9e-b1a3-cbeb4d532000'
    }
  ]
} to 33486:0
2025-08-05T18:31:55.635Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'c5458114-cee6-4393-b594-5b443b2d4f12',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 52,
    started_at: '2025-08-05T18:31:47.603Z',
    finished_at: '2025-08-05T18:31:47.655Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 33486:0
2025-08-05T18:31:55.635Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:31:55.616Z',
      uuid: 'c5458114-cee6-4393-b594-5b443b2d4f12',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'c5458114-cee6-4393-b594-5b443b2d4f12'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:31:55.617Z',
      uuid: 'c5458114-cee6-4393-b594-5b443b2d4f12',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'c5458114-cee6-4393-b594-5b443b2d4f12'
    }
  ]
} to 33486:0
2025-08-05T18:31:56.033Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '54aa8d8a-54a4-4d9e-b1a3-cbeb4d532000',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 64,
      started_at: '2025-08-05T18:31:47.634Z',
      finished_at: '2025-08-05T18:31:47.698Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'c5458114-cee6-4393-b594-5b443b2d4f12',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 52,
      started_at: '2025-08-05T18:31:47.603Z',
      finished_at: '2025-08-05T18:31:47.655Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 33486:0
2025-08-05T18:31:56.035Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:31:56.393Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '39e06122-b2dc-4f1e-84e3-c8d38f3056fa',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 43,
    started_at: '2025-08-05T18:31:47.611Z',
    finished_at: '2025-08-05T18:31:47.654Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -Samsung Galaxy S23 Ultra:13-browserstack-mobile browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 33486:0
2025-08-05T18:31:56.395Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:31:56.369Z',
      uuid: '39e06122-b2dc-4f1e-84e3-c8d38f3056fa',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '39e06122-b2dc-4f1e-84e3-c8d38f3056fa'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:31:56.370Z',
      uuid: '39e06122-b2dc-4f1e-84e3-c8d38f3056fa',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '39e06122-b2dc-4f1e-84e3-c8d38f3056fa'
    }
  ]
} to 33486:0
2025-08-05T18:31:58.032Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '39e06122-b2dc-4f1e-84e3-c8d38f3056fa',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 43,
      started_at: '2025-08-05T18:31:47.611Z',
      finished_at: '2025-08-05T18:31:47.654Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 33486:0
2025-08-05T18:31:58.033Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:31:59.774Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'c8489fd4-4c35-45e6-9e9a-3891c9d5b0cc',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:31:59.720Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 33486:0
2025-08-05T18:31:59.781Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b2a2b509-5933-4e81-9aba-2723e06def11',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:31:59.731Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 33486:0
2025-08-05T18:32:00.033Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'c8489fd4-4c35-45e6-9e9a-3891c9d5b0cc',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:31:59.720Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b2a2b509-5933-4e81-9aba-2723e06def11',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:31:59.731Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 33486:0
2025-08-05T18:32:00.034Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:32:00.279Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '419067e6-09b1-4d0e-8ad4-7a26eeb823ea',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:32:00.262Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 33486:0
2025-08-05T18:32:02.034Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '419067e6-09b1-4d0e-8ad4-7a26eeb823ea',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:32:00.262Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 33486:0
2025-08-05T18:32:02.035Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:32:04.477Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b2a2b509-5933-4e81-9aba-2723e06def11',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 68,
    started_at: '2025-08-05T18:31:59.731Z',
    finished_at: '2025-08-05T18:31:59.799Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 33486:0
2025-08-05T18:32:04.482Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:32:04.449Z',
      uuid: 'b2a2b509-5933-4e81-9aba-2723e06def11',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b2a2b509-5933-4e81-9aba-2723e06def11'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:32:04.450Z',
      uuid: 'b2a2b509-5933-4e81-9aba-2723e06def11',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b2a2b509-5933-4e81-9aba-2723e06def11'
    }
  ]
} to 33486:0
2025-08-05T18:32:04.651Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'c8489fd4-4c35-45e6-9e9a-3891c9d5b0cc',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 47,
    started_at: '2025-08-05T18:31:59.720Z',
    finished_at: '2025-08-05T18:31:59.767Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 33486:0
2025-08-05T18:32:04.651Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:32:04.603Z',
      uuid: 'c8489fd4-4c35-45e6-9e9a-3891c9d5b0cc',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'c8489fd4-4c35-45e6-9e9a-3891c9d5b0cc'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:32:04.604Z',
      uuid: 'c8489fd4-4c35-45e6-9e9a-3891c9d5b0cc',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'c8489fd4-4c35-45e6-9e9a-3891c9d5b0cc'
    }
  ]
} to 33486:0
2025-08-05T18:32:05.082Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '419067e6-09b1-4d0e-8ad4-7a26eeb823ea',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 45,
    started_at: '2025-08-05T18:32:00.262Z',
    finished_at: '2025-08-05T18:32:00.307Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 33486:0
2025-08-05T18:32:05.083Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:32:05.045Z',
      uuid: '419067e6-09b1-4d0e-8ad4-7a26eeb823ea',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '419067e6-09b1-4d0e-8ad4-7a26eeb823ea'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:32:05.046Z',
      uuid: '419067e6-09b1-4d0e-8ad4-7a26eeb823ea',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '419067e6-09b1-4d0e-8ad4-7a26eeb823ea'
    }
  ]
} to 33486:0
2025-08-05T18:32:06.034Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b2a2b509-5933-4e81-9aba-2723e06def11',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 68,
      started_at: '2025-08-05T18:31:59.731Z',
      finished_at: '2025-08-05T18:31:59.799Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'c8489fd4-4c35-45e6-9e9a-3891c9d5b0cc',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 47,
      started_at: '2025-08-05T18:31:59.720Z',
      finished_at: '2025-08-05T18:31:59.767Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '419067e6-09b1-4d0e-8ad4-7a26eeb823ea',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 45,
      started_at: '2025-08-05T18:32:00.262Z',
      finished_at: '2025-08-05T18:32:00.307Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 33486:0
2025-08-05T18:32:06.036Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:32:08.425Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '884baaf6-9ecc-447e-8d82-cd4243a18a7c',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:32:08.413Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 33486:0
2025-08-05T18:32:08.466Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'aff7d231-3d8b-42b6-9eb4-13a989d4dde7',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:32:08.448Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 33486:0
2025-08-05T18:32:08.789Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '0bb4bd71-044c-4fd3-9001-d8f096fd5ce1',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:32:08.778Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 33486:0
2025-08-05T18:32:10.035Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '884baaf6-9ecc-447e-8d82-cd4243a18a7c',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:32:08.413Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'aff7d231-3d8b-42b6-9eb4-13a989d4dde7',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:32:08.448Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '0bb4bd71-044c-4fd3-9001-d8f096fd5ce1',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:32:08.778Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 33486:0
2025-08-05T18:32:10.036Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:32:17.265Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'aff7d231-3d8b-42b6-9eb4-13a989d4dde7',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 44,
    started_at: '2025-08-05T18:32:08.448Z',
    finished_at: '2025-08-05T18:32:08.492Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 33486:0
2025-08-05T18:32:17.267Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:32:17.224Z',
      uuid: 'aff7d231-3d8b-42b6-9eb4-13a989d4dde7',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'aff7d231-3d8b-42b6-9eb4-13a989d4dde7'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:32:17.226Z',
      uuid: 'aff7d231-3d8b-42b6-9eb4-13a989d4dde7',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'aff7d231-3d8b-42b6-9eb4-13a989d4dde7'
    }
  ]
} to 33486:0
2025-08-05T18:32:18.038Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'aff7d231-3d8b-42b6-9eb4-13a989d4dde7',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 44,
      started_at: '2025-08-05T18:32:08.448Z',
      finished_at: '2025-08-05T18:32:08.492Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 33486:0
2025-08-05T18:32:18.039Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:32:18.057Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '0bb4bd71-044c-4fd3-9001-d8f096fd5ce1',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 47,
    started_at: '2025-08-05T18:32:08.778Z',
    finished_at: '2025-08-05T18:32:08.825Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 33486:0
2025-08-05T18:32:18.058Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:32:18.030Z',
      uuid: '0bb4bd71-044c-4fd3-9001-d8f096fd5ce1',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '0bb4bd71-044c-4fd3-9001-d8f096fd5ce1'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:32:18.032Z',
      uuid: '0bb4bd71-044c-4fd3-9001-d8f096fd5ce1',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '0bb4bd71-044c-4fd3-9001-d8f096fd5ce1'
    }
  ]
} to 33486:0
2025-08-05T18:32:20.040Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '0bb4bd71-044c-4fd3-9001-d8f096fd5ce1',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 47,
      started_at: '2025-08-05T18:32:08.778Z',
      finished_at: '2025-08-05T18:32:08.825Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 33486:0
2025-08-05T18:32:20.041Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:32:36.666Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '884baaf6-9ecc-447e-8d82-cd4243a18a7c',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 48,
    started_at: '2025-08-05T18:32:08.413Z',
    finished_at: '2025-08-05T18:32:08.461Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 33486:0
2025-08-05T18:32:36.667Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:32:36.635Z',
      uuid: '884baaf6-9ecc-447e-8d82-cd4243a18a7c',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '884baaf6-9ecc-447e-8d82-cd4243a18a7c'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:32:36.636Z',
      uuid: '884baaf6-9ecc-447e-8d82-cd4243a18a7c',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '884baaf6-9ecc-447e-8d82-cd4243a18a7c'
    }
  ]
} to 33486:0
2025-08-05T18:32:38.045Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '884baaf6-9ecc-447e-8d82-cd4243a18a7c',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 48,
      started_at: '2025-08-05T18:32:08.413Z',
      finished_at: '2025-08-05T18:32:08.461Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 33486:0
2025-08-05T18:32:38.046Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:34:47.398Z CLI info [main]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Received graceful signal termination, performing cleanup
2025-08-05T18:34:48.586Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:34:48.600Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:34:48.610Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:34:48.748Z CLI error [testhub:module]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [collectBuildData] Exception in collecting build data for build UUID cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628: {"message":"Build data collection started"}
2025-08-05T18:34:48.748Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making PUT request to https://collector-observability.browserstack.com
2025-08-05T18:34:48.835Z CLI info [testhub:module]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  stopBuild: cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628 request={"finished_at":"2025-08-05T18:34:47.694Z","finished_metadata":[],"custom_metadata":{}} response={"data":""}
2025-08-05T18:34:48.838Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making POST request to https://api.browserstack.com
2025-08-05T18:34:48.841Z CLI info [observability:module]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Visit https://observability.browserstack.com/builds/cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628 to view build report, insights, and many more debugging information all at one place!
2025-08-05T18:34:48.854Z CLI error [testhub:module]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [collectBuildData] Exception in collecting build data for build UUID cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628: {"message":"Build data collection started"}
2025-08-05T18:34:48.854Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making PUT request to https://collector-observability.browserstack.com
2025-08-05T18:34:48.914Z CLI error [testhub:module]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [collectBuildData] Exception in collecting build data for build UUID cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628: Unauthorized Request
2025-08-05T18:34:48.915Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making PUT request to https://collector-observability.browserstack.com
2025-08-05T18:34:48.971Z CLI info [testhub:module]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  stopBuild: cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628 request={"finished_at":"2025-08-05T18:34:47.750Z","finished_metadata":[],"custom_metadata":{}} response={"data":""}
2025-08-05T18:34:48.972Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making POST request to https://api.browserstack.com
2025-08-05T18:34:48.975Z CLI info [observability:module]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Visit https://observability.browserstack.com/builds/cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628 to view build report, insights, and many more debugging information all at one place!
2025-08-05T18:34:49.016Z CLI info [testhub:module]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  stopBuild: cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628 request={"finished_at":"2025-08-05T18:34:47.483Z","finished_metadata":[],"custom_metadata":null} response={"data":""}
2025-08-05T18:34:51.454Z CLI info  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  [PRODUCTION] Making GET request to https://api.browserstack.com
2025-08-05T18:34:51.584Z CLI error  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  error invoking callback for eventName: {}
2025-08-05T18:34:51.585Z CLI error  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Error: Invalid session
    at Object.getBinSession (/snapshot/browserstack-binary/cli/dist/index.js)
    at /snapshot/browserstack-binary/cli/dist/index.js
    at _0x2f6775.onStop (/snapshot/browserstack-binary/cli/dist/index.js)
    at async HookRegistry.invoke (/snapshot/browserstack-binary/cli/dist/index.js)
    at async /snapshot/browserstack-binary/cli/dist/index.js
    at async /snapshot/browserstack-binary/cli/dist/index.js
2025-08-05T18:34:51.586Z CLI error [sdk:service]  [coreylipsey_CicmlG]  [cglyjnshzqavhwh9wciywbtdaxrqungeoax2y628]  [2f294399-3571-4ce9-a26e-4153d3b26785]  Error occured in StopBinSession 2f294399-3571-4ce9-a26e-4153d3b26785: Invalid session
2025-08-05T18:43:27.178Z CLI info     Config : {"userName":"coreylipsey_CicmlG","accessKey":"qRbyY1vhLqJDjNwJqN7E","framework":"playwright","platforms":[{"os":"Windows","osVersion":11,"browserName":"chrome","browserVersion":"latest"},{"os":"OS X","osVersion":"Ventura","browserName":"playwright-webkit","browserVersion":"latest"},{"os":"Windows","osVersion":11,"browserName":"playwright-firefox","browserVersion":"latest"}],"browserstackLocal":true,"buildName":"bstack-demo","projectName":"BrowserStack Sample","CUSTOM_TAG_1":"You can set a custom Build Tag here","debug":true,"consoleLogs":"info"}
2025-08-05T18:43:27.247Z CLI info [testhub:module]  [coreylipsey_CicmlG]   [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Starting testhub from 36431:0
2025-08-05T18:43:27.248Z CLI info [testhub:module]  [coreylipsey_CicmlG]   [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  startBuild: payload=

{"started_at":"2025-08-05T18:43:27.248Z","host_info":{"hostname":"Coreys-MBP","platform":"darwin","type":"Darwin","version":"Darwin Kernel Version 23.6.0: Mon Jul 29 21:13:00 PDT 2024; root:xnu-10063.141.2~1/RELEASE_X86_64","arch":"x64"},"ci_info":{"build_number":null},"version_control":{"name":"git","sha":"969b256d6d4e2c4c6fe0c1ecfb8c00ae004a8510","short_sha":"969b256d6d","branch":"main","tag":null,"committer":"Corey Lipsey <your.email@example.com>","committer_date":"2025-08-05T16:32:35.000Z","author":"Corey Lipsey <your.email@example.com>","author_date":"2025-08-05T16:32:35.000Z","commit_message":"fix: Resolve ESLint errors and TypeScript issues - Fix all TypeScript 'any' type errors - Remove unused imports and variables - Improve type safety across the codebase - All linting now passes successfully","root":"/Users/coreylipsey/gutcheck-score-mvp","common_git_dir":"/Users/coreylipsey/gutcheck-score-mvp/.git","worktree_git_dir":"/Users/coreylipsey/gutcheck-score-mvp/.git","last_tag":null,"commits_since_last_tag":0,"remotes":[{"name":"origin","url":"https://github.com/coreylipsey/gutcheck-score-mvp.git"}]},"project_name":"BrowserStack Sample","name":"bstack-demo","build_identifier":"#1","build_run_identifier":null,"description":"","tags":["You can set a custom Build Tag here"],"failed_tests_rerun":false,"accessibility":{"settings":{}},"framework_details":{"frameworkName":"Playwright","frameworkVersion":"1.54.2","sdkVersion":"1.40.6","cliVersion":"1.6.6","language":"javascript","testFramework":{"name":"Playwright","version":"1.54.2"}},"product_map":{"observability":true,"accessibility":null,"percy":false,"automate":true,"app_automate":false},"browserstackAutomation":true,"test_orchestration":{}}
2025-08-05T18:43:27.249Z CLI info  [coreylipsey_CicmlG]   [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:43:27.652Z CLI info [testhub:module]  [coreylipsey_CicmlG]   [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  startBuild: response=edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j
2025-08-05T18:43:27.656Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://api.browserstack.com
2025-08-05T18:43:36.655Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making GET request to https://hub.browserstack.com
2025-08-05T18:43:36.750Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making GET request to https://hub-use.browserstack.com
2025-08-05T18:43:36.751Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making GET request to https://hub-usw.browserstack.com
2025-08-05T18:43:36.752Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making GET request to https://hub-euw.browserstack.com
2025-08-05T18:43:41.434Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '01dfbb45-ddb5-4f49-81ab-cf14f1f2a0a0',
    name: 'should handle form inputs consistently across browsers',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for form inputs (radio buttons, checkboxes, text inputs)\n' +
        "    const inputs = page.locator('input, textarea, select');\n" +
        '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
        '      const input = inputs.nth(i);\n' +
        '\n' +
        '      // Check input is visible and interactive\n' +
        '      await (0, _test.expect)(input).toBeVisible();\n' +
        "      const inputType = await input.getAttribute('type');\n" +
        "      if (inputType === 'radio' || inputType === 'checkbox') {\n" +
        '        // Test radio/checkbox functionality\n' +
        '        await input.click();\n' +
        '\n' +
        '        // Verify selection state\n' +
        '        const isChecked = await input.isChecked();\n' +
        '        (0, _test.expect)(isChecked).toBe(true);\n' +
        "      } else if (inputType === 'text' || inputType === 'textarea') {\n" +
        '        // Test text input functionality\n' +
        "        await input.fill('Test input');\n" +
        '        const value = await input.inputValue();\n' +
        "        (0, _test.expect)(value).toBe('Test input');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form inputs consistently across browsers',
    scope: 'should handle form inputs consistently across browsers',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:43:41.354Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form inputs consistently across browsers'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:43:41.445Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '1f0dae87-652c-4acd-8b54-719d4f1cabbf',
    name: 'should display assessment questions consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Wait for assessment content to load\n' +
        `    await page.waitForSelector('[data-testid="assessment-question"], .question, h1, h2', {\n` +
        '      timeout: 10000\n' +
        '    });\n' +
        '\n' +
        '    // Check that questions are visible and properly styled\n' +
        `    const questions = page.locator('[data-testid="assessment-question"], .question, h1, h2').filter({\n` +
        '      hasText: /./\n' +
        '    });\n' +
        '    (0, _test.expect)(await questions.count()).toBeGreaterThan(0);\n' +
        '    for (let i = 0; i < Math.min(await questions.count(), 3); i++) {\n' +
        '      const question = questions.nth(i);\n' +
        '\n' +
        '      // Check visibility\n' +
        '      await (0, _test.expect)(question).toBeVisible();\n' +
        '\n' +
        '      // Check styling\n' +
        '      const styles = await question.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          fontSize: computed.fontSize,\n' +
        '          fontWeight: computed.fontWeight,\n' +
        '          color: computed.color,\n' +
        '          lineHeight: computed.lineHeight\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have readable text styling\n' +
        '      (0, _test.expect)(parseFloat(styles.fontSize)).toBeGreaterThan(12);\n' +
        "      (0, _test.expect)(styles.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display assessment questions consistently',
    scope: 'should display assessment questions consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:43:41.381Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should display assessment questions consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:43:41.447Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'b6215b3c-79e2-435d-a59e-ef375623442d',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '01dfbb45-ddb5-4f49-81ab-cf14f1f2a0a0',
    body: { lang: 'node', code: null },
    scope: 'should handle form inputs consistently across browsers',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    started_at: '2025-08-05T18:43:41.413Z'
  }
} to 36431:0
2025-08-05T18:43:41.460Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '95ef6214-5905-40e7-9b86-45b6d41db344',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '1f0dae87-652c-4acd-8b54-719d4f1cabbf',
    body: { lang: 'node', code: null },
    scope: 'should display assessment questions consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    started_at: '2025-08-05T18:43:41.455Z'
  }
} to 36431:0
2025-08-05T18:43:41.489Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '44fdf9c7-6576-4e6f-90a0-2f6c046e2678',
    name: 'should maintain consistent button styling and behavior',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        `    const buttons = page.locator('button, [role="button"], input[type="submit"]');\n` +
        '    for (let i = 0; i < Math.min(await buttons.count(), 3); i++) {\n' +
        '      const button = buttons.nth(i);\n' +
        '\n' +
        '      // Check button styling\n' +
        '      const styles = await button.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          backgroundColor: computed.backgroundColor,\n' +
        '          color: computed.color,\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding,\n' +
        '          cursor: computed.cursor\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have proper button styling\n' +
        "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '\n' +
        '      // Check button text is readable\n' +
        '      const buttonText = await button.textContent();\n' +
        '      if (buttonText && buttonText.trim()) {\n' +
        '        (0, _test.expect)(buttonText.trim().length).toBeGreaterThan(0);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent button styling and behavior',
    scope: 'should maintain consistent button styling and behavior',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:43:41.468Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent button styling and behavior'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:43:41.500Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '604605af-20b2-48c6-80bb-a61852192e15',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '44fdf9c7-6576-4e6f-90a0-2f6c046e2678',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent button styling and behavior',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    started_at: '2025-08-05T18:43:41.479Z'
  }
} to 36431:0
2025-08-05T18:43:41.662Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '01dfbb45-ddb5-4f49-81ab-cf14f1f2a0a0',
      name: 'should handle form inputs consistently across browsers',
      body: [Object],
      identifier: 'should handle form inputs consistently across browsers',
      scope: 'should handle form inputs consistently across browsers',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:43:41.354Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '1f0dae87-652c-4acd-8b54-719d4f1cabbf',
      name: 'should display assessment questions consistently',
      body: [Object],
      identifier: 'should display assessment questions consistently',
      scope: 'should display assessment questions consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:43:41.381Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'b6215b3c-79e2-435d-a59e-ef375623442d',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '01dfbb45-ddb5-4f49-81ab-cf14f1f2a0a0',
      body: [Object],
      scope: 'should handle form inputs consistently across browsers',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      started_at: '2025-08-05T18:43:41.413Z'
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '95ef6214-5905-40e7-9b86-45b6d41db344',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '1f0dae87-652c-4acd-8b54-719d4f1cabbf',
      body: [Object],
      scope: 'should display assessment questions consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      started_at: '2025-08-05T18:43:41.455Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '44fdf9c7-6576-4e6f-90a0-2f6c046e2678',
      name: 'should maintain consistent button styling and behavior',
      body: [Object],
      identifier: 'should maintain consistent button styling and behavior',
      scope: 'should maintain consistent button styling and behavior',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:43:41.468Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '604605af-20b2-48c6-80bb-a61852192e15',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '44fdf9c7-6576-4e6f-90a0-2f6c046e2678',
      body: [Object],
      scope: 'should maintain consistent button styling and behavior',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      started_at: '2025-08-05T18:43:41.479Z'
    }
  }
] to 36431:0
2025-08-05T18:43:41.664Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:43:51.530Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:43:41.417Z',
      uuid: 'b6215b3c-79e2-435d-a59e-ef375623442d',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'b6215b3c-79e2-435d-a59e-ef375623442d'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:43:41.479Z',
      uuid: 'b6215b3c-79e2-435d-a59e-ef375623442d',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'b6215b3c-79e2-435d-a59e-ef375623442d'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:43:41.624Z',
      uuid: 'b6215b3c-79e2-435d-a59e-ef375623442d',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'b6215b3c-79e2-435d-a59e-ef375623442d'
    }
  ]
} to 36431:0
2025-08-05T18:43:51.556Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'b6215b3c-79e2-435d-a59e-ef375623442d',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '01dfbb45-ddb5-4f49-81ab-cf14f1f2a0a0',
    body: { lang: 'node', code: null },
    scope: 'should handle form inputs consistently across browsers',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    started_at: '2025-08-05T18:43:41.413Z',
    finished_at: '2025-08-05T18:43:51.493Z'
  }
} to 36431:0
2025-08-05T18:43:51.640Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '01dfbb45-ddb5-4f49-81ab-cf14f1f2a0a0',
    name: 'should handle form inputs consistently across browsers',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for form inputs (radio buttons, checkboxes, text inputs)\n' +
        "    const inputs = page.locator('input, textarea, select');\n" +
        '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
        '      const input = inputs.nth(i);\n' +
        '\n' +
        '      // Check input is visible and interactive\n' +
        '      await (0, _test.expect)(input).toBeVisible();\n' +
        "      const inputType = await input.getAttribute('type');\n" +
        "      if (inputType === 'radio' || inputType === 'checkbox') {\n" +
        '        // Test radio/checkbox functionality\n' +
        '        await input.click();\n' +
        '\n' +
        '        // Verify selection state\n' +
        '        const isChecked = await input.isChecked();\n' +
        '        (0, _test.expect)(isChecked).toBe(true);\n' +
        "      } else if (inputType === 'text' || inputType === 'textarea') {\n" +
        '        // Test text input functionality\n' +
        "        await input.fill('Test input');\n" +
        '        const value = await input.inputValue();\n' +
        "        (0, _test.expect)(value).toBe('Test input');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form inputs consistently across browsers',
    scope: 'should handle form inputs consistently across browsers',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 60,
    started_at: '2025-08-05T18:43:41.354Z',
    finished_at: '2025-08-05T18:43:41.414Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form inputs consistently across browsers'
    },
    hooks: [ 'b6215b3c-79e2-435d-a59e-ef375623442d' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:43:51.641Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:43:51.522Z',
      uuid: '01dfbb45-ddb5-4f49-81ab-cf14f1f2a0a0',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '01dfbb45-ddb5-4f49-81ab-cf14f1f2a0a0'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:43:51.523Z',
      uuid: '01dfbb45-ddb5-4f49-81ab-cf14f1f2a0a0',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '01dfbb45-ddb5-4f49-81ab-cf14f1f2a0a0'
    }
  ]
} to 36431:0
2025-08-05T18:43:51.644Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:43:41.483Z',
      uuid: '604605af-20b2-48c6-80bb-a61852192e15',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '604605af-20b2-48c6-80bb-a61852192e15'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:43:41.517Z',
      uuid: '604605af-20b2-48c6-80bb-a61852192e15',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '604605af-20b2-48c6-80bb-a61852192e15'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:43:41.672Z',
      uuid: '604605af-20b2-48c6-80bb-a61852192e15',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '604605af-20b2-48c6-80bb-a61852192e15'
    }
  ]
} to 36431:0
2025-08-05T18:43:51.665Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'b6215b3c-79e2-435d-a59e-ef375623442d',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '01dfbb45-ddb5-4f49-81ab-cf14f1f2a0a0',
      body: [Object],
      scope: 'should handle form inputs consistently across browsers',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      started_at: '2025-08-05T18:43:41.413Z',
      finished_at: '2025-08-05T18:43:51.493Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '01dfbb45-ddb5-4f49-81ab-cf14f1f2a0a0',
      name: 'should handle form inputs consistently across browsers',
      body: [Object],
      identifier: 'should handle form inputs consistently across browsers',
      scope: 'should handle form inputs consistently across browsers',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 60,
      started_at: '2025-08-05T18:43:41.354Z',
      finished_at: '2025-08-05T18:43:41.414Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] }
] to 36431:0
2025-08-05T18:43:51.667Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:43:51.677Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '604605af-20b2-48c6-80bb-a61852192e15',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '44fdf9c7-6576-4e6f-90a0-2f6c046e2678',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent button styling and behavior',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    started_at: '2025-08-05T18:43:41.479Z',
    finished_at: '2025-08-05T18:43:51.553Z'
  }
} to 36431:0
2025-08-05T18:43:51.727Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '44fdf9c7-6576-4e6f-90a0-2f6c046e2678',
    name: 'should maintain consistent button styling and behavior',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        `    const buttons = page.locator('button, [role="button"], input[type="submit"]');\n` +
        '    for (let i = 0; i < Math.min(await buttons.count(), 3); i++) {\n' +
        '      const button = buttons.nth(i);\n' +
        '\n' +
        '      // Check button styling\n' +
        '      const styles = await button.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          backgroundColor: computed.backgroundColor,\n' +
        '          color: computed.color,\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding,\n' +
        '          cursor: computed.cursor\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have proper button styling\n' +
        "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '\n' +
        '      // Check button text is readable\n' +
        '      const buttonText = await button.textContent();\n' +
        '      if (buttonText && buttonText.trim()) {\n' +
        '        (0, _test.expect)(buttonText.trim().length).toBeGreaterThan(0);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent button styling and behavior',
    scope: 'should maintain consistent button styling and behavior',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 143,
    started_at: '2025-08-05T18:43:41.468Z',
    finished_at: '2025-08-05T18:43:41.611Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent button styling and behavior'
    },
    hooks: [ '604605af-20b2-48c6-80bb-a61852192e15' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:43:51.729Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:43:51.668Z',
      uuid: '44fdf9c7-6576-4e6f-90a0-2f6c046e2678',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '44fdf9c7-6576-4e6f-90a0-2f6c046e2678'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:43:51.669Z',
      uuid: '44fdf9c7-6576-4e6f-90a0-2f6c046e2678',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '44fdf9c7-6576-4e6f-90a0-2f6c046e2678'
    }
  ]
} to 36431:0
2025-08-05T18:43:53.665Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '604605af-20b2-48c6-80bb-a61852192e15',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '44fdf9c7-6576-4e6f-90a0-2f6c046e2678',
      body: [Object],
      scope: 'should maintain consistent button styling and behavior',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      started_at: '2025-08-05T18:43:41.479Z',
      finished_at: '2025-08-05T18:43:51.553Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '44fdf9c7-6576-4e6f-90a0-2f6c046e2678',
      name: 'should maintain consistent button styling and behavior',
      body: [Object],
      identifier: 'should maintain consistent button styling and behavior',
      scope: 'should maintain consistent button styling and behavior',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 143,
      started_at: '2025-08-05T18:43:41.468Z',
      finished_at: '2025-08-05T18:43:41.611Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:43:53.667Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:43:54.006Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:43:41.459Z',
      uuid: '95ef6214-5905-40e7-9b86-45b6d41db344',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '95ef6214-5905-40e7-9b86-45b6d41db344'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:43:41.510Z',
      uuid: '95ef6214-5905-40e7-9b86-45b6d41db344',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '95ef6214-5905-40e7-9b86-45b6d41db344'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:43:41.667Z',
      uuid: '95ef6214-5905-40e7-9b86-45b6d41db344',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '95ef6214-5905-40e7-9b86-45b6d41db344'
    }
  ]
} to 36431:0
2025-08-05T18:43:54.021Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '95ef6214-5905-40e7-9b86-45b6d41db344',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '1f0dae87-652c-4acd-8b54-719d4f1cabbf',
    body: { lang: 'node', code: null },
    scope: 'should display assessment questions consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    started_at: '2025-08-05T18:43:41.455Z',
    finished_at: '2025-08-05T18:43:53.990Z'
  }
} to 36431:0
2025-08-05T18:43:54.045Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '1f0dae87-652c-4acd-8b54-719d4f1cabbf',
    name: 'should display assessment questions consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Wait for assessment content to load\n' +
        `    await page.waitForSelector('[data-testid="assessment-question"], .question, h1, h2', {\n` +
        '      timeout: 10000\n' +
        '    });\n' +
        '\n' +
        '    // Check that questions are visible and properly styled\n' +
        `    const questions = page.locator('[data-testid="assessment-question"], .question, h1, h2').filter({\n` +
        '      hasText: /./\n' +
        '    });\n' +
        '    (0, _test.expect)(await questions.count()).toBeGreaterThan(0);\n' +
        '    for (let i = 0; i < Math.min(await questions.count(), 3); i++) {\n' +
        '      const question = questions.nth(i);\n' +
        '\n' +
        '      // Check visibility\n' +
        '      await (0, _test.expect)(question).toBeVisible();\n' +
        '\n' +
        '      // Check styling\n' +
        '      const styles = await question.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          fontSize: computed.fontSize,\n' +
        '          fontWeight: computed.fontWeight,\n' +
        '          color: computed.color,\n' +
        '          lineHeight: computed.lineHeight\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have readable text styling\n' +
        '      (0, _test.expect)(parseFloat(styles.fontSize)).toBeGreaterThan(12);\n' +
        "      (0, _test.expect)(styles.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display assessment questions consistently',
    scope: 'should display assessment questions consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 73,
    started_at: '2025-08-05T18:43:41.381Z',
    finished_at: '2025-08-05T18:43:41.454Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should display assessment questions consistently'
    },
    hooks: [ '95ef6214-5905-40e7-9b86-45b6d41db344' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:43:54.046Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:43:54.014Z',
      uuid: '1f0dae87-652c-4acd-8b54-719d4f1cabbf',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '1f0dae87-652c-4acd-8b54-719d4f1cabbf'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:43:54.015Z',
      uuid: '1f0dae87-652c-4acd-8b54-719d4f1cabbf',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '1f0dae87-652c-4acd-8b54-719d4f1cabbf'
    }
  ]
} to 36431:0
2025-08-05T18:43:55.051Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '9a9f9372-e31a-4467-8cc3-d734a9b6097e',
    name: 'should handle responsive design for assessment flow',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    const viewports = [{\n' +
        '      width: 375,\n' +
        '      height: 667,\n' +
        "      name: 'Mobile'\n" +
        '    }, {\n' +
        '      width: 768,\n' +
        '      height: 1024,\n' +
        "      name: 'Tablet'\n" +
        '    }, {\n' +
        '      width: 1024,\n' +
        '      height: 768,\n' +
        "      name: 'Desktop'\n" +
        '    }];\n' +
        '    for (const viewport of viewports) {\n' +
        '      await page.setViewportSize({\n' +
        '        width: viewport.width,\n' +
        '        height: viewport.height\n' +
        '      });\n' +
        '      await page.waitForTimeout(500);\n' +
        '\n' +
        '      // Check that assessment content is properly contained\n' +
        `      const container = page.locator('main, .container, .assessment-container, [role="main"]').first();\n` +
        '      if ((await container.count()) > 0) {\n' +
        '        const isVisible = await container.isVisible();\n' +
        '        (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        '        // Check no horizontal overflow\n' +
        '        const overflow = await page.evaluate(() => {\n' +
        '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
        '        });\n' +
        '        (0, _test.expect)(overflow).toBe(true);\n' +
        '      }\n' +
        '\n' +
        '      // Check that form elements are still accessible\n' +
        "      const inputs = page.locator('input, textarea, select');\n" +
        '      if ((await inputs.count()) > 0) {\n' +
        '        const firstInput = inputs.first();\n' +
        '        await (0, _test.expect)(firstInput).toBeVisible();\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle responsive design for assessment flow',
    scope: 'should handle responsive design for assessment flow',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:43:55.022Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle responsive design for assessment flow'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:43:55.090Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '0a560f42-eed3-42b7-9965-fbaae1b753b8',
    name: 'should handle form validation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for submit buttons\n' +
        `    const submitButtons = page.locator('button[type="submit"], input[type="submit"], button:has-text("Submit"), button:has-text("Next")');\n` +
        '    if ((await submitButtons.count()) > 0) {\n' +
        '      const submitButton = submitButtons.first();\n' +
        '\n' +
        '      // Try to submit without filling required fields\n' +
        '      await submitButton.click();\n' +
        '\n' +
        '      // Wait for potential validation messages\n' +
        '      await page.waitForTimeout(1000);\n' +
        '\n' +
        '      // Check for validation messages\n' +
        `      const errorMessages = page.locator('.error, .validation-error, [role="alert"], .text-red-500, .text-red-600');\n` +
        '\n' +
        '      // If there are validation errors, they should be visible and styled consistently\n' +
        '      if ((await errorMessages.count()) > 0) {\n' +
        '        for (let i = 0; i < Math.min(await errorMessages.count(), 3); i++) {\n' +
        '          const error = errorMessages.nth(i);\n' +
        '          await (0, _test.expect)(error).toBeVisible();\n' +
        '\n' +
        '          // Check error styling\n' +
        '          const color = await error.evaluate(el => {\n' +
        '            return window.getComputedStyle(el).color;\n' +
        '          });\n' +
        '\n' +
        '          // Should have error color styling\n' +
        '          (0, _test.expect)(color).toMatch(/rgb\\(239, 68, 68\\)|rgb\\(220, 38, 38\\)|red/);\n' +
        '        }\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form validation consistently',
    scope: 'should handle form validation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:43:55.050Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form validation consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:43:55.093Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '9995976c-ff48-44a8-af66-7ebf1fb533b9',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '0a560f42-eed3-42b7-9965-fbaae1b753b8',
    body: { lang: 'node', code: null },
    scope: 'should handle form validation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    started_at: '2025-08-05T18:43:55.059Z'
  }
} to 36431:0
2025-08-05T18:43:55.094Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '3ee4fc29-a53e-4fa3-9eac-fbca5d961e65',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '9a9f9372-e31a-4467-8cc3-d734a9b6097e',
    body: { lang: 'node', code: null },
    scope: 'should handle responsive design for assessment flow',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    started_at: '2025-08-05T18:43:55.054Z'
  }
} to 36431:0
2025-08-05T18:43:55.667Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '95ef6214-5905-40e7-9b86-45b6d41db344',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '1f0dae87-652c-4acd-8b54-719d4f1cabbf',
      body: [Object],
      scope: 'should display assessment questions consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      started_at: '2025-08-05T18:43:41.455Z',
      finished_at: '2025-08-05T18:43:53.990Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '1f0dae87-652c-4acd-8b54-719d4f1cabbf',
      name: 'should display assessment questions consistently',
      body: [Object],
      identifier: 'should display assessment questions consistently',
      scope: 'should display assessment questions consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 73,
      started_at: '2025-08-05T18:43:41.381Z',
      finished_at: '2025-08-05T18:43:41.454Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '9a9f9372-e31a-4467-8cc3-d734a9b6097e',
      name: 'should handle responsive design for assessment flow',
      body: [Object],
      identifier: 'should handle responsive design for assessment flow',
      scope: 'should handle responsive design for assessment flow',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:43:55.022Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '0a560f42-eed3-42b7-9965-fbaae1b753b8',
      name: 'should handle form validation consistently',
      body: [Object],
      identifier: 'should handle form validation consistently',
      scope: 'should handle form validation consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:43:55.050Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '9995976c-ff48-44a8-af66-7ebf1fb533b9',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '0a560f42-eed3-42b7-9965-fbaae1b753b8',
      body: [Object],
      scope: 'should handle form validation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      started_at: '2025-08-05T18:43:55.059Z'
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '3ee4fc29-a53e-4fa3-9eac-fbca5d961e65',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '9a9f9372-e31a-4467-8cc3-d734a9b6097e',
      body: [Object],
      scope: 'should handle responsive design for assessment flow',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      started_at: '2025-08-05T18:43:55.054Z'
    }
  }
] to 36431:0
2025-08-05T18:43:55.668Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:43:57.444Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '682f2896-feae-4311-bf37-6a181d0698e0',
    name: 'should maintain consistent loading states',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for loading indicators\n' +
        `    const loadingIndicators = page.locator('.loading, .spinner, [aria-busy="true"], .animate-spin');\n` +
        '    if ((await loadingIndicators.count()) > 0) {\n' +
        '      for (let i = 0; i < Math.min(await loadingIndicators.count(), 3); i++) {\n' +
        '        const loader = loadingIndicators.nth(i);\n' +
        '\n' +
        '        // Check loading indicator is visible\n' +
        '        await (0, _test.expect)(loader).toBeVisible();\n' +
        '\n' +
        '        // Check it has proper styling\n' +
        '        const styles = await loader.evaluate(el => {\n' +
        '          const computed = window.getComputedStyle(el);\n' +
        '          return {\n' +
        '            display: computed.display,\n' +
        '            visibility: computed.visibility\n' +
        '          };\n' +
        '        });\n' +
        "        (0, _test.expect)(styles.display).not.toBe('none');\n" +
        "        (0, _test.expect)(styles.visibility).not.toBe('hidden');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent loading states',
    scope: 'should maintain consistent loading states',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:43:57.419Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent loading states'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:43:57.446Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '7847aaa7-eba8-4f52-931f-89b7cad2cdb9',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '682f2896-feae-4311-bf37-6a181d0698e0',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent loading states',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    started_at: '2025-08-05T18:43:57.426Z'
  }
} to 36431:0
2025-08-05T18:43:57.666Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '682f2896-feae-4311-bf37-6a181d0698e0',
      name: 'should maintain consistent loading states',
      body: [Object],
      identifier: 'should maintain consistent loading states',
      scope: 'should maintain consistent loading states',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:43:57.419Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '7847aaa7-eba8-4f52-931f-89b7cad2cdb9',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '682f2896-feae-4311-bf37-6a181d0698e0',
      body: [Object],
      scope: 'should maintain consistent loading states',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      started_at: '2025-08-05T18:43:57.426Z'
    }
  }
] to 36431:0
2025-08-05T18:43:57.667Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:44:04.094Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:43:55.057Z',
      uuid: '3ee4fc29-a53e-4fa3-9eac-fbca5d961e65',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '3ee4fc29-a53e-4fa3-9eac-fbca5d961e65'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:43:55.092Z',
      uuid: '3ee4fc29-a53e-4fa3-9eac-fbca5d961e65',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '3ee4fc29-a53e-4fa3-9eac-fbca5d961e65'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:43:55.127Z',
      uuid: '3ee4fc29-a53e-4fa3-9eac-fbca5d961e65',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '3ee4fc29-a53e-4fa3-9eac-fbca5d961e65'
    }
  ]
} to 36431:0
2025-08-05T18:44:04.106Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '3ee4fc29-a53e-4fa3-9eac-fbca5d961e65',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '9a9f9372-e31a-4467-8cc3-d734a9b6097e',
    body: { lang: 'node', code: null },
    scope: 'should handle responsive design for assessment flow',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    started_at: '2025-08-05T18:43:55.054Z',
    finished_at: '2025-08-05T18:44:04.087Z'
  }
} to 36431:0
2025-08-05T18:44:04.144Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '9a9f9372-e31a-4467-8cc3-d734a9b6097e',
    name: 'should handle responsive design for assessment flow',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    const viewports = [{\n' +
        '      width: 375,\n' +
        '      height: 667,\n' +
        "      name: 'Mobile'\n" +
        '    }, {\n' +
        '      width: 768,\n' +
        '      height: 1024,\n' +
        "      name: 'Tablet'\n" +
        '    }, {\n' +
        '      width: 1024,\n' +
        '      height: 768,\n' +
        "      name: 'Desktop'\n" +
        '    }];\n' +
        '    for (const viewport of viewports) {\n' +
        '      await page.setViewportSize({\n' +
        '        width: viewport.width,\n' +
        '        height: viewport.height\n' +
        '      });\n' +
        '      await page.waitForTimeout(500);\n' +
        '\n' +
        '      // Check that assessment content is properly contained\n' +
        `      const container = page.locator('main, .container, .assessment-container, [role="main"]').first();\n` +
        '      if ((await container.count()) > 0) {\n' +
        '        const isVisible = await container.isVisible();\n' +
        '        (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        '        // Check no horizontal overflow\n' +
        '        const overflow = await page.evaluate(() => {\n' +
        '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
        '        });\n' +
        '        (0, _test.expect)(overflow).toBe(true);\n' +
        '      }\n' +
        '\n' +
        '      // Check that form elements are still accessible\n' +
        "      const inputs = page.locator('input, textarea, select');\n" +
        '      if ((await inputs.count()) > 0) {\n' +
        '        const firstInput = inputs.first();\n' +
        '        await (0, _test.expect)(firstInput).toBeVisible();\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle responsive design for assessment flow',
    scope: 'should handle responsive design for assessment flow',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 54,
    started_at: '2025-08-05T18:43:55.022Z',
    finished_at: '2025-08-05T18:43:55.076Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle responsive design for assessment flow'
    },
    hooks: [ '3ee4fc29-a53e-4fa3-9eac-fbca5d961e65' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:04.146Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:04.111Z',
      uuid: '9a9f9372-e31a-4467-8cc3-d734a9b6097e',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '9a9f9372-e31a-4467-8cc3-d734a9b6097e'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:04.112Z',
      uuid: '9a9f9372-e31a-4467-8cc3-d734a9b6097e',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '9a9f9372-e31a-4467-8cc3-d734a9b6097e'
    }
  ]
} to 36431:0
2025-08-05T18:44:05.670Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '3ee4fc29-a53e-4fa3-9eac-fbca5d961e65',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '9a9f9372-e31a-4467-8cc3-d734a9b6097e',
      body: [Object],
      scope: 'should handle responsive design for assessment flow',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      started_at: '2025-08-05T18:43:55.054Z',
      finished_at: '2025-08-05T18:44:04.087Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '9a9f9372-e31a-4467-8cc3-d734a9b6097e',
      name: 'should handle responsive design for assessment flow',
      body: [Object],
      identifier: 'should handle responsive design for assessment flow',
      scope: 'should handle responsive design for assessment flow',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 54,
      started_at: '2025-08-05T18:43:55.022Z',
      finished_at: '2025-08-05T18:43:55.076Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:44:05.671Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:44:06.913Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:43:57.429Z',
      uuid: '7847aaa7-eba8-4f52-931f-89b7cad2cdb9',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '7847aaa7-eba8-4f52-931f-89b7cad2cdb9'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:43:57.454Z',
      uuid: '7847aaa7-eba8-4f52-931f-89b7cad2cdb9',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '7847aaa7-eba8-4f52-931f-89b7cad2cdb9'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:43:57.482Z',
      uuid: '7847aaa7-eba8-4f52-931f-89b7cad2cdb9',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '7847aaa7-eba8-4f52-931f-89b7cad2cdb9'
    }
  ]
} to 36431:0
2025-08-05T18:44:06.919Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '7847aaa7-eba8-4f52-931f-89b7cad2cdb9',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '682f2896-feae-4311-bf37-6a181d0698e0',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent loading states',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    started_at: '2025-08-05T18:43:57.426Z',
    finished_at: '2025-08-05T18:44:06.905Z'
  }
} to 36431:0
2025-08-05T18:44:06.952Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '682f2896-feae-4311-bf37-6a181d0698e0',
    name: 'should maintain consistent loading states',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for loading indicators\n' +
        `    const loadingIndicators = page.locator('.loading, .spinner, [aria-busy="true"], .animate-spin');\n` +
        '    if ((await loadingIndicators.count()) > 0) {\n' +
        '      for (let i = 0; i < Math.min(await loadingIndicators.count(), 3); i++) {\n' +
        '        const loader = loadingIndicators.nth(i);\n' +
        '\n' +
        '        // Check loading indicator is visible\n' +
        '        await (0, _test.expect)(loader).toBeVisible();\n' +
        '\n' +
        '        // Check it has proper styling\n' +
        '        const styles = await loader.evaluate(el => {\n' +
        '          const computed = window.getComputedStyle(el);\n' +
        '          return {\n' +
        '            display: computed.display,\n' +
        '            visibility: computed.visibility\n' +
        '          };\n' +
        '        });\n' +
        "        (0, _test.expect)(styles.display).not.toBe('none');\n" +
        "        (0, _test.expect)(styles.visibility).not.toBe('hidden');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent loading states',
    scope: 'should maintain consistent loading states',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 40,
    started_at: '2025-08-05T18:43:57.419Z',
    finished_at: '2025-08-05T18:43:57.459Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent loading states'
    },
    hooks: [ '7847aaa7-eba8-4f52-931f-89b7cad2cdb9' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:06.952Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:06.925Z',
      uuid: '682f2896-feae-4311-bf37-6a181d0698e0',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '682f2896-feae-4311-bf37-6a181d0698e0'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:06.926Z',
      uuid: '682f2896-feae-4311-bf37-6a181d0698e0',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '682f2896-feae-4311-bf37-6a181d0698e0'
    }
  ]
} to 36431:0
2025-08-05T18:44:07.210Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'e2b2abcd-47f1-4e15-8bbd-487d26e7a4e9',
    name: 'should handle navigation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test navigation buttons/links\n' +
        `    const navButtons = page.locator('a, button, [role="link"]').filter({\n` +
        '      hasText: /back|next|previous|continue/i\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await navButtons.count(), 3); i++) {\n' +
        '      const navButton = navButtons.nth(i);\n' +
        '\n' +
        '      // Check navigation element is visible and clickable\n' +
        '      await (0, _test.expect)(navButton).toBeVisible();\n' +
        '      const styles = await navButton.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          cursor: computed.cursor,\n' +
        '          pointerEvents: computed.pointerEvents\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should be clickable\n' +
        "      (0, _test.expect)(['pointer', 'default']).toContain(styles.cursor);\n" +
        "      (0, _test.expect)(styles.pointerEvents).not.toBe('none');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle navigation consistently',
    scope: 'should handle navigation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:44:07.193Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle navigation consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:07.216Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '3abc6384-e4b7-466f-a587-5c48ad9b5112',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'e2b2abcd-47f1-4e15-8bbd-487d26e7a4e9',
    body: { lang: 'node', code: null },
    scope: 'should handle navigation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    started_at: '2025-08-05T18:44:07.209Z'
  }
} to 36431:0
2025-08-05T18:44:07.672Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '7847aaa7-eba8-4f52-931f-89b7cad2cdb9',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '682f2896-feae-4311-bf37-6a181d0698e0',
      body: [Object],
      scope: 'should maintain consistent loading states',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      started_at: '2025-08-05T18:43:57.426Z',
      finished_at: '2025-08-05T18:44:06.905Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '682f2896-feae-4311-bf37-6a181d0698e0',
      name: 'should maintain consistent loading states',
      body: [Object],
      identifier: 'should maintain consistent loading states',
      scope: 'should maintain consistent loading states',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 40,
      started_at: '2025-08-05T18:43:57.419Z',
      finished_at: '2025-08-05T18:43:57.459Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'e2b2abcd-47f1-4e15-8bbd-487d26e7a4e9',
      name: 'should handle navigation consistently',
      body: [Object],
      identifier: 'should handle navigation consistently',
      scope: 'should handle navigation consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:44:07.193Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '3abc6384-e4b7-466f-a587-5c48ad9b5112',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'e2b2abcd-47f1-4e15-8bbd-487d26e7a4e9',
      body: [Object],
      scope: 'should handle navigation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      started_at: '2025-08-05T18:44:07.209Z'
    }
  }
] to 36431:0
2025-08-05T18:44:07.673Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:44:10.006Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '186d5af1-3fe7-4ce0-880b-bebab9b97cdf',
    name: 'should connect to BrowserStack and load the homepage',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to the homepage\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-connection-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load the homepage',
    scope: 'should connect to BrowserStack and load the homepage',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:44:09.987Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should connect to BrowserStack and load the homepage'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:11.673Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '186d5af1-3fe7-4ce0-880b-bebab9b97cdf',
      name: 'should connect to BrowserStack and load the homepage',
      body: [Object],
      identifier: 'should connect to BrowserStack and load the homepage',
      scope: 'should connect to BrowserStack and load the homepage',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:44:09.987Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 36431:0
2025-08-05T18:44:11.674Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:44:12.258Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:43:55.062Z',
      uuid: '9995976c-ff48-44a8-af66-7ebf1fb533b9',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '9995976c-ff48-44a8-af66-7ebf1fb533b9'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:43:55.099Z',
      uuid: '9995976c-ff48-44a8-af66-7ebf1fb533b9',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '9995976c-ff48-44a8-af66-7ebf1fb533b9'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:43:55.131Z',
      uuid: '9995976c-ff48-44a8-af66-7ebf1fb533b9',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '9995976c-ff48-44a8-af66-7ebf1fb533b9'
    }
  ]
} to 36431:0
2025-08-05T18:44:12.266Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '9995976c-ff48-44a8-af66-7ebf1fb533b9',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '0a560f42-eed3-42b7-9965-fbaae1b753b8',
    body: { lang: 'node', code: null },
    scope: 'should handle form validation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    started_at: '2025-08-05T18:43:55.059Z',
    finished_at: '2025-08-05T18:44:12.254Z'
  }
} to 36431:0
2025-08-05T18:44:12.310Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '0a560f42-eed3-42b7-9965-fbaae1b753b8',
    name: 'should handle form validation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for submit buttons\n' +
        `    const submitButtons = page.locator('button[type="submit"], input[type="submit"], button:has-text("Submit"), button:has-text("Next")');\n` +
        '    if ((await submitButtons.count()) > 0) {\n' +
        '      const submitButton = submitButtons.first();\n' +
        '\n' +
        '      // Try to submit without filling required fields\n' +
        '      await submitButton.click();\n' +
        '\n' +
        '      // Wait for potential validation messages\n' +
        '      await page.waitForTimeout(1000);\n' +
        '\n' +
        '      // Check for validation messages\n' +
        `      const errorMessages = page.locator('.error, .validation-error, [role="alert"], .text-red-500, .text-red-600');\n` +
        '\n' +
        '      // If there are validation errors, they should be visible and styled consistently\n' +
        '      if ((await errorMessages.count()) > 0) {\n' +
        '        for (let i = 0; i < Math.min(await errorMessages.count(), 3); i++) {\n' +
        '          const error = errorMessages.nth(i);\n' +
        '          await (0, _test.expect)(error).toBeVisible();\n' +
        '\n' +
        '          // Check error styling\n' +
        '          const color = await error.evaluate(el => {\n' +
        '            return window.getComputedStyle(el).color;\n' +
        '          });\n' +
        '\n' +
        '          // Should have error color styling\n' +
        '          (0, _test.expect)(color).toMatch(/rgb\\(239, 68, 68\\)|rgb\\(220, 38, 38\\)|red/);\n' +
        '        }\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form validation consistently',
    scope: 'should handle form validation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 56,
    started_at: '2025-08-05T18:43:55.050Z',
    finished_at: '2025-08-05T18:43:55.106Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form validation consistently'
    },
    hooks: [ '9995976c-ff48-44a8-af66-7ebf1fb533b9' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:12.313Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:12.286Z',
      uuid: '0a560f42-eed3-42b7-9965-fbaae1b753b8',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '0a560f42-eed3-42b7-9965-fbaae1b753b8'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:12.287Z',
      uuid: '0a560f42-eed3-42b7-9965-fbaae1b753b8',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '0a560f42-eed3-42b7-9965-fbaae1b753b8'
    }
  ]
} to 36431:0
2025-08-05T18:44:13.673Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '9995976c-ff48-44a8-af66-7ebf1fb533b9',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '0a560f42-eed3-42b7-9965-fbaae1b753b8',
      body: [Object],
      scope: 'should handle form validation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      started_at: '2025-08-05T18:43:55.059Z',
      finished_at: '2025-08-05T18:44:12.254Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '0a560f42-eed3-42b7-9965-fbaae1b753b8',
      name: 'should handle form validation consistently',
      body: [Object],
      identifier: 'should handle form validation consistently',
      scope: 'should handle form validation consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 56,
      started_at: '2025-08-05T18:43:55.050Z',
      finished_at: '2025-08-05T18:43:55.106Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:44:13.674Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:44:15.259Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '3fdb4fba-1b76-4fc0-99af-7eb1a77446db',
    name: 'should display consistent branding colors',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for any elements with Gutcheck brand colors\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    if ((await gutcheckElements.count()) > 0) {\n' +
        '      console.log(`🎨 Found ${await gutcheckElements.count()} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display consistent branding colors',
    scope: 'should display consistent branding colors',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:44:15.249Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should display consistent branding colors'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:15.673Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '3fdb4fba-1b76-4fc0-99af-7eb1a77446db',
      name: 'should display consistent branding colors',
      body: [Object],
      identifier: 'should display consistent branding colors',
      scope: 'should display consistent branding colors',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:44:15.249Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 36431:0
2025-08-05T18:44:15.676Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:44:17.688Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:44:07.213Z',
      uuid: '3abc6384-e4b7-466f-a587-5c48ad9b5112',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '3abc6384-e4b7-466f-a587-5c48ad9b5112'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:44:07.238Z',
      uuid: '3abc6384-e4b7-466f-a587-5c48ad9b5112',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '3abc6384-e4b7-466f-a587-5c48ad9b5112'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:44:07.268Z',
      uuid: '3abc6384-e4b7-466f-a587-5c48ad9b5112',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '3abc6384-e4b7-466f-a587-5c48ad9b5112'
    }
  ]
} to 36431:0
2025-08-05T18:44:17.694Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '3abc6384-e4b7-466f-a587-5c48ad9b5112',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'e2b2abcd-47f1-4e15-8bbd-487d26e7a4e9',
    body: { lang: 'node', code: null },
    scope: 'should handle navigation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    started_at: '2025-08-05T18:44:07.209Z',
    finished_at: '2025-08-05T18:44:17.681Z'
  }
} to 36431:0
2025-08-05T18:44:17.721Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'e2b2abcd-47f1-4e15-8bbd-487d26e7a4e9',
    name: 'should handle navigation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test navigation buttons/links\n' +
        `    const navButtons = page.locator('a, button, [role="link"]').filter({\n` +
        '      hasText: /back|next|previous|continue/i\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await navButtons.count(), 3); i++) {\n' +
        '      const navButton = navButtons.nth(i);\n' +
        '\n' +
        '      // Check navigation element is visible and clickable\n' +
        '      await (0, _test.expect)(navButton).toBeVisible();\n' +
        '      const styles = await navButton.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          cursor: computed.cursor,\n' +
        '          pointerEvents: computed.pointerEvents\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should be clickable\n' +
        "      (0, _test.expect)(['pointer', 'default']).toContain(styles.cursor);\n" +
        "      (0, _test.expect)(styles.pointerEvents).not.toBe('none');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle navigation consistently',
    scope: 'should handle navigation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 43,
    started_at: '2025-08-05T18:44:07.193Z',
    finished_at: '2025-08-05T18:44:07.236Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle navigation consistently'
    },
    hooks: [ '3abc6384-e4b7-466f-a587-5c48ad9b5112' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:17.721Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:17.706Z',
      uuid: 'e2b2abcd-47f1-4e15-8bbd-487d26e7a4e9',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'e2b2abcd-47f1-4e15-8bbd-487d26e7a4e9'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:17.706Z',
      uuid: 'e2b2abcd-47f1-4e15-8bbd-487d26e7a4e9',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'e2b2abcd-47f1-4e15-8bbd-487d26e7a4e9'
    }
  ]
} to 36431:0
2025-08-05T18:44:19.670Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '186d5af1-3fe7-4ce0-880b-bebab9b97cdf',
    name: 'should connect to BrowserStack and load the homepage',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to the homepage\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-connection-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load the homepage',
    scope: 'should connect to BrowserStack and load the homepage',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'failed',
    duration_in_ms: 37,
    started_at: '2025-08-05T18:44:09.987Z',
    finished_at: '2025-08-05T18:44:10.024Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should connect to BrowserStack and load the homepage'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:19.671Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:19.651Z',
      uuid: '186d5af1-3fe7-4ce0-880b-bebab9b97cdf',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '186d5af1-3fe7-4ce0-880b-bebab9b97cdf'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:19.652Z',
      uuid: '186d5af1-3fe7-4ce0-880b-bebab9b97cdf',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '186d5af1-3fe7-4ce0-880b-bebab9b97cdf'
    }
  ]
} to 36431:0
2025-08-05T18:44:19.674Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '3abc6384-e4b7-466f-a587-5c48ad9b5112',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'e2b2abcd-47f1-4e15-8bbd-487d26e7a4e9',
      body: [Object],
      scope: 'should handle navigation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      started_at: '2025-08-05T18:44:07.209Z',
      finished_at: '2025-08-05T18:44:17.681Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'e2b2abcd-47f1-4e15-8bbd-487d26e7a4e9',
      name: 'should handle navigation consistently',
      body: [Object],
      identifier: 'should handle navigation consistently',
      scope: 'should handle navigation consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 43,
      started_at: '2025-08-05T18:44:07.193Z',
      finished_at: '2025-08-05T18:44:07.236Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '186d5af1-3fe7-4ce0-880b-bebab9b97cdf',
      name: 'should connect to BrowserStack and load the homepage',
      body: [Object],
      identifier: 'should connect to BrowserStack and load the homepage',
      scope: 'should connect to BrowserStack and load the homepage',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'failed',
      duration_in_ms: 37,
      started_at: '2025-08-05T18:44:09.987Z',
      finished_at: '2025-08-05T18:44:10.024Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:44:19.675Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:44:20.739Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '497aec96-00d5-4687-bbe4-52be7825f986',
    name: 'should connect to BrowserStack and load a public website',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to a public website instead of localhost\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-public-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '    console.log(`🌐 URL: ${page.url()}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load a public website',
    scope: 'should connect to BrowserStack and load a public website',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:44:20.725Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should connect to BrowserStack and load a public website'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:21.676Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '497aec96-00d5-4687-bbe4-52be7825f986',
      name: 'should connect to BrowserStack and load a public website',
      body: [Object],
      identifier: 'should connect to BrowserStack and load a public website',
      scope: 'should connect to BrowserStack and load a public website',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:44:20.725Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 36431:0
2025-08-05T18:44:21.677Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:44:22.666Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b4f20554-6135-4611-a6a7-86d642709b31',
    name: 'should verify browser capabilities',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Get browser information\n' +
        '    const userAgent = await page.evaluate(() => navigator.userAgent);\n' +
        '    const viewport = page.viewportSize();\n' +
        '    console.log(`🔍 User Agent: ${userAgent}`);\n' +
        '    console.log(`📐 Viewport: ${viewport === null || viewport === void 0 ? void 0 : viewport.width}x${viewport === null || viewport === void 0 ? void 0 : viewport.height}`);\n' +
        '\n' +
        "    // Verify we're running in a real browser environment\n" +
        "    (0, _test.expect)(userAgent).toContain('Chrome');\n" +
        '    (0, _test.expect)(viewport).toBeTruthy();\n' +
        '  }'
    },
    identifier: 'should verify browser capabilities',
    scope: 'should verify browser capabilities',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:44:22.654Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should verify browser capabilities'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:23.770Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b4f20554-6135-4611-a6a7-86d642709b31',
      name: 'should verify browser capabilities',
      body: [Object],
      identifier: 'should verify browser capabilities',
      scope: 'should verify browser capabilities',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:44:22.654Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 36431:0
2025-08-05T18:44:23.784Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:44:26.025Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '3fdb4fba-1b76-4fc0-99af-7eb1a77446db',
    name: 'should display consistent branding colors',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for any elements with Gutcheck brand colors\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    if ((await gutcheckElements.count()) > 0) {\n' +
        '      console.log(`🎨 Found ${await gutcheckElements.count()} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display consistent branding colors',
    scope: 'should display consistent branding colors',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'failed',
    duration_in_ms: 41,
    started_at: '2025-08-05T18:44:15.249Z',
    finished_at: '2025-08-05T18:44:15.290Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should display consistent branding colors'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:26.026Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:25.994Z',
      uuid: '3fdb4fba-1b76-4fc0-99af-7eb1a77446db',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '3fdb4fba-1b76-4fc0-99af-7eb1a77446db'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:25.996Z',
      uuid: '3fdb4fba-1b76-4fc0-99af-7eb1a77446db',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '3fdb4fba-1b76-4fc0-99af-7eb1a77446db'
    }
  ]
} to 36431:0
2025-08-05T18:44:27.772Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '3fdb4fba-1b76-4fc0-99af-7eb1a77446db',
      name: 'should display consistent branding colors',
      body: [Object],
      identifier: 'should display consistent branding colors',
      scope: 'should display consistent branding colors',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'failed',
      duration_in_ms: 41,
      started_at: '2025-08-05T18:44:15.249Z',
      finished_at: '2025-08-05T18:44:15.290Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:44:27.773Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:44:28.972Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b1eee389-637c-45b6-acaa-72be70df2814',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:44:28.960Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:29.773Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b1eee389-637c-45b6-acaa-72be70df2814',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:44:28.960Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 36431:0
2025-08-05T18:44:29.774Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:44:30.748Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '497aec96-00d5-4687-bbe4-52be7825f986',
    name: 'should connect to BrowserStack and load a public website',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to a public website instead of localhost\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-public-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '    console.log(`🌐 URL: ${page.url()}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load a public website',
    scope: 'should connect to BrowserStack and load a public website',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'failed',
    duration_in_ms: 42,
    started_at: '2025-08-05T18:44:20.725Z',
    finished_at: '2025-08-05T18:44:20.767Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should connect to BrowserStack and load a public website'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:30.756Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:30.723Z',
      uuid: '497aec96-00d5-4687-bbe4-52be7825f986',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '497aec96-00d5-4687-bbe4-52be7825f986'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:30.723Z',
      uuid: '497aec96-00d5-4687-bbe4-52be7825f986',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '497aec96-00d5-4687-bbe4-52be7825f986'
    }
  ]
} to 36431:0
2025-08-05T18:44:31.774Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '497aec96-00d5-4687-bbe4-52be7825f986',
      name: 'should connect to BrowserStack and load a public website',
      body: [Object],
      identifier: 'should connect to BrowserStack and load a public website',
      scope: 'should connect to BrowserStack and load a public website',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'failed',
      duration_in_ms: 42,
      started_at: '2025-08-05T18:44:20.725Z',
      finished_at: '2025-08-05T18:44:20.767Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:44:31.775Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:44:33.694Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'aaad59a4-0ec8-41c6-b498-4f0d4954cb86',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:44:33.682Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:33.775Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'aaad59a4-0ec8-41c6-b498-4f0d4954cb86',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:44:33.682Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 36431:0
2025-08-05T18:44:33.775Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:44:33.885Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b4f20554-6135-4611-a6a7-86d642709b31',
    name: 'should verify browser capabilities',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Get browser information\n' +
        '    const userAgent = await page.evaluate(() => navigator.userAgent);\n' +
        '    const viewport = page.viewportSize();\n' +
        '    console.log(`🔍 User Agent: ${userAgent}`);\n' +
        '    console.log(`📐 Viewport: ${viewport === null || viewport === void 0 ? void 0 : viewport.width}x${viewport === null || viewport === void 0 ? void 0 : viewport.height}`);\n' +
        '\n' +
        "    // Verify we're running in a real browser environment\n" +
        "    (0, _test.expect)(userAgent).toContain('Chrome');\n" +
        '    (0, _test.expect)(viewport).toBeTruthy();\n' +
        '  }'
    },
    identifier: 'should verify browser capabilities',
    scope: 'should verify browser capabilities',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'failed',
    duration_in_ms: 35,
    started_at: '2025-08-05T18:44:22.654Z',
    finished_at: '2025-08-05T18:44:22.689Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should verify browser capabilities'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:33.885Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:33.864Z',
      uuid: 'b4f20554-6135-4611-a6a7-86d642709b31',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b4f20554-6135-4611-a6a7-86d642709b31'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:33.865Z',
      uuid: 'b4f20554-6135-4611-a6a7-86d642709b31',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b4f20554-6135-4611-a6a7-86d642709b31'
    }
  ]
} to 36431:0
2025-08-05T18:44:35.775Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b4f20554-6135-4611-a6a7-86d642709b31',
      name: 'should verify browser capabilities',
      body: [Object],
      identifier: 'should verify browser capabilities',
      scope: 'should verify browser capabilities',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'failed',
      duration_in_ms: 35,
      started_at: '2025-08-05T18:44:22.654Z',
      finished_at: '2025-08-05T18:44:22.689Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:44:35.775Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:44:36.820Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b3a8746c-8850-445d-baaa-6341a4ef0c39',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:44:36.800Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:37.776Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b3a8746c-8850-445d-baaa-6341a4ef0c39',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:44:36.800Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 36431:0
2025-08-05T18:44:37.777Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:44:44.239Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'aaad59a4-0ec8-41c6-b498-4f0d4954cb86',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 50,
    started_at: '2025-08-05T18:44:33.682Z',
    finished_at: '2025-08-05T18:44:33.732Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:44.240Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:44.210Z',
      uuid: 'aaad59a4-0ec8-41c6-b498-4f0d4954cb86',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'aaad59a4-0ec8-41c6-b498-4f0d4954cb86'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:44.212Z',
      uuid: 'aaad59a4-0ec8-41c6-b498-4f0d4954cb86',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'aaad59a4-0ec8-41c6-b498-4f0d4954cb86'
    }
  ]
} to 36431:0
2025-08-05T18:44:45.778Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'aaad59a4-0ec8-41c6-b498-4f0d4954cb86',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 50,
      started_at: '2025-08-05T18:44:33.682Z',
      finished_at: '2025-08-05T18:44:33.732Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:44:45.779Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:44:47.199Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '378f891d-30ff-4ba6-88df-42be74ad9f97',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Traditional Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-traditional.spec.ts',
    vc_filepath: 'tests/browserstack-traditional.spec.ts',
    location: 'tests/browserstack-traditional.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:44:47.187Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:47.779Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '378f891d-30ff-4ba6-88df-42be74ad9f97',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-traditional.spec.ts',
      vc_filepath: 'tests/browserstack-traditional.spec.ts',
      location: 'tests/browserstack-traditional.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:44:47.187Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 36431:0
2025-08-05T18:44:47.781Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:44:48.008Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b3a8746c-8850-445d-baaa-6341a4ef0c39',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 43,
    started_at: '2025-08-05T18:44:36.800Z',
    finished_at: '2025-08-05T18:44:36.843Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:48.010Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:47.966Z',
      uuid: 'b3a8746c-8850-445d-baaa-6341a4ef0c39',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b3a8746c-8850-445d-baaa-6341a4ef0c39'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:47.968Z',
      uuid: 'b3a8746c-8850-445d-baaa-6341a4ef0c39',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b3a8746c-8850-445d-baaa-6341a4ef0c39'
    }
  ]
} to 36431:0
2025-08-05T18:44:49.056Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b1eee389-637c-45b6-acaa-72be70df2814',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 38,
    started_at: '2025-08-05T18:44:28.960Z',
    finished_at: '2025-08-05T18:44:28.998Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:49.057Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:49.041Z',
      uuid: 'b1eee389-637c-45b6-acaa-72be70df2814',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b1eee389-637c-45b6-acaa-72be70df2814'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:49.042Z',
      uuid: 'b1eee389-637c-45b6-acaa-72be70df2814',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b1eee389-637c-45b6-acaa-72be70df2814'
    }
  ]
} to 36431:0
2025-08-05T18:44:49.779Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b3a8746c-8850-445d-baaa-6341a4ef0c39',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 43,
      started_at: '2025-08-05T18:44:36.800Z',
      finished_at: '2025-08-05T18:44:36.843Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b1eee389-637c-45b6-acaa-72be70df2814',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 38,
      started_at: '2025-08-05T18:44:28.960Z',
      finished_at: '2025-08-05T18:44:28.998Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:44:49.779Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:44:51.176Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'a7ce65e2-6ffc-4dae-9647-9a172470ff6e',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Traditional Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-traditional.spec.ts',
    vc_filepath: 'tests/browserstack-traditional.spec.ts',
    location: 'tests/browserstack-traditional.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:44:51.163Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:51.780Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'a7ce65e2-6ffc-4dae-9647-9a172470ff6e',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-traditional.spec.ts',
      vc_filepath: 'tests/browserstack-traditional.spec.ts',
      location: 'tests/browserstack-traditional.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:44:51.163Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 36431:0
2025-08-05T18:44:51.781Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:44:52.160Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '98490676-0ae9-4b62-9ec0-4658d0a83297',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Traditional Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-traditional.spec.ts',
    vc_filepath: 'tests/browserstack-traditional.spec.ts',
    location: 'tests/browserstack-traditional.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:44:52.150Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:53.780Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '98490676-0ae9-4b62-9ec0-4658d0a83297',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-traditional.spec.ts',
      vc_filepath: 'tests/browserstack-traditional.spec.ts',
      location: 'tests/browserstack-traditional.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:44:52.150Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 36431:0
2025-08-05T18:44:53.781Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:44:56.805Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '378f891d-30ff-4ba6-88df-42be74ad9f97',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Traditional Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-traditional.spec.ts',
    vc_filepath: 'tests/browserstack-traditional.spec.ts',
    location: 'tests/browserstack-traditional.spec.ts',
    result: 'failed',
    duration_in_ms: 51,
    started_at: '2025-08-05T18:44:47.187Z',
    finished_at: '2025-08-05T18:44:47.238Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:56.806Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:56.790Z',
      uuid: '378f891d-30ff-4ba6-88df-42be74ad9f97',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '378f891d-30ff-4ba6-88df-42be74ad9f97'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:44:56.791Z',
      uuid: '378f891d-30ff-4ba6-88df-42be74ad9f97',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '378f891d-30ff-4ba6-88df-42be74ad9f97'
    }
  ]
} to 36431:0
2025-08-05T18:44:57.783Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '378f891d-30ff-4ba6-88df-42be74ad9f97',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-traditional.spec.ts',
      vc_filepath: 'tests/browserstack-traditional.spec.ts',
      location: 'tests/browserstack-traditional.spec.ts',
      result: 'failed',
      duration_in_ms: 51,
      started_at: '2025-08-05T18:44:47.187Z',
      finished_at: '2025-08-05T18:44:47.238Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:44:57.784Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:44:59.887Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'd1a79ef9-179a-42b6-9d20-47e8746ed00d',
    name: 'should display consistent colors across browsers',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test Gutcheck brand colors\n' +
        '    const colorTests = [{\n' +
        "      selector: '.bg-gutcheck-deep-navy',\n" +
        "      expectedColor: 'rgb(10, 31, 68)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-electric-blue',\n" +
        "      expectedColor: 'rgb(20, 122, 255)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-vibrant-teal',\n" +
        "      expectedColor: 'rgb(25, 194, 160)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-bright-orange',\n" +
        "      expectedColor: 'rgb(255, 107, 0)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-bright-yellow',\n" +
        "      expectedColor: 'rgb(255, 199, 0)'\n" +
        '    }];\n' +
        '    for (const test of colorTests) {\n' +
        '      const element = page.locator(test.selector).first();\n' +
        '      if ((await element.count()) > 0) {\n' +
        '        const backgroundColor = await element.evaluate(el => {\n' +
        '          return window.getComputedStyle(el).backgroundColor;\n' +
        '        });\n' +
        '        (0, _test.expect)(backgroundColor).toBe(test.expectedColor);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should display consistent colors across browsers',
    scope: 'should display consistent colors across browsers',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:44:59.875Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should display consistent colors across browsers'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:44:59.891Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'c512049c-9f86-4a7c-956b-4ef7257a46f0',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'd1a79ef9-179a-42b6-9d20-47e8746ed00d',
    body: { lang: 'node', code: null },
    scope: 'should display consistent colors across browsers',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    started_at: '2025-08-05T18:44:59.887Z'
  }
} to 36431:0
2025-08-05T18:45:00.925Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '98490676-0ae9-4b62-9ec0-4658d0a83297',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Traditional Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-traditional.spec.ts',
    vc_filepath: 'tests/browserstack-traditional.spec.ts',
    location: 'tests/browserstack-traditional.spec.ts',
    result: 'failed',
    duration_in_ms: 44,
    started_at: '2025-08-05T18:44:52.150Z',
    finished_at: '2025-08-05T18:44:52.194Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:45:00.926Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:45:00.893Z',
      uuid: '98490676-0ae9-4b62-9ec0-4658d0a83297',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '98490676-0ae9-4b62-9ec0-4658d0a83297'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:45:00.896Z',
      uuid: '98490676-0ae9-4b62-9ec0-4658d0a83297',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '98490676-0ae9-4b62-9ec0-4658d0a83297'
    }
  ]
} to 36431:0
2025-08-05T18:45:01.784Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'd1a79ef9-179a-42b6-9d20-47e8746ed00d',
      name: 'should display consistent colors across browsers',
      body: [Object],
      identifier: 'should display consistent colors across browsers',
      scope: 'should display consistent colors across browsers',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:44:59.875Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'c512049c-9f86-4a7c-956b-4ef7257a46f0',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'd1a79ef9-179a-42b6-9d20-47e8746ed00d',
      body: [Object],
      scope: 'should display consistent colors across browsers',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      started_at: '2025-08-05T18:44:59.887Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '98490676-0ae9-4b62-9ec0-4658d0a83297',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-traditional.spec.ts',
      vc_filepath: 'tests/browserstack-traditional.spec.ts',
      location: 'tests/browserstack-traditional.spec.ts',
      result: 'failed',
      duration_in_ms: 44,
      started_at: '2025-08-05T18:44:52.150Z',
      finished_at: '2025-08-05T18:44:52.194Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:45:01.786Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:45:03.921Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '31bf31b3-7a78-4653-aacc-2f436e16e6c6',
    name: 'should maintain consistent typography',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test font family consistency\n' +
        "    const textElements = page.locator('h1, h2, h3, p, button, input, textarea');\n" +
        '    for (let i = 0; i < Math.min(await textElements.count(), 10); i++) {\n' +
        '      const element = textElements.nth(i);\n' +
        '      const fontFamily = await element.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).fontFamily;\n' +
        '      });\n' +
        '\n' +
        '      // Should use Inter font family or fallback to system fonts\n' +
        '      (0, _test.expect)(fontFamily).toMatch(/Inter|system-ui|sans-serif/);\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent typography',
    scope: 'should maintain consistent typography',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:45:03.910Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain consistent typography'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:45:03.924Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '0a8c517e-3fd6-4e11-bc83-b9afd3707f50',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '31bf31b3-7a78-4653-aacc-2f436e16e6c6',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent typography',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    started_at: '2025-08-05T18:45:03.920Z'
  }
} to 36431:0
2025-08-05T18:45:05.785Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '31bf31b3-7a78-4653-aacc-2f436e16e6c6',
      name: 'should maintain consistent typography',
      body: [Object],
      identifier: 'should maintain consistent typography',
      scope: 'should maintain consistent typography',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:45:03.910Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '0a8c517e-3fd6-4e11-bc83-b9afd3707f50',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '31bf31b3-7a78-4653-aacc-2f436e16e6c6',
      body: [Object],
      scope: 'should maintain consistent typography',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      started_at: '2025-08-05T18:45:03.920Z'
    }
  }
] to 36431:0
2025-08-05T18:45:05.786Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:45:08.890Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:44:59.889Z',
      uuid: 'c512049c-9f86-4a7c-956b-4ef7257a46f0',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'c512049c-9f86-4a7c-956b-4ef7257a46f0'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:44:59.913Z',
      uuid: 'c512049c-9f86-4a7c-956b-4ef7257a46f0',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'c512049c-9f86-4a7c-956b-4ef7257a46f0'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:44:59.941Z',
      uuid: 'c512049c-9f86-4a7c-956b-4ef7257a46f0',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'c512049c-9f86-4a7c-956b-4ef7257a46f0'
    }
  ]
} to 36431:0
2025-08-05T18:45:08.896Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'c512049c-9f86-4a7c-956b-4ef7257a46f0',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'd1a79ef9-179a-42b6-9d20-47e8746ed00d',
    body: { lang: 'node', code: null },
    scope: 'should display consistent colors across browsers',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    started_at: '2025-08-05T18:44:59.887Z',
    finished_at: '2025-08-05T18:45:08.886Z'
  }
} to 36431:0
2025-08-05T18:45:08.952Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'd1a79ef9-179a-42b6-9d20-47e8746ed00d',
    name: 'should display consistent colors across browsers',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test Gutcheck brand colors\n' +
        '    const colorTests = [{\n' +
        "      selector: '.bg-gutcheck-deep-navy',\n" +
        "      expectedColor: 'rgb(10, 31, 68)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-electric-blue',\n" +
        "      expectedColor: 'rgb(20, 122, 255)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-vibrant-teal',\n" +
        "      expectedColor: 'rgb(25, 194, 160)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-bright-orange',\n" +
        "      expectedColor: 'rgb(255, 107, 0)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-bright-yellow',\n" +
        "      expectedColor: 'rgb(255, 199, 0)'\n" +
        '    }];\n' +
        '    for (const test of colorTests) {\n' +
        '      const element = page.locator(test.selector).first();\n' +
        '      if ((await element.count()) > 0) {\n' +
        '        const backgroundColor = await element.evaluate(el => {\n' +
        '          return window.getComputedStyle(el).backgroundColor;\n' +
        '        });\n' +
        '        (0, _test.expect)(backgroundColor).toBe(test.expectedColor);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should display consistent colors across browsers',
    scope: 'should display consistent colors across browsers',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 44,
    started_at: '2025-08-05T18:44:59.875Z',
    finished_at: '2025-08-05T18:44:59.919Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should display consistent colors across browsers'
    },
    hooks: [ 'c512049c-9f86-4a7c-956b-4ef7257a46f0' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:45:08.953Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:45:08.910Z',
      uuid: 'd1a79ef9-179a-42b6-9d20-47e8746ed00d',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'd1a79ef9-179a-42b6-9d20-47e8746ed00d'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:45:08.911Z',
      uuid: 'd1a79ef9-179a-42b6-9d20-47e8746ed00d',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'd1a79ef9-179a-42b6-9d20-47e8746ed00d'
    }
  ]
} to 36431:0
2025-08-05T18:45:09.786Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'c512049c-9f86-4a7c-956b-4ef7257a46f0',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'd1a79ef9-179a-42b6-9d20-47e8746ed00d',
      body: [Object],
      scope: 'should display consistent colors across browsers',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      started_at: '2025-08-05T18:44:59.887Z',
      finished_at: '2025-08-05T18:45:08.886Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'd1a79ef9-179a-42b6-9d20-47e8746ed00d',
      name: 'should display consistent colors across browsers',
      body: [Object],
      identifier: 'should display consistent colors across browsers',
      scope: 'should display consistent colors across browsers',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 44,
      started_at: '2025-08-05T18:44:59.875Z',
      finished_at: '2025-08-05T18:44:59.919Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:45:09.787Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:45:12.821Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'df35d50c-8921-45b3-8def-494448fcdd40',
    name: 'should have consistent button styling',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    const buttons = page.locator('button');\n" +
        '    for (let i = 0; i < Math.min(await buttons.count(), 5); i++) {\n' +
        '      const button = buttons.nth(i);\n' +
        '\n' +
        '      // Check button has proper styling\n' +
        '      const styles = await button.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding,\n' +
        '          cursor: computed.cursor\n' +
        '        };\n' +
        '      });\n' +
        "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
        "      (0, _test.expect)(styles.borderRadius).not.toBe('0px');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should have consistent button styling',
    scope: 'should have consistent button styling',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:45:12.796Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should have consistent button styling'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:45:12.833Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'c88243a5-a42a-42c6-b9b7-63b76896bd4d',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'df35d50c-8921-45b3-8def-494448fcdd40',
    body: { lang: 'node', code: null },
    scope: 'should have consistent button styling',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    started_at: '2025-08-05T18:45:12.803Z'
  }
} to 36431:0
2025-08-05T18:45:13.787Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'df35d50c-8921-45b3-8def-494448fcdd40',
      name: 'should have consistent button styling',
      body: [Object],
      identifier: 'should have consistent button styling',
      scope: 'should have consistent button styling',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:45:12.796Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'c88243a5-a42a-42c6-b9b7-63b76896bd4d',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'df35d50c-8921-45b3-8def-494448fcdd40',
      body: [Object],
      scope: 'should have consistent button styling',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      started_at: '2025-08-05T18:45:12.803Z'
    }
  }
] to 36431:0
2025-08-05T18:45:13.788Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:45:21.133Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'a7ce65e2-6ffc-4dae-9647-9a172470ff6e',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Traditional Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-traditional.spec.ts',
    vc_filepath: 'tests/browserstack-traditional.spec.ts',
    location: 'tests/browserstack-traditional.spec.ts',
    result: 'failed',
    duration_in_ms: 46,
    started_at: '2025-08-05T18:44:51.163Z',
    finished_at: '2025-08-05T18:44:51.209Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:45:21.134Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:45:21.114Z',
      uuid: 'a7ce65e2-6ffc-4dae-9647-9a172470ff6e',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'a7ce65e2-6ffc-4dae-9647-9a172470ff6e'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:45:21.115Z',
      uuid: 'a7ce65e2-6ffc-4dae-9647-9a172470ff6e',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'a7ce65e2-6ffc-4dae-9647-9a172470ff6e'
    }
  ]
} to 36431:0
2025-08-05T18:45:21.789Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'a7ce65e2-6ffc-4dae-9647-9a172470ff6e',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-traditional.spec.ts',
      vc_filepath: 'tests/browserstack-traditional.spec.ts',
      location: 'tests/browserstack-traditional.spec.ts',
      result: 'failed',
      duration_in_ms: 46,
      started_at: '2025-08-05T18:44:51.163Z',
      finished_at: '2025-08-05T18:44:51.209Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:45:21.790Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:45:24.221Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'f29ea331-4aff-4840-9cac-8981d8020ca1',
    name: 'should maintain layout consistency on different screen sizes',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    const viewports = [{\n' +
        '      width: 1920,\n' +
        '      height: 1080,\n' +
        "      name: 'Desktop Large'\n" +
        '    }, {\n' +
        '      width: 1366,\n' +
        '      height: 768,\n' +
        "      name: 'Desktop Small'\n" +
        '    }, {\n' +
        '      width: 768,\n' +
        '      height: 1024,\n' +
        "      name: 'Tablet Portrait'\n" +
        '    }, {\n' +
        '      width: 375,\n' +
        '      height: 667,\n' +
        "      name: 'Mobile Portrait'\n" +
        '    }, {\n' +
        '      width: 414,\n' +
        '      height: 896,\n' +
        "      name: 'Mobile Large'\n" +
        '    }];\n' +
        '    for (const viewport of viewports) {\n' +
        '      await page.setViewportSize({\n' +
        '        width: viewport.width,\n' +
        '        height: viewport.height\n' +
        '      });\n' +
        '\n' +
        '      // Wait for layout to stabilize\n' +
        '      await page.waitForTimeout(500);\n' +
        '\n' +
        '      // Check that main content is visible and properly positioned\n' +
        `      const mainContent = page.locator('main, .main, #main, [role="main"]').first();\n` +
        '      if ((await mainContent.count()) > 0) {\n' +
        '        const isVisible = await mainContent.isVisible();\n' +
        '        (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        "        // Check that content doesn't overflow horizontally\n" +
        '        const overflow = await page.evaluate(() => {\n' +
        '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
        '        });\n' +
        '        (0, _test.expect)(overflow).toBe(true);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain layout consistency on different screen sizes',
    scope: 'should maintain layout consistency on different screen sizes',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:45:24.188Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain layout consistency on different screen sizes'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:45:24.241Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '7f7395d5-bbfe-4176-9a8f-1a5dce5f02b8',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'f29ea331-4aff-4840-9cac-8981d8020ca1',
    body: { lang: 'node', code: null },
    scope: 'should maintain layout consistency on different screen sizes',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    started_at: '2025-08-05T18:45:24.196Z'
  }
} to 36431:0
2025-08-05T18:45:25.790Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'f29ea331-4aff-4840-9cac-8981d8020ca1',
      name: 'should maintain layout consistency on different screen sizes',
      body: [Object],
      identifier: 'should maintain layout consistency on different screen sizes',
      scope: 'should maintain layout consistency on different screen sizes',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:45:24.188Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '7f7395d5-bbfe-4176-9a8f-1a5dce5f02b8',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'f29ea331-4aff-4840-9cac-8981d8020ca1',
      body: [Object],
      scope: 'should maintain layout consistency on different screen sizes',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      started_at: '2025-08-05T18:45:24.196Z'
    }
  }
] to 36431:0
2025-08-05T18:45:25.793Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:45:34.873Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:03.923Z',
      uuid: '0a8c517e-3fd6-4e11-bc83-b9afd3707f50',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '0a8c517e-3fd6-4e11-bc83-b9afd3707f50'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:03.948Z',
      uuid: '0a8c517e-3fd6-4e11-bc83-b9afd3707f50',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '0a8c517e-3fd6-4e11-bc83-b9afd3707f50'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:03.976Z',
      uuid: '0a8c517e-3fd6-4e11-bc83-b9afd3707f50',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '0a8c517e-3fd6-4e11-bc83-b9afd3707f50'
    }
  ]
} to 36431:0
2025-08-05T18:45:34.877Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '0a8c517e-3fd6-4e11-bc83-b9afd3707f50',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '31bf31b3-7a78-4653-aacc-2f436e16e6c6',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent typography',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    started_at: '2025-08-05T18:45:03.920Z',
    finished_at: '2025-08-05T18:45:34.869Z'
  }
} to 36431:0
2025-08-05T18:45:34.902Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '31bf31b3-7a78-4653-aacc-2f436e16e6c6',
    name: 'should maintain consistent typography',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test font family consistency\n' +
        "    const textElements = page.locator('h1, h2, h3, p, button, input, textarea');\n" +
        '    for (let i = 0; i < Math.min(await textElements.count(), 10); i++) {\n' +
        '      const element = textElements.nth(i);\n' +
        '      const fontFamily = await element.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).fontFamily;\n' +
        '      });\n' +
        '\n' +
        '      // Should use Inter font family or fallback to system fonts\n' +
        '      (0, _test.expect)(fontFamily).toMatch(/Inter|system-ui|sans-serif/);\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent typography',
    scope: 'should maintain consistent typography',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 39,
    started_at: '2025-08-05T18:45:03.910Z',
    finished_at: '2025-08-05T18:45:03.949Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain consistent typography'
    },
    hooks: [ '0a8c517e-3fd6-4e11-bc83-b9afd3707f50' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:45:34.903Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:45:34.890Z',
      uuid: '31bf31b3-7a78-4653-aacc-2f436e16e6c6',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '31bf31b3-7a78-4653-aacc-2f436e16e6c6'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:45:34.891Z',
      uuid: '31bf31b3-7a78-4653-aacc-2f436e16e6c6',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '31bf31b3-7a78-4653-aacc-2f436e16e6c6'
    }
  ]
} to 36431:0
2025-08-05T18:45:35.794Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '0a8c517e-3fd6-4e11-bc83-b9afd3707f50',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '31bf31b3-7a78-4653-aacc-2f436e16e6c6',
      body: [Object],
      scope: 'should maintain consistent typography',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      started_at: '2025-08-05T18:45:03.920Z',
      finished_at: '2025-08-05T18:45:34.869Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '31bf31b3-7a78-4653-aacc-2f436e16e6c6',
      name: 'should maintain consistent typography',
      body: [Object],
      identifier: 'should maintain consistent typography',
      scope: 'should maintain consistent typography',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 39,
      started_at: '2025-08-05T18:45:03.910Z',
      finished_at: '2025-08-05T18:45:03.949Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:45:35.795Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:45:37.827Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '636a82f2-c5aa-4a05-9736-43f6a6971925',
    name: 'should handle form elements consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test form input styling\n' +
        "    const inputs = page.locator('input, textarea, select');\n" +
        '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
        '      const input = inputs.nth(i);\n' +
        '      const styles = await input.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          border: computed.border,\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have consistent border and padding\n' +
        "      (0, _test.expect)(styles.border).not.toBe('none');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form elements consistently',
    scope: 'should handle form elements consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:45:37.816Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle form elements consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:45:37.832Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '72dc6e53-9665-46c7-81ad-b040c3a283c0',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '636a82f2-c5aa-4a05-9736-43f6a6971925',
    body: { lang: 'node', code: null },
    scope: 'should handle form elements consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    started_at: '2025-08-05T18:45:37.829Z'
  }
} to 36431:0
2025-08-05T18:45:38.313Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:24.200Z',
      uuid: '7f7395d5-bbfe-4176-9a8f-1a5dce5f02b8',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '7f7395d5-bbfe-4176-9a8f-1a5dce5f02b8'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:24.281Z',
      uuid: '7f7395d5-bbfe-4176-9a8f-1a5dce5f02b8',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '7f7395d5-bbfe-4176-9a8f-1a5dce5f02b8'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:24.327Z',
      uuid: '7f7395d5-bbfe-4176-9a8f-1a5dce5f02b8',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '7f7395d5-bbfe-4176-9a8f-1a5dce5f02b8'
    }
  ]
} to 36431:0
2025-08-05T18:45:38.316Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '7f7395d5-bbfe-4176-9a8f-1a5dce5f02b8',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'f29ea331-4aff-4840-9cac-8981d8020ca1',
    body: { lang: 'node', code: null },
    scope: 'should maintain layout consistency on different screen sizes',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    started_at: '2025-08-05T18:45:24.196Z',
    finished_at: '2025-08-05T18:45:38.309Z'
  }
} to 36431:0
2025-08-05T18:45:38.341Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'f29ea331-4aff-4840-9cac-8981d8020ca1',
    name: 'should maintain layout consistency on different screen sizes',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    const viewports = [{\n' +
        '      width: 1920,\n' +
        '      height: 1080,\n' +
        "      name: 'Desktop Large'\n" +
        '    }, {\n' +
        '      width: 1366,\n' +
        '      height: 768,\n' +
        "      name: 'Desktop Small'\n" +
        '    }, {\n' +
        '      width: 768,\n' +
        '      height: 1024,\n' +
        "      name: 'Tablet Portrait'\n" +
        '    }, {\n' +
        '      width: 375,\n' +
        '      height: 667,\n' +
        "      name: 'Mobile Portrait'\n" +
        '    }, {\n' +
        '      width: 414,\n' +
        '      height: 896,\n' +
        "      name: 'Mobile Large'\n" +
        '    }];\n' +
        '    for (const viewport of viewports) {\n' +
        '      await page.setViewportSize({\n' +
        '        width: viewport.width,\n' +
        '        height: viewport.height\n' +
        '      });\n' +
        '\n' +
        '      // Wait for layout to stabilize\n' +
        '      await page.waitForTimeout(500);\n' +
        '\n' +
        '      // Check that main content is visible and properly positioned\n' +
        `      const mainContent = page.locator('main, .main, #main, [role="main"]').first();\n` +
        '      if ((await mainContent.count()) > 0) {\n' +
        '        const isVisible = await mainContent.isVisible();\n' +
        '        (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        "        // Check that content doesn't overflow horizontally\n" +
        '        const overflow = await page.evaluate(() => {\n' +
        '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
        '        });\n' +
        '        (0, _test.expect)(overflow).toBe(true);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain layout consistency on different screen sizes',
    scope: 'should maintain layout consistency on different screen sizes',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 94,
    started_at: '2025-08-05T18:45:24.188Z',
    finished_at: '2025-08-05T18:45:24.282Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain layout consistency on different screen sizes'
    },
    hooks: [ '7f7395d5-bbfe-4176-9a8f-1a5dce5f02b8' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:45:38.344Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:45:38.326Z',
      uuid: 'f29ea331-4aff-4840-9cac-8981d8020ca1',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'f29ea331-4aff-4840-9cac-8981d8020ca1'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:45:38.327Z',
      uuid: 'f29ea331-4aff-4840-9cac-8981d8020ca1',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'f29ea331-4aff-4840-9cac-8981d8020ca1'
    }
  ]
} to 36431:0
2025-08-05T18:45:39.794Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '636a82f2-c5aa-4a05-9736-43f6a6971925',
      name: 'should handle form elements consistently',
      body: [Object],
      identifier: 'should handle form elements consistently',
      scope: 'should handle form elements consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:45:37.816Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '72dc6e53-9665-46c7-81ad-b040c3a283c0',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '636a82f2-c5aa-4a05-9736-43f6a6971925',
      body: [Object],
      scope: 'should handle form elements consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      started_at: '2025-08-05T18:45:37.829Z'
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '7f7395d5-bbfe-4176-9a8f-1a5dce5f02b8',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'f29ea331-4aff-4840-9cac-8981d8020ca1',
      body: [Object],
      scope: 'should maintain layout consistency on different screen sizes',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      started_at: '2025-08-05T18:45:24.196Z',
      finished_at: '2025-08-05T18:45:38.309Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'f29ea331-4aff-4840-9cac-8981d8020ca1',
      name: 'should maintain layout consistency on different screen sizes',
      body: [Object],
      identifier: 'should maintain layout consistency on different screen sizes',
      scope: 'should maintain layout consistency on different screen sizes',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 94,
      started_at: '2025-08-05T18:45:24.188Z',
      finished_at: '2025-08-05T18:45:24.282Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:45:39.795Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:45:41.237Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'ab50da8e-876a-42b5-b708-5bbdf2ec2050',
    name: 'should maintain consistent spacing and alignment',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test that elements have consistent spacing\n' +
        "    const containers = page.locator('div, section, article').filter({\n" +
        '      hasText: /./\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await containers.count(), 10); i++) {\n' +
        '      const container = containers.nth(i);\n' +
        '      const styles = await container.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          margin: computed.margin,\n' +
        '          padding: computed.padding,\n' +
        '          display: computed.display\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have consistent display properties\n' +
        "      (0, _test.expect)(['block', 'flex', 'grid', 'inline-block']).toContain(styles.display);\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent spacing and alignment',
    scope: 'should maintain consistent spacing and alignment',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:45:41.187Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain consistent spacing and alignment'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:45:41.238Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'a2742d0e-c698-4640-8bbf-4c0e786b4a5e',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'ab50da8e-876a-42b5-b708-5bbdf2ec2050',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent spacing and alignment',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    started_at: '2025-08-05T18:45:41.194Z'
  }
} to 36431:0
2025-08-05T18:45:41.795Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'ab50da8e-876a-42b5-b708-5bbdf2ec2050',
      name: 'should maintain consistent spacing and alignment',
      body: [Object],
      identifier: 'should maintain consistent spacing and alignment',
      scope: 'should maintain consistent spacing and alignment',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:45:41.187Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'a2742d0e-c698-4640-8bbf-4c0e786b4a5e',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'ab50da8e-876a-42b5-b708-5bbdf2ec2050',
      body: [Object],
      scope: 'should maintain consistent spacing and alignment',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      started_at: '2025-08-05T18:45:41.194Z'
    }
  }
] to 36431:0
2025-08-05T18:45:41.795Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:45:42.361Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:12.806Z',
      uuid: 'c88243a5-a42a-42c6-b9b7-63b76896bd4d',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'c88243a5-a42a-42c6-b9b7-63b76896bd4d'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:12.865Z',
      uuid: 'c88243a5-a42a-42c6-b9b7-63b76896bd4d',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'c88243a5-a42a-42c6-b9b7-63b76896bd4d'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:12.913Z',
      uuid: 'c88243a5-a42a-42c6-b9b7-63b76896bd4d',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'c88243a5-a42a-42c6-b9b7-63b76896bd4d'
    }
  ]
} to 36431:0
2025-08-05T18:45:42.366Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'c88243a5-a42a-42c6-b9b7-63b76896bd4d',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'df35d50c-8921-45b3-8def-494448fcdd40',
    body: { lang: 'node', code: null },
    scope: 'should have consistent button styling',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    started_at: '2025-08-05T18:45:12.803Z',
    finished_at: '2025-08-05T18:45:42.352Z'
  }
} to 36431:0
2025-08-05T18:45:42.395Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'df35d50c-8921-45b3-8def-494448fcdd40',
    name: 'should have consistent button styling',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    const buttons = page.locator('button');\n" +
        '    for (let i = 0; i < Math.min(await buttons.count(), 5); i++) {\n' +
        '      const button = buttons.nth(i);\n' +
        '\n' +
        '      // Check button has proper styling\n' +
        '      const styles = await button.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding,\n' +
        '          cursor: computed.cursor\n' +
        '        };\n' +
        '      });\n' +
        "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
        "      (0, _test.expect)(styles.borderRadius).not.toBe('0px');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should have consistent button styling',
    scope: 'should have consistent button styling',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 78,
    started_at: '2025-08-05T18:45:12.796Z',
    finished_at: '2025-08-05T18:45:12.874Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should have consistent button styling'
    },
    hooks: [ 'c88243a5-a42a-42c6-b9b7-63b76896bd4d' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:45:42.396Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:45:42.381Z',
      uuid: 'df35d50c-8921-45b3-8def-494448fcdd40',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'df35d50c-8921-45b3-8def-494448fcdd40'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:45:42.382Z',
      uuid: 'df35d50c-8921-45b3-8def-494448fcdd40',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'df35d50c-8921-45b3-8def-494448fcdd40'
    }
  ]
} to 36431:0
2025-08-05T18:45:43.795Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'c88243a5-a42a-42c6-b9b7-63b76896bd4d',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'df35d50c-8921-45b3-8def-494448fcdd40',
      body: [Object],
      scope: 'should have consistent button styling',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      started_at: '2025-08-05T18:45:12.803Z',
      finished_at: '2025-08-05T18:45:42.352Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'df35d50c-8921-45b3-8def-494448fcdd40',
      name: 'should have consistent button styling',
      body: [Object],
      identifier: 'should have consistent button styling',
      scope: 'should have consistent button styling',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 78,
      started_at: '2025-08-05T18:45:12.796Z',
      finished_at: '2025-08-05T18:45:12.874Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:45:43.796Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:45:46.526Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'aa759b7a-86b6-4ef2-b547-45e53cdcae13',
    name: 'should handle dark mode consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test dark mode colors\n' +
        '    await page.evaluate(() => {\n' +
        '      // Simulate dark mode\n' +
        "      document.documentElement.style.colorScheme = 'dark';\n" +
        "      document.documentElement.classList.add('dark');\n" +
        '    });\n' +
        '    await page.waitForTimeout(100);\n' +
        '\n' +
        '    // Check that dark mode colors are applied\n' +
        '    const bodyColor = await page.evaluate(() => {\n' +
        '      return window.getComputedStyle(document.body).backgroundColor;\n' +
        '    });\n' +
        '\n' +
        '    // Should have dark background in dark mode\n' +
        '    (0, _test.expect)(bodyColor).toMatch(/rgb\\(10, 10, 10\\)|rgba\\(10, 10, 10/);\n' +
        '  }'
    },
    identifier: 'should handle dark mode consistently',
    scope: 'should handle dark mode consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:45:46.515Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle dark mode consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:45:46.534Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'afcbbb11-4613-4473-ab56-bd00a53adb5c',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'aa759b7a-86b6-4ef2-b547-45e53cdcae13',
    body: { lang: 'node', code: null },
    scope: 'should handle dark mode consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    started_at: '2025-08-05T18:45:46.531Z'
  }
} to 36431:0
2025-08-05T18:45:47.231Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:37.832Z',
      uuid: '72dc6e53-9665-46c7-81ad-b040c3a283c0',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '72dc6e53-9665-46c7-81ad-b040c3a283c0'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:37.854Z',
      uuid: '72dc6e53-9665-46c7-81ad-b040c3a283c0',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '72dc6e53-9665-46c7-81ad-b040c3a283c0'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:37.880Z',
      uuid: '72dc6e53-9665-46c7-81ad-b040c3a283c0',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '72dc6e53-9665-46c7-81ad-b040c3a283c0'
    }
  ]
} to 36431:0
2025-08-05T18:45:47.236Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '72dc6e53-9665-46c7-81ad-b040c3a283c0',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '636a82f2-c5aa-4a05-9736-43f6a6971925',
    body: { lang: 'node', code: null },
    scope: 'should handle form elements consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    started_at: '2025-08-05T18:45:37.829Z',
    finished_at: '2025-08-05T18:45:47.227Z'
  }
} to 36431:0
2025-08-05T18:45:47.259Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '636a82f2-c5aa-4a05-9736-43f6a6971925',
    name: 'should handle form elements consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test form input styling\n' +
        "    const inputs = page.locator('input, textarea, select');\n" +
        '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
        '      const input = inputs.nth(i);\n' +
        '      const styles = await input.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          border: computed.border,\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have consistent border and padding\n' +
        "      (0, _test.expect)(styles.border).not.toBe('none');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form elements consistently',
    scope: 'should handle form elements consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 38,
    started_at: '2025-08-05T18:45:37.816Z',
    finished_at: '2025-08-05T18:45:37.854Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle form elements consistently'
    },
    hooks: [ '72dc6e53-9665-46c7-81ad-b040c3a283c0' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:45:47.259Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:45:47.246Z',
      uuid: '636a82f2-c5aa-4a05-9736-43f6a6971925',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '636a82f2-c5aa-4a05-9736-43f6a6971925'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:45:47.247Z',
      uuid: '636a82f2-c5aa-4a05-9736-43f6a6971925',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '636a82f2-c5aa-4a05-9736-43f6a6971925'
    }
  ]
} to 36431:0
2025-08-05T18:45:47.796Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'aa759b7a-86b6-4ef2-b547-45e53cdcae13',
      name: 'should handle dark mode consistently',
      body: [Object],
      identifier: 'should handle dark mode consistently',
      scope: 'should handle dark mode consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:45:46.515Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'afcbbb11-4613-4473-ab56-bd00a53adb5c',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'aa759b7a-86b6-4ef2-b547-45e53cdcae13',
      body: [Object],
      scope: 'should handle dark mode consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      started_at: '2025-08-05T18:45:46.531Z'
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '72dc6e53-9665-46c7-81ad-b040c3a283c0',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '636a82f2-c5aa-4a05-9736-43f6a6971925',
      body: [Object],
      scope: 'should handle form elements consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      started_at: '2025-08-05T18:45:37.829Z',
      finished_at: '2025-08-05T18:45:47.227Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '636a82f2-c5aa-4a05-9736-43f6a6971925',
      name: 'should handle form elements consistently',
      body: [Object],
      identifier: 'should handle form elements consistently',
      scope: 'should handle form elements consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 38,
      started_at: '2025-08-05T18:45:37.816Z',
      finished_at: '2025-08-05T18:45:37.854Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:45:47.798Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:45:49.969Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '3e10bbff-65af-47a8-9b1a-680659e9ef62',
    name: 'should maintain accessibility standards',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test color contrast\n' +
        "    const textElements = page.locator('h1, h2, h3, p, span, div').filter({\n" +
        '      hasText: /./\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await textElements.count(), 5); i++) {\n' +
        '      const element = textElements.nth(i);\n' +
        '      const contrast = await element.evaluate(el => {\n' +
        '        const style = window.getComputedStyle(el);\n' +
        '        const backgroundColor = style.backgroundColor;\n' +
        '        const color = style.color;\n' +
        '\n' +
        "        // Simple contrast check - in a real test, you'd use a proper contrast calculation\n" +
        '        return {\n' +
        '          backgroundColor,\n' +
        '          color\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have defined colors\n' +
        "      (0, _test.expect)(contrast.backgroundColor).not.toBe('rgba(0, 0, 0, 0)');\n" +
        "      (0, _test.expect)(contrast.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain accessibility standards',
    scope: 'should maintain accessibility standards',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:45:49.960Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain accessibility standards'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:45:49.974Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'e31e1a0d-ddc0-47e4-abeb-d7e9e8317750',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '3e10bbff-65af-47a8-9b1a-680659e9ef62',
    body: { lang: 'node', code: null },
    scope: 'should maintain accessibility standards',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    started_at: '2025-08-05T18:45:49.970Z'
  }
} to 36431:0
2025-08-05T18:45:51.798Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '3e10bbff-65af-47a8-9b1a-680659e9ef62',
      name: 'should maintain accessibility standards',
      body: [Object],
      identifier: 'should maintain accessibility standards',
      scope: 'should maintain accessibility standards',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:45:49.960Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'e31e1a0d-ddc0-47e4-abeb-d7e9e8317750',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '3e10bbff-65af-47a8-9b1a-680659e9ef62',
      body: [Object],
      scope: 'should maintain accessibility standards',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      started_at: '2025-08-05T18:45:49.970Z'
    }
  }
] to 36431:0
2025-08-05T18:45:51.800Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:45:53.728Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:41.197Z',
      uuid: 'a2742d0e-c698-4640-8bbf-4c0e786b4a5e',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'a2742d0e-c698-4640-8bbf-4c0e786b4a5e'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:41.223Z',
      uuid: 'a2742d0e-c698-4640-8bbf-4c0e786b4a5e',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'a2742d0e-c698-4640-8bbf-4c0e786b4a5e'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:41.260Z',
      uuid: 'a2742d0e-c698-4640-8bbf-4c0e786b4a5e',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'a2742d0e-c698-4640-8bbf-4c0e786b4a5e'
    }
  ]
} to 36431:0
2025-08-05T18:45:53.732Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'a2742d0e-c698-4640-8bbf-4c0e786b4a5e',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'ab50da8e-876a-42b5-b708-5bbdf2ec2050',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent spacing and alignment',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    started_at: '2025-08-05T18:45:41.194Z',
    finished_at: '2025-08-05T18:45:53.720Z'
  }
} to 36431:0
2025-08-05T18:45:53.764Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'ab50da8e-876a-42b5-b708-5bbdf2ec2050',
    name: 'should maintain consistent spacing and alignment',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test that elements have consistent spacing\n' +
        "    const containers = page.locator('div, section, article').filter({\n" +
        '      hasText: /./\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await containers.count(), 10); i++) {\n' +
        '      const container = containers.nth(i);\n' +
        '      const styles = await container.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          margin: computed.margin,\n' +
        '          padding: computed.padding,\n' +
        '          display: computed.display\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have consistent display properties\n' +
        "      (0, _test.expect)(['block', 'flex', 'grid', 'inline-block']).toContain(styles.display);\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent spacing and alignment',
    scope: 'should maintain consistent spacing and alignment',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 42,
    started_at: '2025-08-05T18:45:41.187Z',
    finished_at: '2025-08-05T18:45:41.229Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain consistent spacing and alignment'
    },
    hooks: [ 'a2742d0e-c698-4640-8bbf-4c0e786b4a5e' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:45:53.767Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:45:53.742Z',
      uuid: 'ab50da8e-876a-42b5-b708-5bbdf2ec2050',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'ab50da8e-876a-42b5-b708-5bbdf2ec2050'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:45:53.744Z',
      uuid: 'ab50da8e-876a-42b5-b708-5bbdf2ec2050',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'ab50da8e-876a-42b5-b708-5bbdf2ec2050'
    }
  ]
} to 36431:0
2025-08-05T18:45:53.800Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'a2742d0e-c698-4640-8bbf-4c0e786b4a5e',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'ab50da8e-876a-42b5-b708-5bbdf2ec2050',
      body: [Object],
      scope: 'should maintain consistent spacing and alignment',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      started_at: '2025-08-05T18:45:41.194Z',
      finished_at: '2025-08-05T18:45:53.720Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'ab50da8e-876a-42b5-b708-5bbdf2ec2050',
      name: 'should maintain consistent spacing and alignment',
      body: [Object],
      identifier: 'should maintain consistent spacing and alignment',
      scope: 'should maintain consistent spacing and alignment',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 42,
      started_at: '2025-08-05T18:45:41.187Z',
      finished_at: '2025-08-05T18:45:41.229Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:45:53.801Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:45:56.827Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:46.537Z',
      uuid: 'afcbbb11-4613-4473-ab56-bd00a53adb5c',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'afcbbb11-4613-4473-ab56-bd00a53adb5c'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:46.565Z',
      uuid: 'afcbbb11-4613-4473-ab56-bd00a53adb5c',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'afcbbb11-4613-4473-ab56-bd00a53adb5c'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:46.596Z',
      uuid: 'afcbbb11-4613-4473-ab56-bd00a53adb5c',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'afcbbb11-4613-4473-ab56-bd00a53adb5c'
    }
  ]
} to 36431:0
2025-08-05T18:45:56.833Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'afcbbb11-4613-4473-ab56-bd00a53adb5c',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'aa759b7a-86b6-4ef2-b547-45e53cdcae13',
    body: { lang: 'node', code: null },
    scope: 'should handle dark mode consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    started_at: '2025-08-05T18:45:46.531Z',
    finished_at: '2025-08-05T18:45:56.820Z'
  }
} to 36431:0
2025-08-05T18:45:56.862Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'aa759b7a-86b6-4ef2-b547-45e53cdcae13',
    name: 'should handle dark mode consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test dark mode colors\n' +
        '    await page.evaluate(() => {\n' +
        '      // Simulate dark mode\n' +
        "      document.documentElement.style.colorScheme = 'dark';\n" +
        "      document.documentElement.classList.add('dark');\n" +
        '    });\n' +
        '    await page.waitForTimeout(100);\n' +
        '\n' +
        '    // Check that dark mode colors are applied\n' +
        '    const bodyColor = await page.evaluate(() => {\n' +
        '      return window.getComputedStyle(document.body).backgroundColor;\n' +
        '    });\n' +
        '\n' +
        '    // Should have dark background in dark mode\n' +
        '    (0, _test.expect)(bodyColor).toMatch(/rgb\\(10, 10, 10\\)|rgba\\(10, 10, 10/);\n' +
        '  }'
    },
    identifier: 'should handle dark mode consistently',
    scope: 'should handle dark mode consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 53,
    started_at: '2025-08-05T18:45:46.515Z',
    finished_at: '2025-08-05T18:45:46.568Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle dark mode consistently'
    },
    hooks: [ 'afcbbb11-4613-4473-ab56-bd00a53adb5c' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:45:56.864Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:45:56.848Z',
      uuid: 'aa759b7a-86b6-4ef2-b547-45e53cdcae13',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'aa759b7a-86b6-4ef2-b547-45e53cdcae13'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:45:56.849Z',
      uuid: 'aa759b7a-86b6-4ef2-b547-45e53cdcae13',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'aa759b7a-86b6-4ef2-b547-45e53cdcae13'
    }
  ]
} to 36431:0
2025-08-05T18:45:57.522Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '64fc3a77-8ce2-4b0c-8729-beaa04dded72',
    name: 'should handle images and icons consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    const images = page.locator('img, svg');\n" +
        '    for (let i = 0; i < Math.min(await images.count(), 5); i++) {\n' +
        '      const image = images.nth(i);\n' +
        '\n' +
        '      // Check that images are properly loaded and visible\n' +
        '      const isVisible = await image.isVisible();\n' +
        '      (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        '      // Check that images have proper alt text or aria labels\n' +
        "      const altText = await image.getAttribute('alt');\n" +
        "      const ariaLabel = await image.getAttribute('aria-label');\n" +
        '      if (!altText && !ariaLabel) {\n' +
        '        // For decorative images, this might be acceptable\n' +
        "        const role = await image.getAttribute('role');\n" +
        "        (0, _test.expect)(role === 'presentation' || role === 'img').toBe(true);\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle images and icons consistently',
    scope: 'should handle images and icons consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:45:57.508Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle images and icons consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:45:57.535Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '94c43a66-5e2c-4344-b1ff-dbac10ff617a',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '64fc3a77-8ce2-4b0c-8729-beaa04dded72',
    body: { lang: 'node', code: null },
    scope: 'should handle images and icons consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    started_at: '2025-08-05T18:45:57.528Z'
  }
} to 36431:0
2025-08-05T18:45:57.801Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'afcbbb11-4613-4473-ab56-bd00a53adb5c',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'aa759b7a-86b6-4ef2-b547-45e53cdcae13',
      body: [Object],
      scope: 'should handle dark mode consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      started_at: '2025-08-05T18:45:46.531Z',
      finished_at: '2025-08-05T18:45:56.820Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'aa759b7a-86b6-4ef2-b547-45e53cdcae13',
      name: 'should handle dark mode consistently',
      body: [Object],
      identifier: 'should handle dark mode consistently',
      scope: 'should handle dark mode consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 53,
      started_at: '2025-08-05T18:45:46.515Z',
      finished_at: '2025-08-05T18:45:46.568Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '64fc3a77-8ce2-4b0c-8729-beaa04dded72',
      name: 'should handle images and icons consistently',
      body: [Object],
      identifier: 'should handle images and icons consistently',
      scope: 'should handle images and icons consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:45:57.508Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '94c43a66-5e2c-4344-b1ff-dbac10ff617a',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '64fc3a77-8ce2-4b0c-8729-beaa04dded72',
      body: [Object],
      scope: 'should handle images and icons consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      started_at: '2025-08-05T18:45:57.528Z'
    }
  }
] to 36431:0
2025-08-05T18:45:57.802Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:45:59.896Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'dc3c71ee-9ad7-4775-9994-e0e95fe81bc2',
    name: 'should display assessment questions consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Wait for assessment content to load\n' +
        `    await page.waitForSelector('[data-testid="assessment-question"], .question, h1, h2', {\n` +
        '      timeout: 10000\n' +
        '    });\n' +
        '\n' +
        '    // Check that questions are visible and properly styled\n' +
        `    const questions = page.locator('[data-testid="assessment-question"], .question, h1, h2').filter({\n` +
        '      hasText: /./\n' +
        '    });\n' +
        '    (0, _test.expect)(await questions.count()).toBeGreaterThan(0);\n' +
        '    for (let i = 0; i < Math.min(await questions.count(), 3); i++) {\n' +
        '      const question = questions.nth(i);\n' +
        '\n' +
        '      // Check visibility\n' +
        '      await (0, _test.expect)(question).toBeVisible();\n' +
        '\n' +
        '      // Check styling\n' +
        '      const styles = await question.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          fontSize: computed.fontSize,\n' +
        '          fontWeight: computed.fontWeight,\n' +
        '          color: computed.color,\n' +
        '          lineHeight: computed.lineHeight\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have readable text styling\n' +
        '      (0, _test.expect)(parseFloat(styles.fontSize)).toBeGreaterThan(12);\n' +
        "      (0, _test.expect)(styles.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display assessment questions consistently',
    scope: 'should display assessment questions consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:45:59.884Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should display assessment questions consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:45:59.910Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '35662ef0-92c4-416b-9b99-b1b6e479adc5',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'dc3c71ee-9ad7-4775-9994-e0e95fe81bc2',
    body: { lang: 'node', code: null },
    scope: 'should display assessment questions consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    started_at: '2025-08-05T18:45:59.895Z'
  }
} to 36431:0
2025-08-05T18:46:01.803Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'dc3c71ee-9ad7-4775-9994-e0e95fe81bc2',
      name: 'should display assessment questions consistently',
      body: [Object],
      identifier: 'should display assessment questions consistently',
      scope: 'should display assessment questions consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:45:59.884Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '35662ef0-92c4-416b-9b99-b1b6e479adc5',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'dc3c71ee-9ad7-4775-9994-e0e95fe81bc2',
      body: [Object],
      scope: 'should display assessment questions consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      started_at: '2025-08-05T18:45:59.895Z'
    }
  }
] to 36431:0
2025-08-05T18:46:01.810Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:46:04.527Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:59.899Z',
      uuid: '35662ef0-92c4-416b-9b99-b1b6e479adc5',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '35662ef0-92c4-416b-9b99-b1b6e479adc5'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:59.928Z',
      uuid: '35662ef0-92c4-416b-9b99-b1b6e479adc5',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '35662ef0-92c4-416b-9b99-b1b6e479adc5'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:59.954Z',
      uuid: '35662ef0-92c4-416b-9b99-b1b6e479adc5',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '35662ef0-92c4-416b-9b99-b1b6e479adc5'
    }
  ]
} to 36431:0
2025-08-05T18:46:04.530Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '35662ef0-92c4-416b-9b99-b1b6e479adc5',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'dc3c71ee-9ad7-4775-9994-e0e95fe81bc2',
    body: { lang: 'node', code: null },
    scope: 'should display assessment questions consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    started_at: '2025-08-05T18:45:59.895Z',
    finished_at: '2025-08-05T18:46:04.523Z'
  }
} to 36431:0
2025-08-05T18:46:04.553Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'dc3c71ee-9ad7-4775-9994-e0e95fe81bc2',
    name: 'should display assessment questions consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Wait for assessment content to load\n' +
        `    await page.waitForSelector('[data-testid="assessment-question"], .question, h1, h2', {\n` +
        '      timeout: 10000\n' +
        '    });\n' +
        '\n' +
        '    // Check that questions are visible and properly styled\n' +
        `    const questions = page.locator('[data-testid="assessment-question"], .question, h1, h2').filter({\n` +
        '      hasText: /./\n' +
        '    });\n' +
        '    (0, _test.expect)(await questions.count()).toBeGreaterThan(0);\n' +
        '    for (let i = 0; i < Math.min(await questions.count(), 3); i++) {\n' +
        '      const question = questions.nth(i);\n' +
        '\n' +
        '      // Check visibility\n' +
        '      await (0, _test.expect)(question).toBeVisible();\n' +
        '\n' +
        '      // Check styling\n' +
        '      const styles = await question.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          fontSize: computed.fontSize,\n' +
        '          fontWeight: computed.fontWeight,\n' +
        '          color: computed.color,\n' +
        '          lineHeight: computed.lineHeight\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have readable text styling\n' +
        '      (0, _test.expect)(parseFloat(styles.fontSize)).toBeGreaterThan(12);\n' +
        "      (0, _test.expect)(styles.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display assessment questions consistently',
    scope: 'should display assessment questions consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 43,
    started_at: '2025-08-05T18:45:59.884Z',
    finished_at: '2025-08-05T18:45:59.927Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should display assessment questions consistently'
    },
    hooks: [ '35662ef0-92c4-416b-9b99-b1b6e479adc5' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:04.554Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:04.540Z',
      uuid: 'dc3c71ee-9ad7-4775-9994-e0e95fe81bc2',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'dc3c71ee-9ad7-4775-9994-e0e95fe81bc2'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:04.540Z',
      uuid: 'dc3c71ee-9ad7-4775-9994-e0e95fe81bc2',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'dc3c71ee-9ad7-4775-9994-e0e95fe81bc2'
    }
  ]
} to 36431:0
2025-08-05T18:46:05.804Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '35662ef0-92c4-416b-9b99-b1b6e479adc5',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'dc3c71ee-9ad7-4775-9994-e0e95fe81bc2',
      body: [Object],
      scope: 'should display assessment questions consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      started_at: '2025-08-05T18:45:59.895Z',
      finished_at: '2025-08-05T18:46:04.523Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'dc3c71ee-9ad7-4775-9994-e0e95fe81bc2',
      name: 'should display assessment questions consistently',
      body: [Object],
      identifier: 'should display assessment questions consistently',
      scope: 'should display assessment questions consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 43,
      started_at: '2025-08-05T18:45:59.884Z',
      finished_at: '2025-08-05T18:45:59.927Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:46:05.806Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:46:07.652Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '54bbf427-b932-4b14-ab59-e0873e0fd5a8',
    name: 'should handle form inputs consistently across browsers',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for form inputs (radio buttons, checkboxes, text inputs)\n' +
        "    const inputs = page.locator('input, textarea, select');\n" +
        '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
        '      const input = inputs.nth(i);\n' +
        '\n' +
        '      // Check input is visible and interactive\n' +
        '      await (0, _test.expect)(input).toBeVisible();\n' +
        "      const inputType = await input.getAttribute('type');\n" +
        "      if (inputType === 'radio' || inputType === 'checkbox') {\n" +
        '        // Test radio/checkbox functionality\n' +
        '        await input.click();\n' +
        '\n' +
        '        // Verify selection state\n' +
        '        const isChecked = await input.isChecked();\n' +
        '        (0, _test.expect)(isChecked).toBe(true);\n' +
        "      } else if (inputType === 'text' || inputType === 'textarea') {\n" +
        '        // Test text input functionality\n' +
        "        await input.fill('Test input');\n" +
        '        const value = await input.inputValue();\n' +
        "        (0, _test.expect)(value).toBe('Test input');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form inputs consistently across browsers',
    scope: 'should handle form inputs consistently across browsers',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:46:07.641Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form inputs consistently across browsers'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:07.653Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '1ac764ad-e602-4fc8-8b07-28ef2f3637fc',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '54bbf427-b932-4b14-ab59-e0873e0fd5a8',
    body: { lang: 'node', code: null },
    scope: 'should handle form inputs consistently across browsers',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    started_at: '2025-08-05T18:46:07.647Z'
  }
} to 36431:0
2025-08-05T18:46:07.806Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '54bbf427-b932-4b14-ab59-e0873e0fd5a8',
      name: 'should handle form inputs consistently across browsers',
      body: [Object],
      identifier: 'should handle form inputs consistently across browsers',
      scope: 'should handle form inputs consistently across browsers',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:46:07.641Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '1ac764ad-e602-4fc8-8b07-28ef2f3637fc',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '54bbf427-b932-4b14-ab59-e0873e0fd5a8',
      body: [Object],
      scope: 'should handle form inputs consistently across browsers',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      started_at: '2025-08-05T18:46:07.647Z'
    }
  }
] to 36431:0
2025-08-05T18:46:07.808Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:46:11.985Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:46:07.650Z',
      uuid: '1ac764ad-e602-4fc8-8b07-28ef2f3637fc',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '1ac764ad-e602-4fc8-8b07-28ef2f3637fc'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:46:07.670Z',
      uuid: '1ac764ad-e602-4fc8-8b07-28ef2f3637fc',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '1ac764ad-e602-4fc8-8b07-28ef2f3637fc'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:46:07.695Z',
      uuid: '1ac764ad-e602-4fc8-8b07-28ef2f3637fc',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '1ac764ad-e602-4fc8-8b07-28ef2f3637fc'
    }
  ]
} to 36431:0
2025-08-05T18:46:12.000Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '1ac764ad-e602-4fc8-8b07-28ef2f3637fc',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '54bbf427-b932-4b14-ab59-e0873e0fd5a8',
    body: { lang: 'node', code: null },
    scope: 'should handle form inputs consistently across browsers',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    started_at: '2025-08-05T18:46:07.647Z',
    finished_at: '2025-08-05T18:46:11.978Z'
  }
} to 36431:0
2025-08-05T18:46:12.066Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '54bbf427-b932-4b14-ab59-e0873e0fd5a8',
    name: 'should handle form inputs consistently across browsers',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for form inputs (radio buttons, checkboxes, text inputs)\n' +
        "    const inputs = page.locator('input, textarea, select');\n" +
        '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
        '      const input = inputs.nth(i);\n' +
        '\n' +
        '      // Check input is visible and interactive\n' +
        '      await (0, _test.expect)(input).toBeVisible();\n' +
        "      const inputType = await input.getAttribute('type');\n" +
        "      if (inputType === 'radio' || inputType === 'checkbox') {\n" +
        '        // Test radio/checkbox functionality\n' +
        '        await input.click();\n' +
        '\n' +
        '        // Verify selection state\n' +
        '        const isChecked = await input.isChecked();\n' +
        '        (0, _test.expect)(isChecked).toBe(true);\n' +
        "      } else if (inputType === 'text' || inputType === 'textarea') {\n" +
        '        // Test text input functionality\n' +
        "        await input.fill('Test input');\n" +
        '        const value = await input.inputValue();\n' +
        "        (0, _test.expect)(value).toBe('Test input');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form inputs consistently across browsers',
    scope: 'should handle form inputs consistently across browsers',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 69,
    started_at: '2025-08-05T18:46:07.641Z',
    finished_at: '2025-08-05T18:46:07.710Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form inputs consistently across browsers'
    },
    hooks: [ '1ac764ad-e602-4fc8-8b07-28ef2f3637fc' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:12.067Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:12.035Z',
      uuid: '54bbf427-b932-4b14-ab59-e0873e0fd5a8',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '54bbf427-b932-4b14-ab59-e0873e0fd5a8'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:12.036Z',
      uuid: '54bbf427-b932-4b14-ab59-e0873e0fd5a8',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '54bbf427-b932-4b14-ab59-e0873e0fd5a8'
    }
  ]
} to 36431:0
2025-08-05T18:46:13.859Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '1ac764ad-e602-4fc8-8b07-28ef2f3637fc',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '54bbf427-b932-4b14-ab59-e0873e0fd5a8',
      body: [Object],
      scope: 'should handle form inputs consistently across browsers',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      started_at: '2025-08-05T18:46:07.647Z',
      finished_at: '2025-08-05T18:46:11.978Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '54bbf427-b932-4b14-ab59-e0873e0fd5a8',
      name: 'should handle form inputs consistently across browsers',
      body: [Object],
      identifier: 'should handle form inputs consistently across browsers',
      scope: 'should handle form inputs consistently across browsers',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 69,
      started_at: '2025-08-05T18:46:07.641Z',
      finished_at: '2025-08-05T18:46:07.710Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:46:13.861Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:46:14.504Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:57.532Z',
      uuid: '94c43a66-5e2c-4344-b1ff-dbac10ff617a',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '94c43a66-5e2c-4344-b1ff-dbac10ff617a'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:57.555Z',
      uuid: '94c43a66-5e2c-4344-b1ff-dbac10ff617a',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '94c43a66-5e2c-4344-b1ff-dbac10ff617a'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:57.583Z',
      uuid: '94c43a66-5e2c-4344-b1ff-dbac10ff617a',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '94c43a66-5e2c-4344-b1ff-dbac10ff617a'
    }
  ]
} to 36431:0
2025-08-05T18:46:14.510Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '94c43a66-5e2c-4344-b1ff-dbac10ff617a',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '64fc3a77-8ce2-4b0c-8729-beaa04dded72',
    body: { lang: 'node', code: null },
    scope: 'should handle images and icons consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    started_at: '2025-08-05T18:45:57.528Z',
    finished_at: '2025-08-05T18:46:14.498Z'
  }
} to 36431:0
2025-08-05T18:46:14.540Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '64fc3a77-8ce2-4b0c-8729-beaa04dded72',
    name: 'should handle images and icons consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    const images = page.locator('img, svg');\n" +
        '    for (let i = 0; i < Math.min(await images.count(), 5); i++) {\n' +
        '      const image = images.nth(i);\n' +
        '\n' +
        '      // Check that images are properly loaded and visible\n' +
        '      const isVisible = await image.isVisible();\n' +
        '      (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        '      // Check that images have proper alt text or aria labels\n' +
        "      const altText = await image.getAttribute('alt');\n" +
        "      const ariaLabel = await image.getAttribute('aria-label');\n" +
        '      if (!altText && !ariaLabel) {\n' +
        '        // For decorative images, this might be acceptable\n' +
        "        const role = await image.getAttribute('role');\n" +
        "        (0, _test.expect)(role === 'presentation' || role === 'img').toBe(true);\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle images and icons consistently',
    scope: 'should handle images and icons consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 45,
    started_at: '2025-08-05T18:45:57.508Z',
    finished_at: '2025-08-05T18:45:57.553Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle images and icons consistently'
    },
    hooks: [ '94c43a66-5e2c-4344-b1ff-dbac10ff617a' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:14.541Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:14.528Z',
      uuid: '64fc3a77-8ce2-4b0c-8729-beaa04dded72',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '64fc3a77-8ce2-4b0c-8729-beaa04dded72'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:14.528Z',
      uuid: '64fc3a77-8ce2-4b0c-8729-beaa04dded72',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '64fc3a77-8ce2-4b0c-8729-beaa04dded72'
    }
  ]
} to 36431:0
2025-08-05T18:46:15.859Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '94c43a66-5e2c-4344-b1ff-dbac10ff617a',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '64fc3a77-8ce2-4b0c-8729-beaa04dded72',
      body: [Object],
      scope: 'should handle images and icons consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      started_at: '2025-08-05T18:45:57.528Z',
      finished_at: '2025-08-05T18:46:14.498Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '64fc3a77-8ce2-4b0c-8729-beaa04dded72',
      name: 'should handle images and icons consistently',
      body: [Object],
      identifier: 'should handle images and icons consistently',
      scope: 'should handle images and icons consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 45,
      started_at: '2025-08-05T18:45:57.508Z',
      finished_at: '2025-08-05T18:45:57.553Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:46:15.860Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:46:16.627Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'db4efd9d-4f1b-436a-bb00-0bd287d98f21',
    name: 'should maintain consistent button styling and behavior',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        `    const buttons = page.locator('button, [role="button"], input[type="submit"]');\n` +
        '    for (let i = 0; i < Math.min(await buttons.count(), 3); i++) {\n' +
        '      const button = buttons.nth(i);\n' +
        '\n' +
        '      // Check button styling\n' +
        '      const styles = await button.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          backgroundColor: computed.backgroundColor,\n' +
        '          color: computed.color,\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding,\n' +
        '          cursor: computed.cursor\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have proper button styling\n' +
        "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '\n' +
        '      // Check button text is readable\n' +
        '      const buttonText = await button.textContent();\n' +
        '      if (buttonText && buttonText.trim()) {\n' +
        '        (0, _test.expect)(buttonText.trim().length).toBeGreaterThan(0);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent button styling and behavior',
    scope: 'should maintain consistent button styling and behavior',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:46:16.615Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent button styling and behavior'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:16.643Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'a02fe76b-4d22-48c6-b777-afec6650874c',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'db4efd9d-4f1b-436a-bb00-0bd287d98f21',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent button styling and behavior',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    started_at: '2025-08-05T18:46:16.627Z'
  }
} to 36431:0
2025-08-05T18:46:17.805Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b3c5f057-e945-4e1a-b431-ac36f5f8952a',
    name: 'should handle responsive design for assessment flow',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    const viewports = [{\n' +
        '      width: 375,\n' +
        '      height: 667,\n' +
        "      name: 'Mobile'\n" +
        '    }, {\n' +
        '      width: 768,\n' +
        '      height: 1024,\n' +
        "      name: 'Tablet'\n" +
        '    }, {\n' +
        '      width: 1024,\n' +
        '      height: 768,\n' +
        "      name: 'Desktop'\n" +
        '    }];\n' +
        '    for (const viewport of viewports) {\n' +
        '      await page.setViewportSize({\n' +
        '        width: viewport.width,\n' +
        '        height: viewport.height\n' +
        '      });\n' +
        '      await page.waitForTimeout(500);\n' +
        '\n' +
        '      // Check that assessment content is properly contained\n' +
        `      const container = page.locator('main, .container, .assessment-container, [role="main"]').first();\n` +
        '      if ((await container.count()) > 0) {\n' +
        '        const isVisible = await container.isVisible();\n' +
        '        (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        '        // Check no horizontal overflow\n' +
        '        const overflow = await page.evaluate(() => {\n' +
        '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
        '        });\n' +
        '        (0, _test.expect)(overflow).toBe(true);\n' +
        '      }\n' +
        '\n' +
        '      // Check that form elements are still accessible\n' +
        "      const inputs = page.locator('input, textarea, select');\n" +
        '      if ((await inputs.count()) > 0) {\n' +
        '        const firstInput = inputs.first();\n' +
        '        await (0, _test.expect)(firstInput).toBeVisible();\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle responsive design for assessment flow',
    scope: 'should handle responsive design for assessment flow',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:46:17.793Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle responsive design for assessment flow'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:17.813Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'ddc41551-03df-48bb-995e-3912a16c3230',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'b3c5f057-e945-4e1a-b431-ac36f5f8952a',
    body: { lang: 'node', code: null },
    scope: 'should handle responsive design for assessment flow',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    started_at: '2025-08-05T18:46:17.800Z'
  }
} to 36431:0
2025-08-05T18:46:17.860Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'db4efd9d-4f1b-436a-bb00-0bd287d98f21',
      name: 'should maintain consistent button styling and behavior',
      body: [Object],
      identifier: 'should maintain consistent button styling and behavior',
      scope: 'should maintain consistent button styling and behavior',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:46:16.615Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'a02fe76b-4d22-48c6-b777-afec6650874c',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'db4efd9d-4f1b-436a-bb00-0bd287d98f21',
      body: [Object],
      scope: 'should maintain consistent button styling and behavior',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      started_at: '2025-08-05T18:46:16.627Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b3c5f057-e945-4e1a-b431-ac36f5f8952a',
      name: 'should handle responsive design for assessment flow',
      body: [Object],
      identifier: 'should handle responsive design for assessment flow',
      scope: 'should handle responsive design for assessment flow',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:46:17.793Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'ddc41551-03df-48bb-995e-3912a16c3230',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'b3c5f057-e945-4e1a-b431-ac36f5f8952a',
      body: [Object],
      scope: 'should handle responsive design for assessment flow',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      started_at: '2025-08-05T18:46:17.800Z'
    }
  }
] to 36431:0
2025-08-05T18:46:17.861Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:46:21.077Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:46:16.630Z',
      uuid: 'a02fe76b-4d22-48c6-b777-afec6650874c',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'a02fe76b-4d22-48c6-b777-afec6650874c'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:46:16.656Z',
      uuid: 'a02fe76b-4d22-48c6-b777-afec6650874c',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'a02fe76b-4d22-48c6-b777-afec6650874c'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:46:16.687Z',
      uuid: 'a02fe76b-4d22-48c6-b777-afec6650874c',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'a02fe76b-4d22-48c6-b777-afec6650874c'
    }
  ]
} to 36431:0
2025-08-05T18:46:21.081Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'a02fe76b-4d22-48c6-b777-afec6650874c',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'db4efd9d-4f1b-436a-bb00-0bd287d98f21',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent button styling and behavior',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    started_at: '2025-08-05T18:46:16.627Z',
    finished_at: '2025-08-05T18:46:21.073Z'
  }
} to 36431:0
2025-08-05T18:46:21.101Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'db4efd9d-4f1b-436a-bb00-0bd287d98f21',
    name: 'should maintain consistent button styling and behavior',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        `    const buttons = page.locator('button, [role="button"], input[type="submit"]');\n` +
        '    for (let i = 0; i < Math.min(await buttons.count(), 3); i++) {\n' +
        '      const button = buttons.nth(i);\n' +
        '\n' +
        '      // Check button styling\n' +
        '      const styles = await button.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          backgroundColor: computed.backgroundColor,\n' +
        '          color: computed.color,\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding,\n' +
        '          cursor: computed.cursor\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have proper button styling\n' +
        "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '\n' +
        '      // Check button text is readable\n' +
        '      const buttonText = await button.textContent();\n' +
        '      if (buttonText && buttonText.trim()) {\n' +
        '        (0, _test.expect)(buttonText.trim().length).toBeGreaterThan(0);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent button styling and behavior',
    scope: 'should maintain consistent button styling and behavior',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 38,
    started_at: '2025-08-05T18:46:16.615Z',
    finished_at: '2025-08-05T18:46:16.653Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent button styling and behavior'
    },
    hooks: [ 'a02fe76b-4d22-48c6-b777-afec6650874c' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:21.101Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:21.089Z',
      uuid: 'db4efd9d-4f1b-436a-bb00-0bd287d98f21',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'db4efd9d-4f1b-436a-bb00-0bd287d98f21'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:21.090Z',
      uuid: 'db4efd9d-4f1b-436a-bb00-0bd287d98f21',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'db4efd9d-4f1b-436a-bb00-0bd287d98f21'
    }
  ]
} to 36431:0
2025-08-05T18:46:21.553Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:49.973Z',
      uuid: 'e31e1a0d-ddc0-47e4-abeb-d7e9e8317750',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'e31e1a0d-ddc0-47e4-abeb-d7e9e8317750'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:49.993Z',
      uuid: 'e31e1a0d-ddc0-47e4-abeb-d7e9e8317750',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'e31e1a0d-ddc0-47e4-abeb-d7e9e8317750'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:45:50.019Z',
      uuid: 'e31e1a0d-ddc0-47e4-abeb-d7e9e8317750',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'e31e1a0d-ddc0-47e4-abeb-d7e9e8317750'
    }
  ]
} to 36431:0
2025-08-05T18:46:21.558Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'e31e1a0d-ddc0-47e4-abeb-d7e9e8317750',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '3e10bbff-65af-47a8-9b1a-680659e9ef62',
    body: { lang: 'node', code: null },
    scope: 'should maintain accessibility standards',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    started_at: '2025-08-05T18:45:49.970Z',
    finished_at: '2025-08-05T18:46:21.544Z'
  }
} to 36431:0
2025-08-05T18:46:21.585Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '3e10bbff-65af-47a8-9b1a-680659e9ef62',
    name: 'should maintain accessibility standards',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test color contrast\n' +
        "    const textElements = page.locator('h1, h2, h3, p, span, div').filter({\n" +
        '      hasText: /./\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await textElements.count(), 5); i++) {\n' +
        '      const element = textElements.nth(i);\n' +
        '      const contrast = await element.evaluate(el => {\n' +
        '        const style = window.getComputedStyle(el);\n' +
        '        const backgroundColor = style.backgroundColor;\n' +
        '        const color = style.color;\n' +
        '\n' +
        "        // Simple contrast check - in a real test, you'd use a proper contrast calculation\n" +
        '        return {\n' +
        '          backgroundColor,\n' +
        '          color\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have defined colors\n' +
        "      (0, _test.expect)(contrast.backgroundColor).not.toBe('rgba(0, 0, 0, 0)');\n" +
        "      (0, _test.expect)(contrast.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain accessibility standards',
    scope: 'should maintain accessibility standards',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 39,
    started_at: '2025-08-05T18:45:49.960Z',
    finished_at: '2025-08-05T18:45:49.999Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain accessibility standards'
    },
    hooks: [ 'e31e1a0d-ddc0-47e4-abeb-d7e9e8317750' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:21.586Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:21.572Z',
      uuid: '3e10bbff-65af-47a8-9b1a-680659e9ef62',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '3e10bbff-65af-47a8-9b1a-680659e9ef62'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:21.573Z',
      uuid: '3e10bbff-65af-47a8-9b1a-680659e9ef62',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '3e10bbff-65af-47a8-9b1a-680659e9ef62'
    }
  ]
} to 36431:0
2025-08-05T18:46:21.865Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'a02fe76b-4d22-48c6-b777-afec6650874c',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'db4efd9d-4f1b-436a-bb00-0bd287d98f21',
      body: [Object],
      scope: 'should maintain consistent button styling and behavior',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      started_at: '2025-08-05T18:46:16.627Z',
      finished_at: '2025-08-05T18:46:21.073Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'db4efd9d-4f1b-436a-bb00-0bd287d98f21',
      name: 'should maintain consistent button styling and behavior',
      body: [Object],
      identifier: 'should maintain consistent button styling and behavior',
      scope: 'should maintain consistent button styling and behavior',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 38,
      started_at: '2025-08-05T18:46:16.615Z',
      finished_at: '2025-08-05T18:46:16.653Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'e31e1a0d-ddc0-47e4-abeb-d7e9e8317750',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '3e10bbff-65af-47a8-9b1a-680659e9ef62',
      body: [Object],
      scope: 'should maintain accessibility standards',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      started_at: '2025-08-05T18:45:49.970Z',
      finished_at: '2025-08-05T18:46:21.544Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '3e10bbff-65af-47a8-9b1a-680659e9ef62',
      name: 'should maintain accessibility standards',
      body: [Object],
      identifier: 'should maintain accessibility standards',
      scope: 'should maintain accessibility standards',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 39,
      started_at: '2025-08-05T18:45:49.960Z',
      finished_at: '2025-08-05T18:45:49.999Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:46:21.866Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:46:22.271Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:46:17.802Z',
      uuid: 'ddc41551-03df-48bb-995e-3912a16c3230',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'ddc41551-03df-48bb-995e-3912a16c3230'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:46:17.827Z',
      uuid: 'ddc41551-03df-48bb-995e-3912a16c3230',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'ddc41551-03df-48bb-995e-3912a16c3230'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:46:17.853Z',
      uuid: 'ddc41551-03df-48bb-995e-3912a16c3230',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'ddc41551-03df-48bb-995e-3912a16c3230'
    }
  ]
} to 36431:0
2025-08-05T18:46:22.274Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'ddc41551-03df-48bb-995e-3912a16c3230',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'b3c5f057-e945-4e1a-b431-ac36f5f8952a',
    body: { lang: 'node', code: null },
    scope: 'should handle responsive design for assessment flow',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    started_at: '2025-08-05T18:46:17.800Z',
    finished_at: '2025-08-05T18:46:22.267Z'
  }
} to 36431:0
2025-08-05T18:46:22.303Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b3c5f057-e945-4e1a-b431-ac36f5f8952a',
    name: 'should handle responsive design for assessment flow',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    const viewports = [{\n' +
        '      width: 375,\n' +
        '      height: 667,\n' +
        "      name: 'Mobile'\n" +
        '    }, {\n' +
        '      width: 768,\n' +
        '      height: 1024,\n' +
        "      name: 'Tablet'\n" +
        '    }, {\n' +
        '      width: 1024,\n' +
        '      height: 768,\n' +
        "      name: 'Desktop'\n" +
        '    }];\n' +
        '    for (const viewport of viewports) {\n' +
        '      await page.setViewportSize({\n' +
        '        width: viewport.width,\n' +
        '        height: viewport.height\n' +
        '      });\n' +
        '      await page.waitForTimeout(500);\n' +
        '\n' +
        '      // Check that assessment content is properly contained\n' +
        `      const container = page.locator('main, .container, .assessment-container, [role="main"]').first();\n` +
        '      if ((await container.count()) > 0) {\n' +
        '        const isVisible = await container.isVisible();\n' +
        '        (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        '        // Check no horizontal overflow\n' +
        '        const overflow = await page.evaluate(() => {\n' +
        '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
        '        });\n' +
        '        (0, _test.expect)(overflow).toBe(true);\n' +
        '      }\n' +
        '\n' +
        '      // Check that form elements are still accessible\n' +
        "      const inputs = page.locator('input, textarea, select');\n" +
        '      if ((await inputs.count()) > 0) {\n' +
        '        const firstInput = inputs.first();\n' +
        '        await (0, _test.expect)(firstInput).toBeVisible();\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle responsive design for assessment flow',
    scope: 'should handle responsive design for assessment flow',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 41,
    started_at: '2025-08-05T18:46:17.793Z',
    finished_at: '2025-08-05T18:46:17.834Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle responsive design for assessment flow'
    },
    hooks: [ 'ddc41551-03df-48bb-995e-3912a16c3230' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:22.304Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:22.289Z',
      uuid: 'b3c5f057-e945-4e1a-b431-ac36f5f8952a',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b3c5f057-e945-4e1a-b431-ac36f5f8952a'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:22.290Z',
      uuid: 'b3c5f057-e945-4e1a-b431-ac36f5f8952a',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b3c5f057-e945-4e1a-b431-ac36f5f8952a'
    }
  ]
} to 36431:0
2025-08-05T18:46:23.866Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'ddc41551-03df-48bb-995e-3912a16c3230',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'b3c5f057-e945-4e1a-b431-ac36f5f8952a',
      body: [Object],
      scope: 'should handle responsive design for assessment flow',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      started_at: '2025-08-05T18:46:17.800Z',
      finished_at: '2025-08-05T18:46:22.267Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b3c5f057-e945-4e1a-b431-ac36f5f8952a',
      name: 'should handle responsive design for assessment flow',
      body: [Object],
      identifier: 'should handle responsive design for assessment flow',
      scope: 'should handle responsive design for assessment flow',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 41,
      started_at: '2025-08-05T18:46:17.793Z',
      finished_at: '2025-08-05T18:46:17.834Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:46:23.867Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:46:24.492Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '70bb963c-a859-4b6c-bbf9-319c1f3d353b',
    name: 'should handle form validation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for submit buttons\n' +
        `    const submitButtons = page.locator('button[type="submit"], input[type="submit"], button:has-text("Submit"), button:has-text("Next")');\n` +
        '    if ((await submitButtons.count()) > 0) {\n' +
        '      const submitButton = submitButtons.first();\n' +
        '\n' +
        '      // Try to submit without filling required fields\n' +
        '      await submitButton.click();\n' +
        '\n' +
        '      // Wait for potential validation messages\n' +
        '      await page.waitForTimeout(1000);\n' +
        '\n' +
        '      // Check for validation messages\n' +
        `      const errorMessages = page.locator('.error, .validation-error, [role="alert"], .text-red-500, .text-red-600');\n` +
        '\n' +
        '      // If there are validation errors, they should be visible and styled consistently\n' +
        '      if ((await errorMessages.count()) > 0) {\n' +
        '        for (let i = 0; i < Math.min(await errorMessages.count(), 3); i++) {\n' +
        '          const error = errorMessages.nth(i);\n' +
        '          await (0, _test.expect)(error).toBeVisible();\n' +
        '\n' +
        '          // Check error styling\n' +
        '          const color = await error.evaluate(el => {\n' +
        '            return window.getComputedStyle(el).color;\n' +
        '          });\n' +
        '\n' +
        '          // Should have error color styling\n' +
        '          (0, _test.expect)(color).toMatch(/rgb\\(239, 68, 68\\)|rgb\\(220, 38, 38\\)|red/);\n' +
        '        }\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form validation consistently',
    scope: 'should handle form validation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:46:24.480Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form validation consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:24.501Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'e8227751-de1d-4f41-a01e-d7f73de05f37',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '70bb963c-a859-4b6c-bbf9-319c1f3d353b',
    body: { lang: 'node', code: null },
    scope: 'should handle form validation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    started_at: '2025-08-05T18:46:24.493Z'
  }
} to 36431:0
2025-08-05T18:46:24.803Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'c796b60d-0394-460a-9627-99c774a8fa4b',
    name: 'should maintain consistent loading states',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for loading indicators\n' +
        `    const loadingIndicators = page.locator('.loading, .spinner, [aria-busy="true"], .animate-spin');\n` +
        '    if ((await loadingIndicators.count()) > 0) {\n' +
        '      for (let i = 0; i < Math.min(await loadingIndicators.count(), 3); i++) {\n' +
        '        const loader = loadingIndicators.nth(i);\n' +
        '\n' +
        '        // Check loading indicator is visible\n' +
        '        await (0, _test.expect)(loader).toBeVisible();\n' +
        '\n' +
        '        // Check it has proper styling\n' +
        '        const styles = await loader.evaluate(el => {\n' +
        '          const computed = window.getComputedStyle(el);\n' +
        '          return {\n' +
        '            display: computed.display,\n' +
        '            visibility: computed.visibility\n' +
        '          };\n' +
        '        });\n' +
        "        (0, _test.expect)(styles.display).not.toBe('none');\n" +
        "        (0, _test.expect)(styles.visibility).not.toBe('hidden');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent loading states',
    scope: 'should maintain consistent loading states',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:46:24.791Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent loading states'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:24.806Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '03913740-fefa-4a1c-986a-bc554ede84aa',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'c796b60d-0394-460a-9627-99c774a8fa4b',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent loading states',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    started_at: '2025-08-05T18:46:24.800Z'
  }
} to 36431:0
2025-08-05T18:46:25.672Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b42395d3-e142-4b81-96c1-cb1f8f05bd69',
    name: 'should handle navigation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test navigation buttons/links\n' +
        `    const navButtons = page.locator('a, button, [role="link"]').filter({\n` +
        '      hasText: /back|next|previous|continue/i\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await navButtons.count(), 3); i++) {\n' +
        '      const navButton = navButtons.nth(i);\n' +
        '\n' +
        '      // Check navigation element is visible and clickable\n' +
        '      await (0, _test.expect)(navButton).toBeVisible();\n' +
        '      const styles = await navButton.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          cursor: computed.cursor,\n' +
        '          pointerEvents: computed.pointerEvents\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should be clickable\n' +
        "      (0, _test.expect)(['pointer', 'default']).toContain(styles.cursor);\n" +
        "      (0, _test.expect)(styles.pointerEvents).not.toBe('none');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle navigation consistently',
    scope: 'should handle navigation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:46:25.658Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle navigation consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:25.673Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '67014af6-7471-4388-a228-405b57989458',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'b42395d3-e142-4b81-96c1-cb1f8f05bd69',
    body: { lang: 'node', code: null },
    scope: 'should handle navigation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    started_at: '2025-08-05T18:46:25.668Z'
  }
} to 36431:0
2025-08-05T18:46:25.868Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '70bb963c-a859-4b6c-bbf9-319c1f3d353b',
      name: 'should handle form validation consistently',
      body: [Object],
      identifier: 'should handle form validation consistently',
      scope: 'should handle form validation consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:46:24.480Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'e8227751-de1d-4f41-a01e-d7f73de05f37',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '70bb963c-a859-4b6c-bbf9-319c1f3d353b',
      body: [Object],
      scope: 'should handle form validation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      started_at: '2025-08-05T18:46:24.493Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'c796b60d-0394-460a-9627-99c774a8fa4b',
      name: 'should maintain consistent loading states',
      body: [Object],
      identifier: 'should maintain consistent loading states',
      scope: 'should maintain consistent loading states',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:46:24.791Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '03913740-fefa-4a1c-986a-bc554ede84aa',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'c796b60d-0394-460a-9627-99c774a8fa4b',
      body: [Object],
      scope: 'should maintain consistent loading states',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      started_at: '2025-08-05T18:46:24.800Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b42395d3-e142-4b81-96c1-cb1f8f05bd69',
      name: 'should handle navigation consistently',
      body: [Object],
      identifier: 'should handle navigation consistently',
      scope: 'should handle navigation consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:46:25.658Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '67014af6-7471-4388-a228-405b57989458',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'b42395d3-e142-4b81-96c1-cb1f8f05bd69',
      body: [Object],
      scope: 'should handle navigation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      started_at: '2025-08-05T18:46:25.668Z'
    }
  }
] to 36431:0
2025-08-05T18:46:25.870Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:46:28.571Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:46:24.495Z',
      uuid: 'e8227751-de1d-4f41-a01e-d7f73de05f37',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'e8227751-de1d-4f41-a01e-d7f73de05f37'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:46:24.527Z',
      uuid: 'e8227751-de1d-4f41-a01e-d7f73de05f37',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'e8227751-de1d-4f41-a01e-d7f73de05f37'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:46:24.555Z',
      uuid: 'e8227751-de1d-4f41-a01e-d7f73de05f37',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'e8227751-de1d-4f41-a01e-d7f73de05f37'
    }
  ]
} to 36431:0
2025-08-05T18:46:28.575Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'e8227751-de1d-4f41-a01e-d7f73de05f37',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '70bb963c-a859-4b6c-bbf9-319c1f3d353b',
    body: { lang: 'node', code: null },
    scope: 'should handle form validation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    started_at: '2025-08-05T18:46:24.493Z',
    finished_at: '2025-08-05T18:46:28.567Z'
  }
} to 36431:0
2025-08-05T18:46:28.600Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '70bb963c-a859-4b6c-bbf9-319c1f3d353b',
    name: 'should handle form validation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for submit buttons\n' +
        `    const submitButtons = page.locator('button[type="submit"], input[type="submit"], button:has-text("Submit"), button:has-text("Next")');\n` +
        '    if ((await submitButtons.count()) > 0) {\n' +
        '      const submitButton = submitButtons.first();\n' +
        '\n' +
        '      // Try to submit without filling required fields\n' +
        '      await submitButton.click();\n' +
        '\n' +
        '      // Wait for potential validation messages\n' +
        '      await page.waitForTimeout(1000);\n' +
        '\n' +
        '      // Check for validation messages\n' +
        `      const errorMessages = page.locator('.error, .validation-error, [role="alert"], .text-red-500, .text-red-600');\n` +
        '\n' +
        '      // If there are validation errors, they should be visible and styled consistently\n' +
        '      if ((await errorMessages.count()) > 0) {\n' +
        '        for (let i = 0; i < Math.min(await errorMessages.count(), 3); i++) {\n' +
        '          const error = errorMessages.nth(i);\n' +
        '          await (0, _test.expect)(error).toBeVisible();\n' +
        '\n' +
        '          // Check error styling\n' +
        '          const color = await error.evaluate(el => {\n' +
        '            return window.getComputedStyle(el).color;\n' +
        '          });\n' +
        '\n' +
        '          // Should have error color styling\n' +
        '          (0, _test.expect)(color).toMatch(/rgb\\(239, 68, 68\\)|rgb\\(220, 38, 38\\)|red/);\n' +
        '        }\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form validation consistently',
    scope: 'should handle form validation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 45,
    started_at: '2025-08-05T18:46:24.480Z',
    finished_at: '2025-08-05T18:46:24.525Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form validation consistently'
    },
    hooks: [ 'e8227751-de1d-4f41-a01e-d7f73de05f37' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:28.601Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:28.585Z',
      uuid: '70bb963c-a859-4b6c-bbf9-319c1f3d353b',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '70bb963c-a859-4b6c-bbf9-319c1f3d353b'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:28.585Z',
      uuid: '70bb963c-a859-4b6c-bbf9-319c1f3d353b',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '70bb963c-a859-4b6c-bbf9-319c1f3d353b'
    }
  ]
} to 36431:0
2025-08-05T18:46:29.087Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:46:24.802Z',
      uuid: '03913740-fefa-4a1c-986a-bc554ede84aa',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '03913740-fefa-4a1c-986a-bc554ede84aa'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:46:24.827Z',
      uuid: '03913740-fefa-4a1c-986a-bc554ede84aa',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '03913740-fefa-4a1c-986a-bc554ede84aa'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:46:24.854Z',
      uuid: '03913740-fefa-4a1c-986a-bc554ede84aa',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '03913740-fefa-4a1c-986a-bc554ede84aa'
    }
  ]
} to 36431:0
2025-08-05T18:46:29.092Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '03913740-fefa-4a1c-986a-bc554ede84aa',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'c796b60d-0394-460a-9627-99c774a8fa4b',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent loading states',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    started_at: '2025-08-05T18:46:24.800Z',
    finished_at: '2025-08-05T18:46:29.080Z'
  }
} to 36431:0
2025-08-05T18:46:29.115Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'c796b60d-0394-460a-9627-99c774a8fa4b',
    name: 'should maintain consistent loading states',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for loading indicators\n' +
        `    const loadingIndicators = page.locator('.loading, .spinner, [aria-busy="true"], .animate-spin');\n` +
        '    if ((await loadingIndicators.count()) > 0) {\n' +
        '      for (let i = 0; i < Math.min(await loadingIndicators.count(), 3); i++) {\n' +
        '        const loader = loadingIndicators.nth(i);\n' +
        '\n' +
        '        // Check loading indicator is visible\n' +
        '        await (0, _test.expect)(loader).toBeVisible();\n' +
        '\n' +
        '        // Check it has proper styling\n' +
        '        const styles = await loader.evaluate(el => {\n' +
        '          const computed = window.getComputedStyle(el);\n' +
        '          return {\n' +
        '            display: computed.display,\n' +
        '            visibility: computed.visibility\n' +
        '          };\n' +
        '        });\n' +
        "        (0, _test.expect)(styles.display).not.toBe('none');\n" +
        "        (0, _test.expect)(styles.visibility).not.toBe('hidden');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent loading states',
    scope: 'should maintain consistent loading states',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 42,
    started_at: '2025-08-05T18:46:24.791Z',
    finished_at: '2025-08-05T18:46:24.833Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent loading states'
    },
    hooks: [ '03913740-fefa-4a1c-986a-bc554ede84aa' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:29.116Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:29.103Z',
      uuid: 'c796b60d-0394-460a-9627-99c774a8fa4b',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'c796b60d-0394-460a-9627-99c774a8fa4b'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:29.103Z',
      uuid: 'c796b60d-0394-460a-9627-99c774a8fa4b',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'c796b60d-0394-460a-9627-99c774a8fa4b'
    }
  ]
} to 36431:0
2025-08-05T18:46:29.869Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'e8227751-de1d-4f41-a01e-d7f73de05f37',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '70bb963c-a859-4b6c-bbf9-319c1f3d353b',
      body: [Object],
      scope: 'should handle form validation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      started_at: '2025-08-05T18:46:24.493Z',
      finished_at: '2025-08-05T18:46:28.567Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '70bb963c-a859-4b6c-bbf9-319c1f3d353b',
      name: 'should handle form validation consistently',
      body: [Object],
      identifier: 'should handle form validation consistently',
      scope: 'should handle form validation consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 45,
      started_at: '2025-08-05T18:46:24.480Z',
      finished_at: '2025-08-05T18:46:24.525Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '03913740-fefa-4a1c-986a-bc554ede84aa',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'c796b60d-0394-460a-9627-99c774a8fa4b',
      body: [Object],
      scope: 'should maintain consistent loading states',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      started_at: '2025-08-05T18:46:24.800Z',
      finished_at: '2025-08-05T18:46:29.080Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'c796b60d-0394-460a-9627-99c774a8fa4b',
      name: 'should maintain consistent loading states',
      body: [Object],
      identifier: 'should maintain consistent loading states',
      scope: 'should maintain consistent loading states',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 42,
      started_at: '2025-08-05T18:46:24.791Z',
      finished_at: '2025-08-05T18:46:24.833Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:46:29.870Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:46:30.035Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:46:25.672Z',
      uuid: '67014af6-7471-4388-a228-405b57989458',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '67014af6-7471-4388-a228-405b57989458'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:46:25.700Z',
      uuid: '67014af6-7471-4388-a228-405b57989458',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '67014af6-7471-4388-a228-405b57989458'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:46:25.754Z',
      uuid: '67014af6-7471-4388-a228-405b57989458',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '67014af6-7471-4388-a228-405b57989458'
    }
  ]
} to 36431:0
2025-08-05T18:46:30.039Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '67014af6-7471-4388-a228-405b57989458',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'b42395d3-e142-4b81-96c1-cb1f8f05bd69',
    body: { lang: 'node', code: null },
    scope: 'should handle navigation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    started_at: '2025-08-05T18:46:25.668Z',
    finished_at: '2025-08-05T18:46:30.027Z'
  }
} to 36431:0
2025-08-05T18:46:30.094Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b42395d3-e142-4b81-96c1-cb1f8f05bd69',
    name: 'should handle navigation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test navigation buttons/links\n' +
        `    const navButtons = page.locator('a, button, [role="link"]').filter({\n` +
        '      hasText: /back|next|previous|continue/i\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await navButtons.count(), 3); i++) {\n' +
        '      const navButton = navButtons.nth(i);\n' +
        '\n' +
        '      // Check navigation element is visible and clickable\n' +
        '      await (0, _test.expect)(navButton).toBeVisible();\n' +
        '      const styles = await navButton.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          cursor: computed.cursor,\n' +
        '          pointerEvents: computed.pointerEvents\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should be clickable\n' +
        "      (0, _test.expect)(['pointer', 'default']).toContain(styles.cursor);\n" +
        "      (0, _test.expect)(styles.pointerEvents).not.toBe('none');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle navigation consistently',
    scope: 'should handle navigation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 49,
    started_at: '2025-08-05T18:46:25.658Z',
    finished_at: '2025-08-05T18:46:25.707Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle navigation consistently'
    },
    hooks: [ '67014af6-7471-4388-a228-405b57989458' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:30.095Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:30.053Z',
      uuid: 'b42395d3-e142-4b81-96c1-cb1f8f05bd69',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b42395d3-e142-4b81-96c1-cb1f8f05bd69'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:30.054Z',
      uuid: 'b42395d3-e142-4b81-96c1-cb1f8f05bd69',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b42395d3-e142-4b81-96c1-cb1f8f05bd69'
    }
  ]
} to 36431:0
2025-08-05T18:46:31.870Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '67014af6-7471-4388-a228-405b57989458',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'b42395d3-e142-4b81-96c1-cb1f8f05bd69',
      body: [Object],
      scope: 'should handle navigation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      started_at: '2025-08-05T18:46:25.668Z',
      finished_at: '2025-08-05T18:46:30.027Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b42395d3-e142-4b81-96c1-cb1f8f05bd69',
      name: 'should handle navigation consistently',
      body: [Object],
      identifier: 'should handle navigation consistently',
      scope: 'should handle navigation consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 49,
      started_at: '2025-08-05T18:46:25.658Z',
      finished_at: '2025-08-05T18:46:25.707Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:46:31.871Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:46:33.703Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '5f1911ce-6954-4ac2-b15b-81b68dbfe710',
    name: 'should connect to BrowserStack and load the homepage',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to the homepage\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-connection-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load the homepage',
    scope: 'should connect to BrowserStack and load the homepage',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:46:33.688Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should connect to BrowserStack and load the homepage'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:33.870Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '5f1911ce-6954-4ac2-b15b-81b68dbfe710',
      name: 'should connect to BrowserStack and load the homepage',
      body: [Object],
      identifier: 'should connect to BrowserStack and load the homepage',
      scope: 'should connect to BrowserStack and load the homepage',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:46:33.688Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 36431:0
2025-08-05T18:46:33.873Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:46:34.340Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'fbb242b3-0324-475f-a8f8-ab773ee92acb',
    name: 'should display consistent branding colors',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for any elements with Gutcheck brand colors\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    if ((await gutcheckElements.count()) > 0) {\n' +
        '      console.log(`🎨 Found ${await gutcheckElements.count()} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display consistent branding colors',
    scope: 'should display consistent branding colors',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:46:34.323Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should display consistent branding colors'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:35.180Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'a5e80fcc-b587-450c-8c51-3b94848377e0',
    name: 'should connect to BrowserStack and load a public website',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to a public website instead of localhost\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-public-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '    console.log(`🌐 URL: ${page.url()}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load a public website',
    scope: 'should connect to BrowserStack and load a public website',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:46:35.153Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should connect to BrowserStack and load a public website'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:35.871Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'fbb242b3-0324-475f-a8f8-ab773ee92acb',
      name: 'should display consistent branding colors',
      body: [Object],
      identifier: 'should display consistent branding colors',
      scope: 'should display consistent branding colors',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:46:34.323Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'a5e80fcc-b587-450c-8c51-3b94848377e0',
      name: 'should connect to BrowserStack and load a public website',
      body: [Object],
      identifier: 'should connect to BrowserStack and load a public website',
      scope: 'should connect to BrowserStack and load a public website',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:46:35.153Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 36431:0
2025-08-05T18:46:35.873Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:46:38.716Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '5f1911ce-6954-4ac2-b15b-81b68dbfe710',
    name: 'should connect to BrowserStack and load the homepage',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to the homepage\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-connection-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load the homepage',
    scope: 'should connect to BrowserStack and load the homepage',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'failed',
    duration_in_ms: 39,
    started_at: '2025-08-05T18:46:33.688Z',
    finished_at: '2025-08-05T18:46:33.727Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should connect to BrowserStack and load the homepage'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:38.717Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:38.682Z',
      uuid: '5f1911ce-6954-4ac2-b15b-81b68dbfe710',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '5f1911ce-6954-4ac2-b15b-81b68dbfe710'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:38.682Z',
      uuid: '5f1911ce-6954-4ac2-b15b-81b68dbfe710',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '5f1911ce-6954-4ac2-b15b-81b68dbfe710'
    }
  ]
} to 36431:0
2025-08-05T18:46:38.897Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'fbb242b3-0324-475f-a8f8-ab773ee92acb',
    name: 'should display consistent branding colors',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for any elements with Gutcheck brand colors\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    if ((await gutcheckElements.count()) > 0) {\n' +
        '      console.log(`🎨 Found ${await gutcheckElements.count()} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display consistent branding colors',
    scope: 'should display consistent branding colors',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'failed',
    duration_in_ms: 99,
    started_at: '2025-08-05T18:46:34.323Z',
    finished_at: '2025-08-05T18:46:34.422Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should display consistent branding colors'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:38.898Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:38.869Z',
      uuid: 'fbb242b3-0324-475f-a8f8-ab773ee92acb',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'fbb242b3-0324-475f-a8f8-ab773ee92acb'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:38.870Z',
      uuid: 'fbb242b3-0324-475f-a8f8-ab773ee92acb',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'fbb242b3-0324-475f-a8f8-ab773ee92acb'
    }
  ]
} to 36431:0
2025-08-05T18:46:39.744Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'a5e80fcc-b587-450c-8c51-3b94848377e0',
    name: 'should connect to BrowserStack and load a public website',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to a public website instead of localhost\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-public-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '    console.log(`🌐 URL: ${page.url()}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load a public website',
    scope: 'should connect to BrowserStack and load a public website',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'failed',
    duration_in_ms: 50,
    started_at: '2025-08-05T18:46:35.153Z',
    finished_at: '2025-08-05T18:46:35.203Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should connect to BrowserStack and load a public website'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:39.745Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:39.725Z',
      uuid: 'a5e80fcc-b587-450c-8c51-3b94848377e0',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'a5e80fcc-b587-450c-8c51-3b94848377e0'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:39.726Z',
      uuid: 'a5e80fcc-b587-450c-8c51-3b94848377e0',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'a5e80fcc-b587-450c-8c51-3b94848377e0'
    }
  ]
} to 36431:0
2025-08-05T18:46:39.880Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '5f1911ce-6954-4ac2-b15b-81b68dbfe710',
      name: 'should connect to BrowserStack and load the homepage',
      body: [Object],
      identifier: 'should connect to BrowserStack and load the homepage',
      scope: 'should connect to BrowserStack and load the homepage',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'failed',
      duration_in_ms: 39,
      started_at: '2025-08-05T18:46:33.688Z',
      finished_at: '2025-08-05T18:46:33.727Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'fbb242b3-0324-475f-a8f8-ab773ee92acb',
      name: 'should display consistent branding colors',
      body: [Object],
      identifier: 'should display consistent branding colors',
      scope: 'should display consistent branding colors',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'failed',
      duration_in_ms: 99,
      started_at: '2025-08-05T18:46:34.323Z',
      finished_at: '2025-08-05T18:46:34.422Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'a5e80fcc-b587-450c-8c51-3b94848377e0',
      name: 'should connect to BrowserStack and load a public website',
      body: [Object],
      identifier: 'should connect to BrowserStack and load a public website',
      scope: 'should connect to BrowserStack and load a public website',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'failed',
      duration_in_ms: 50,
      started_at: '2025-08-05T18:46:35.153Z',
      finished_at: '2025-08-05T18:46:35.203Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:46:39.882Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:46:43.714Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'fbe6a98f-c6a4-4bdb-94d6-41ecab710e27',
    name: 'should verify browser capabilities',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Get browser information\n' +
        '    const userAgent = await page.evaluate(() => navigator.userAgent);\n' +
        '    const viewport = page.viewportSize();\n' +
        '    console.log(`🔍 User Agent: ${userAgent}`);\n' +
        '    console.log(`📐 Viewport: ${viewport === null || viewport === void 0 ? void 0 : viewport.width}x${viewport === null || viewport === void 0 ? void 0 : viewport.height}`);\n' +
        '\n' +
        "    // Verify we're running in a real browser environment\n" +
        "    (0, _test.expect)(userAgent).toContain('Chrome');\n" +
        '    (0, _test.expect)(viewport).toBeTruthy();\n' +
        '  }'
    },
    identifier: 'should verify browser capabilities',
    scope: 'should verify browser capabilities',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:46:43.697Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should verify browser capabilities'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:43.881Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '73f445e7-7afc-45ca-afe1-6d3a4b07dacd',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:46:43.868Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:43.882Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'fbe6a98f-c6a4-4bdb-94d6-41ecab710e27',
      name: 'should verify browser capabilities',
      body: [Object],
      identifier: 'should verify browser capabilities',
      scope: 'should verify browser capabilities',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:46:43.697Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '73f445e7-7afc-45ca-afe1-6d3a4b07dacd',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:46:43.868Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 36431:0
2025-08-05T18:46:43.884Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:46:44.958Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '1c6aa1c8-d67b-4ef4-a2ed-c872d1934a7b',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:46:44.934Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:45.885Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '1c6aa1c8-d67b-4ef4-a2ed-c872d1934a7b',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:46:44.934Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 36431:0
2025-08-05T18:46:45.886Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:46:48.109Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '73f445e7-7afc-45ca-afe1-6d3a4b07dacd',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 45,
    started_at: '2025-08-05T18:46:43.868Z',
    finished_at: '2025-08-05T18:46:43.913Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:48.111Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:48.092Z',
      uuid: '73f445e7-7afc-45ca-afe1-6d3a4b07dacd',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '73f445e7-7afc-45ca-afe1-6d3a4b07dacd'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:48.092Z',
      uuid: '73f445e7-7afc-45ca-afe1-6d3a4b07dacd',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '73f445e7-7afc-45ca-afe1-6d3a4b07dacd'
    }
  ]
} to 36431:0
2025-08-05T18:46:48.329Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'fbe6a98f-c6a4-4bdb-94d6-41ecab710e27',
    name: 'should verify browser capabilities',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Get browser information\n' +
        '    const userAgent = await page.evaluate(() => navigator.userAgent);\n' +
        '    const viewport = page.viewportSize();\n' +
        '    console.log(`🔍 User Agent: ${userAgent}`);\n' +
        '    console.log(`📐 Viewport: ${viewport === null || viewport === void 0 ? void 0 : viewport.width}x${viewport === null || viewport === void 0 ? void 0 : viewport.height}`);\n' +
        '\n' +
        "    // Verify we're running in a real browser environment\n" +
        "    (0, _test.expect)(userAgent).toContain('Chrome');\n" +
        '    (0, _test.expect)(viewport).toBeTruthy();\n' +
        '  }'
    },
    identifier: 'should verify browser capabilities',
    scope: 'should verify browser capabilities',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'failed',
    duration_in_ms: 184,
    started_at: '2025-08-05T18:46:43.697Z',
    finished_at: '2025-08-05T18:46:43.881Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should verify browser capabilities'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:48.329Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:48.312Z',
      uuid: 'fbe6a98f-c6a4-4bdb-94d6-41ecab710e27',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'fbe6a98f-c6a4-4bdb-94d6-41ecab710e27'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:48.313Z',
      uuid: 'fbe6a98f-c6a4-4bdb-94d6-41ecab710e27',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'fbe6a98f-c6a4-4bdb-94d6-41ecab710e27'
    }
  ]
} to 36431:0
2025-08-05T18:46:49.173Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '1c6aa1c8-d67b-4ef4-a2ed-c872d1934a7b',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 42,
    started_at: '2025-08-05T18:46:44.934Z',
    finished_at: '2025-08-05T18:46:44.976Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:49.173Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:49.159Z',
      uuid: '1c6aa1c8-d67b-4ef4-a2ed-c872d1934a7b',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '1c6aa1c8-d67b-4ef4-a2ed-c872d1934a7b'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:49.160Z',
      uuid: '1c6aa1c8-d67b-4ef4-a2ed-c872d1934a7b',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '1c6aa1c8-d67b-4ef4-a2ed-c872d1934a7b'
    }
  ]
} to 36431:0
2025-08-05T18:46:49.883Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '73f445e7-7afc-45ca-afe1-6d3a4b07dacd',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 45,
      started_at: '2025-08-05T18:46:43.868Z',
      finished_at: '2025-08-05T18:46:43.913Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'fbe6a98f-c6a4-4bdb-94d6-41ecab710e27',
      name: 'should verify browser capabilities',
      body: [Object],
      identifier: 'should verify browser capabilities',
      scope: 'should verify browser capabilities',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'failed',
      duration_in_ms: 184,
      started_at: '2025-08-05T18:46:43.697Z',
      finished_at: '2025-08-05T18:46:43.881Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '1c6aa1c8-d67b-4ef4-a2ed-c872d1934a7b',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 42,
      started_at: '2025-08-05T18:46:44.934Z',
      finished_at: '2025-08-05T18:46:44.976Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:46:49.885Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:46:52.384Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '53e4dd54-31aa-4e90-a59c-13e7f8041dbc',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Traditional Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-traditional.spec.ts',
    vc_filepath: 'tests/browserstack-traditional.spec.ts',
    location: 'tests/browserstack-traditional.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:46:52.365Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:52.389Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'a649f276-7ba7-4fc4-85ba-ad71b4208579',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:46:52.370Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:53.035Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '10c7e508-e077-4d64-b061-27b8b94c3bfd',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Traditional Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-traditional.spec.ts',
    vc_filepath: 'tests/browserstack-traditional.spec.ts',
    location: 'tests/browserstack-traditional.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:46:53.025Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:53.885Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '53e4dd54-31aa-4e90-a59c-13e7f8041dbc',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-traditional.spec.ts',
      vc_filepath: 'tests/browserstack-traditional.spec.ts',
      location: 'tests/browserstack-traditional.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:46:52.365Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'a649f276-7ba7-4fc4-85ba-ad71b4208579',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:46:52.370Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '10c7e508-e077-4d64-b061-27b8b94c3bfd',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-traditional.spec.ts',
      vc_filepath: 'tests/browserstack-traditional.spec.ts',
      location: 'tests/browserstack-traditional.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:46:53.025Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 36431:0
2025-08-05T18:46:53.886Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:46:56.875Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '53e4dd54-31aa-4e90-a59c-13e7f8041dbc',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Traditional Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-traditional.spec.ts',
    vc_filepath: 'tests/browserstack-traditional.spec.ts',
    location: 'tests/browserstack-traditional.spec.ts',
    result: 'failed',
    duration_in_ms: 51,
    started_at: '2025-08-05T18:46:52.365Z',
    finished_at: '2025-08-05T18:46:52.416Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:56.876Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:56.830Z',
      uuid: '53e4dd54-31aa-4e90-a59c-13e7f8041dbc',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '53e4dd54-31aa-4e90-a59c-13e7f8041dbc'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:56.831Z',
      uuid: '53e4dd54-31aa-4e90-a59c-13e7f8041dbc',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '53e4dd54-31aa-4e90-a59c-13e7f8041dbc'
    }
  ]
} to 36431:0
2025-08-05T18:46:56.877Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'a649f276-7ba7-4fc4-85ba-ad71b4208579',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 36,
    started_at: '2025-08-05T18:46:52.370Z',
    finished_at: '2025-08-05T18:46:52.406Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:56.877Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:56.831Z',
      uuid: 'a649f276-7ba7-4fc4-85ba-ad71b4208579',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'a649f276-7ba7-4fc4-85ba-ad71b4208579'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:56.832Z',
      uuid: 'a649f276-7ba7-4fc4-85ba-ad71b4208579',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'a649f276-7ba7-4fc4-85ba-ad71b4208579'
    }
  ]
} to 36431:0
2025-08-05T18:46:57.596Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '10c7e508-e077-4d64-b061-27b8b94c3bfd',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Traditional Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-traditional.spec.ts',
    vc_filepath: 'tests/browserstack-traditional.spec.ts',
    location: 'tests/browserstack-traditional.spec.ts',
    result: 'failed',
    duration_in_ms: 36,
    started_at: '2025-08-05T18:46:53.025Z',
    finished_at: '2025-08-05T18:46:53.061Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:46:57.598Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:57.580Z',
      uuid: '10c7e508-e077-4d64-b061-27b8b94c3bfd',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '10c7e508-e077-4d64-b061-27b8b94c3bfd'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:46:57.581Z',
      uuid: '10c7e508-e077-4d64-b061-27b8b94c3bfd',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '10c7e508-e077-4d64-b061-27b8b94c3bfd'
    }
  ]
} to 36431:0
2025-08-05T18:46:57.885Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '53e4dd54-31aa-4e90-a59c-13e7f8041dbc',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-traditional.spec.ts',
      vc_filepath: 'tests/browserstack-traditional.spec.ts',
      location: 'tests/browserstack-traditional.spec.ts',
      result: 'failed',
      duration_in_ms: 51,
      started_at: '2025-08-05T18:46:52.365Z',
      finished_at: '2025-08-05T18:46:52.416Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'a649f276-7ba7-4fc4-85ba-ad71b4208579',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 36,
      started_at: '2025-08-05T18:46:52.370Z',
      finished_at: '2025-08-05T18:46:52.406Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '10c7e508-e077-4d64-b061-27b8b94c3bfd',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-traditional.spec.ts',
      vc_filepath: 'tests/browserstack-traditional.spec.ts',
      location: 'tests/browserstack-traditional.spec.ts',
      result: 'failed',
      duration_in_ms: 36,
      started_at: '2025-08-05T18:46:53.025Z',
      finished_at: '2025-08-05T18:46:53.061Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:46:57.886Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:47:00.572Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '5a580d5a-2254-48ac-95d9-39f5a440f8f6',
    name: 'should display consistent colors across browsers',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test Gutcheck brand colors\n' +
        '    const colorTests = [{\n' +
        "      selector: '.bg-gutcheck-deep-navy',\n" +
        "      expectedColor: 'rgb(10, 31, 68)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-electric-blue',\n" +
        "      expectedColor: 'rgb(20, 122, 255)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-vibrant-teal',\n" +
        "      expectedColor: 'rgb(25, 194, 160)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-bright-orange',\n" +
        "      expectedColor: 'rgb(255, 107, 0)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-bright-yellow',\n" +
        "      expectedColor: 'rgb(255, 199, 0)'\n" +
        '    }];\n' +
        '    for (const test of colorTests) {\n' +
        '      const element = page.locator(test.selector).first();\n' +
        '      if ((await element.count()) > 0) {\n' +
        '        const backgroundColor = await element.evaluate(el => {\n' +
        '          return window.getComputedStyle(el).backgroundColor;\n' +
        '        });\n' +
        '        (0, _test.expect)(backgroundColor).toBe(test.expectedColor);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should display consistent colors across browsers',
    scope: 'should display consistent colors across browsers',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:47:00.551Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should display consistent colors across browsers'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:00.574Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '14c411ad-e322-48a5-a7da-9bd59c1a5d75',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Traditional Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-traditional.spec.ts',
    vc_filepath: 'tests/browserstack-traditional.spec.ts',
    location: 'tests/browserstack-traditional.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:47:00.554Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:00.610Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'f5605f96-8527-4a70-b062-c6e133add858',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '5a580d5a-2254-48ac-95d9-39f5a440f8f6',
    body: { lang: 'node', code: null },
    scope: 'should display consistent colors across browsers',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    started_at: '2025-08-05T18:47:00.607Z'
  }
} to 36431:0
2025-08-05T18:47:01.887Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '5a580d5a-2254-48ac-95d9-39f5a440f8f6',
      name: 'should display consistent colors across browsers',
      body: [Object],
      identifier: 'should display consistent colors across browsers',
      scope: 'should display consistent colors across browsers',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:47:00.551Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '14c411ad-e322-48a5-a7da-9bd59c1a5d75',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-traditional.spec.ts',
      vc_filepath: 'tests/browserstack-traditional.spec.ts',
      location: 'tests/browserstack-traditional.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:47:00.554Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'f5605f96-8527-4a70-b062-c6e133add858',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '5a580d5a-2254-48ac-95d9-39f5a440f8f6',
      body: [Object],
      scope: 'should display consistent colors across browsers',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      started_at: '2025-08-05T18:47:00.607Z'
    }
  }
] to 36431:0
2025-08-05T18:47:01.890Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:47:01.958Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '53961cc9-ff53-497f-b93a-db5b0bcd178e',
    name: 'should maintain consistent typography',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test font family consistency\n' +
        "    const textElements = page.locator('h1, h2, h3, p, button, input, textarea');\n" +
        '    for (let i = 0; i < Math.min(await textElements.count(), 10); i++) {\n' +
        '      const element = textElements.nth(i);\n' +
        '      const fontFamily = await element.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).fontFamily;\n' +
        '      });\n' +
        '\n' +
        '      // Should use Inter font family or fallback to system fonts\n' +
        '      (0, _test.expect)(fontFamily).toMatch(/Inter|system-ui|sans-serif/);\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent typography',
    scope: 'should maintain consistent typography',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:47:01.935Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain consistent typography'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:01.965Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'c6f0f1e8-5551-4f05-8d28-0b9ce597670d',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '53961cc9-ff53-497f-b93a-db5b0bcd178e',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent typography',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    started_at: '2025-08-05T18:47:01.959Z'
  }
} to 36431:0
2025-08-05T18:47:03.886Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '53961cc9-ff53-497f-b93a-db5b0bcd178e',
      name: 'should maintain consistent typography',
      body: [Object],
      identifier: 'should maintain consistent typography',
      scope: 'should maintain consistent typography',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:47:01.935Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'c6f0f1e8-5551-4f05-8d28-0b9ce597670d',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '53961cc9-ff53-497f-b93a-db5b0bcd178e',
      body: [Object],
      scope: 'should maintain consistent typography',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      started_at: '2025-08-05T18:47:01.959Z'
    }
  }
] to 36431:0
2025-08-05T18:47:03.887Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:47:05.057Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '14c411ad-e322-48a5-a7da-9bd59c1a5d75',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Traditional Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-traditional.spec.ts',
    vc_filepath: 'tests/browserstack-traditional.spec.ts',
    location: 'tests/browserstack-traditional.spec.ts',
    result: 'failed',
    duration_in_ms: 63,
    started_at: '2025-08-05T18:47:00.554Z',
    finished_at: '2025-08-05T18:47:00.617Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:05.057Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:05.039Z',
      uuid: '14c411ad-e322-48a5-a7da-9bd59c1a5d75',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '14c411ad-e322-48a5-a7da-9bd59c1a5d75'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:05.040Z',
      uuid: '14c411ad-e322-48a5-a7da-9bd59c1a5d75',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '14c411ad-e322-48a5-a7da-9bd59c1a5d75'
    }
  ]
} to 36431:0
2025-08-05T18:47:05.138Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:00.609Z',
      uuid: 'f5605f96-8527-4a70-b062-c6e133add858',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'f5605f96-8527-4a70-b062-c6e133add858'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:00.634Z',
      uuid: 'f5605f96-8527-4a70-b062-c6e133add858',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'f5605f96-8527-4a70-b062-c6e133add858'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:00.665Z',
      uuid: 'f5605f96-8527-4a70-b062-c6e133add858',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'f5605f96-8527-4a70-b062-c6e133add858'
    }
  ]
} to 36431:0
2025-08-05T18:47:05.216Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '5a580d5a-2254-48ac-95d9-39f5a440f8f6',
    name: 'should display consistent colors across browsers',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test Gutcheck brand colors\n' +
        '    const colorTests = [{\n' +
        "      selector: '.bg-gutcheck-deep-navy',\n" +
        "      expectedColor: 'rgb(10, 31, 68)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-electric-blue',\n" +
        "      expectedColor: 'rgb(20, 122, 255)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-vibrant-teal',\n" +
        "      expectedColor: 'rgb(25, 194, 160)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-bright-orange',\n" +
        "      expectedColor: 'rgb(255, 107, 0)'\n" +
        '    }, {\n' +
        "      selector: '.bg-gutcheck-bright-yellow',\n" +
        "      expectedColor: 'rgb(255, 199, 0)'\n" +
        '    }];\n' +
        '    for (const test of colorTests) {\n' +
        '      const element = page.locator(test.selector).first();\n' +
        '      if ((await element.count()) > 0) {\n' +
        '        const backgroundColor = await element.evaluate(el => {\n' +
        '          return window.getComputedStyle(el).backgroundColor;\n' +
        '        });\n' +
        '        (0, _test.expect)(backgroundColor).toBe(test.expectedColor);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should display consistent colors across browsers',
    scope: 'should display consistent colors across browsers',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 75,
    started_at: '2025-08-05T18:47:00.551Z',
    finished_at: '2025-08-05T18:47:00.626Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should display consistent colors across browsers'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:05.217Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:05.153Z',
      uuid: '5a580d5a-2254-48ac-95d9-39f5a440f8f6',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '5a580d5a-2254-48ac-95d9-39f5a440f8f6'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:05.154Z',
      uuid: '5a580d5a-2254-48ac-95d9-39f5a440f8f6',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '5a580d5a-2254-48ac-95d9-39f5a440f8f6'
    }
  ]
} to 36431:0
2025-08-05T18:47:05.217Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'f5605f96-8527-4a70-b062-c6e133add858',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '5a580d5a-2254-48ac-95d9-39f5a440f8f6',
    body: { lang: 'node', code: null },
    scope: 'should display consistent colors across browsers',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
    started_at: '2025-08-05T18:47:00.607Z',
    finished_at: '2025-08-05T18:47:05.116Z'
  }
} to 36431:0
2025-08-05T18:47:05.887Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '14c411ad-e322-48a5-a7da-9bd59c1a5d75',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-traditional.spec.ts',
      vc_filepath: 'tests/browserstack-traditional.spec.ts',
      location: 'tests/browserstack-traditional.spec.ts',
      result: 'failed',
      duration_in_ms: 63,
      started_at: '2025-08-05T18:47:00.554Z',
      finished_at: '2025-08-05T18:47:00.617Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '5a580d5a-2254-48ac-95d9-39f5a440f8f6',
      name: 'should display consistent colors across browsers',
      body: [Object],
      identifier: 'should display consistent colors across browsers',
      scope: 'should display consistent colors across browsers',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 75,
      started_at: '2025-08-05T18:47:00.551Z',
      finished_at: '2025-08-05T18:47:00.626Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'f5605f96-8527-4a70-b062-c6e133add858',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '5a580d5a-2254-48ac-95d9-39f5a440f8f6',
      body: [Object],
      scope: 'should display consistent colors across browsers',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
      started_at: '2025-08-05T18:47:00.607Z',
      finished_at: '2025-08-05T18:47:05.116Z'
    }
  }
] to 36431:0
2025-08-05T18:47:05.889Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:47:06.363Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:01.964Z',
      uuid: 'c6f0f1e8-5551-4f05-8d28-0b9ce597670d',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'c6f0f1e8-5551-4f05-8d28-0b9ce597670d'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:02.087Z',
      uuid: 'c6f0f1e8-5551-4f05-8d28-0b9ce597670d',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'c6f0f1e8-5551-4f05-8d28-0b9ce597670d'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:02.138Z',
      uuid: 'c6f0f1e8-5551-4f05-8d28-0b9ce597670d',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'c6f0f1e8-5551-4f05-8d28-0b9ce597670d'
    }
  ]
} to 36431:0
2025-08-05T18:47:06.368Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'c6f0f1e8-5551-4f05-8d28-0b9ce597670d',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '53961cc9-ff53-497f-b93a-db5b0bcd178e',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent typography',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
    started_at: '2025-08-05T18:47:01.959Z',
    finished_at: '2025-08-05T18:47:06.351Z'
  }
} to 36431:0
2025-08-05T18:47:06.392Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '53961cc9-ff53-497f-b93a-db5b0bcd178e',
    name: 'should maintain consistent typography',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test font family consistency\n' +
        "    const textElements = page.locator('h1, h2, h3, p, button, input, textarea');\n" +
        '    for (let i = 0; i < Math.min(await textElements.count(), 10); i++) {\n' +
        '      const element = textElements.nth(i);\n' +
        '      const fontFamily = await element.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).fontFamily;\n' +
        '      });\n' +
        '\n' +
        '      // Should use Inter font family or fallback to system fonts\n' +
        '      (0, _test.expect)(fontFamily).toMatch(/Inter|system-ui|sans-serif/);\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent typography',
    scope: 'should maintain consistent typography',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 146,
    started_at: '2025-08-05T18:47:01.935Z',
    finished_at: '2025-08-05T18:47:02.081Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain consistent typography'
    },
    hooks: [ 'c6f0f1e8-5551-4f05-8d28-0b9ce597670d' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:06.393Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:06.376Z',
      uuid: '53961cc9-ff53-497f-b93a-db5b0bcd178e',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '53961cc9-ff53-497f-b93a-db5b0bcd178e'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:06.377Z',
      uuid: '53961cc9-ff53-497f-b93a-db5b0bcd178e',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '53961cc9-ff53-497f-b93a-db5b0bcd178e'
    }
  ]
} to 36431:0
2025-08-05T18:47:07.898Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'c6f0f1e8-5551-4f05-8d28-0b9ce597670d',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '53961cc9-ff53-497f-b93a-db5b0bcd178e',
      body: [Object],
      scope: 'should maintain consistent typography',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
      started_at: '2025-08-05T18:47:01.959Z',
      finished_at: '2025-08-05T18:47:06.351Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '53961cc9-ff53-497f-b93a-db5b0bcd178e',
      name: 'should maintain consistent typography',
      body: [Object],
      identifier: 'should maintain consistent typography',
      scope: 'should maintain consistent typography',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 146,
      started_at: '2025-08-05T18:47:01.935Z',
      finished_at: '2025-08-05T18:47:02.081Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:47:07.900Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:47:10.276Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'ba95549e-a256-4b5d-83a1-9aed7a088dc6',
    name: 'should have consistent button styling',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    const buttons = page.locator('button');\n" +
        '    for (let i = 0; i < Math.min(await buttons.count(), 5); i++) {\n' +
        '      const button = buttons.nth(i);\n' +
        '\n' +
        '      // Check button has proper styling\n' +
        '      const styles = await button.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding,\n' +
        '          cursor: computed.cursor\n' +
        '        };\n' +
        '      });\n' +
        "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
        "      (0, _test.expect)(styles.borderRadius).not.toBe('0px');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should have consistent button styling',
    scope: 'should have consistent button styling',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:47:10.260Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should have consistent button styling'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:10.300Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '012b706a-638e-4e69-a68a-d280791fbe90',
    name: 'should maintain layout consistency on different screen sizes',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    const viewports = [{\n' +
        '      width: 1920,\n' +
        '      height: 1080,\n' +
        "      name: 'Desktop Large'\n" +
        '    }, {\n' +
        '      width: 1366,\n' +
        '      height: 768,\n' +
        "      name: 'Desktop Small'\n" +
        '    }, {\n' +
        '      width: 768,\n' +
        '      height: 1024,\n' +
        "      name: 'Tablet Portrait'\n" +
        '    }, {\n' +
        '      width: 375,\n' +
        '      height: 667,\n' +
        "      name: 'Mobile Portrait'\n" +
        '    }, {\n' +
        '      width: 414,\n' +
        '      height: 896,\n' +
        "      name: 'Mobile Large'\n" +
        '    }];\n' +
        '    for (const viewport of viewports) {\n' +
        '      await page.setViewportSize({\n' +
        '        width: viewport.width,\n' +
        '        height: viewport.height\n' +
        '      });\n' +
        '\n' +
        '      // Wait for layout to stabilize\n' +
        '      await page.waitForTimeout(500);\n' +
        '\n' +
        '      // Check that main content is visible and properly positioned\n' +
        `      const mainContent = page.locator('main, .main, #main, [role="main"]').first();\n` +
        '      if ((await mainContent.count()) > 0) {\n' +
        '        const isVisible = await mainContent.isVisible();\n' +
        '        (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        "        // Check that content doesn't overflow horizontally\n" +
        '        const overflow = await page.evaluate(() => {\n' +
        '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
        '        });\n' +
        '        (0, _test.expect)(overflow).toBe(true);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain layout consistency on different screen sizes',
    scope: 'should maintain layout consistency on different screen sizes',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:47:10.275Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain layout consistency on different screen sizes'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:10.326Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'a3be7e1c-f142-4916-8eaf-02eaa8a50889',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '012b706a-638e-4e69-a68a-d280791fbe90',
    body: { lang: 'node', code: null },
    scope: 'should maintain layout consistency on different screen sizes',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    started_at: '2025-08-05T18:47:10.294Z'
  }
} to 36431:0
2025-08-05T18:47:10.327Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'd295ef92-565c-419a-82af-194f7e9a0e36',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'ba95549e-a256-4b5d-83a1-9aed7a088dc6',
    body: { lang: 'node', code: null },
    scope: 'should have consistent button styling',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    started_at: '2025-08-05T18:47:10.281Z'
  }
} to 36431:0
2025-08-05T18:47:11.215Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '6386af81-e81e-47ff-bf05-f64f78afd93d',
    name: 'should handle form elements consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test form input styling\n' +
        "    const inputs = page.locator('input, textarea, select');\n" +
        '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
        '      const input = inputs.nth(i);\n' +
        '      const styles = await input.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          border: computed.border,\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have consistent border and padding\n' +
        "      (0, _test.expect)(styles.border).not.toBe('none');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form elements consistently',
    scope: 'should handle form elements consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:47:11.179Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle form elements consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:11.216Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '6bffb7be-b727-4e36-be1c-5e7c51fa1eec',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '6386af81-e81e-47ff-bf05-f64f78afd93d',
    body: { lang: 'node', code: null },
    scope: 'should handle form elements consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    started_at: '2025-08-05T18:47:11.186Z'
  }
} to 36431:0
2025-08-05T18:47:11.899Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'ba95549e-a256-4b5d-83a1-9aed7a088dc6',
      name: 'should have consistent button styling',
      body: [Object],
      identifier: 'should have consistent button styling',
      scope: 'should have consistent button styling',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:47:10.260Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '012b706a-638e-4e69-a68a-d280791fbe90',
      name: 'should maintain layout consistency on different screen sizes',
      body: [Object],
      identifier: 'should maintain layout consistency on different screen sizes',
      scope: 'should maintain layout consistency on different screen sizes',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:47:10.275Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'a3be7e1c-f142-4916-8eaf-02eaa8a50889',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '012b706a-638e-4e69-a68a-d280791fbe90',
      body: [Object],
      scope: 'should maintain layout consistency on different screen sizes',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      started_at: '2025-08-05T18:47:10.294Z'
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'd295ef92-565c-419a-82af-194f7e9a0e36',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'ba95549e-a256-4b5d-83a1-9aed7a088dc6',
      body: [Object],
      scope: 'should have consistent button styling',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      started_at: '2025-08-05T18:47:10.281Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '6386af81-e81e-47ff-bf05-f64f78afd93d',
      name: 'should handle form elements consistently',
      body: [Object],
      identifier: 'should handle form elements consistently',
      scope: 'should handle form elements consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:47:11.179Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '6bffb7be-b727-4e36-be1c-5e7c51fa1eec',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '6386af81-e81e-47ff-bf05-f64f78afd93d',
      body: [Object],
      scope: 'should handle form elements consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      started_at: '2025-08-05T18:47:11.186Z'
    }
  }
] to 36431:0
2025-08-05T18:47:11.900Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:47:14.663Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:10.299Z',
      uuid: 'a3be7e1c-f142-4916-8eaf-02eaa8a50889',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'a3be7e1c-f142-4916-8eaf-02eaa8a50889'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:10.330Z',
      uuid: 'a3be7e1c-f142-4916-8eaf-02eaa8a50889',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'a3be7e1c-f142-4916-8eaf-02eaa8a50889'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:10.364Z',
      uuid: 'a3be7e1c-f142-4916-8eaf-02eaa8a50889',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'a3be7e1c-f142-4916-8eaf-02eaa8a50889'
    }
  ]
} to 36431:0
2025-08-05T18:47:14.669Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'a3be7e1c-f142-4916-8eaf-02eaa8a50889',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '012b706a-638e-4e69-a68a-d280791fbe90',
    body: { lang: 'node', code: null },
    scope: 'should maintain layout consistency on different screen sizes',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
    started_at: '2025-08-05T18:47:10.294Z',
    finished_at: '2025-08-05T18:47:14.659Z'
  }
} to 36431:0
2025-08-05T18:47:14.693Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '012b706a-638e-4e69-a68a-d280791fbe90',
    name: 'should maintain layout consistency on different screen sizes',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    const viewports = [{\n' +
        '      width: 1920,\n' +
        '      height: 1080,\n' +
        "      name: 'Desktop Large'\n" +
        '    }, {\n' +
        '      width: 1366,\n' +
        '      height: 768,\n' +
        "      name: 'Desktop Small'\n" +
        '    }, {\n' +
        '      width: 768,\n' +
        '      height: 1024,\n' +
        "      name: 'Tablet Portrait'\n" +
        '    }, {\n' +
        '      width: 375,\n' +
        '      height: 667,\n' +
        "      name: 'Mobile Portrait'\n" +
        '    }, {\n' +
        '      width: 414,\n' +
        '      height: 896,\n' +
        "      name: 'Mobile Large'\n" +
        '    }];\n' +
        '    for (const viewport of viewports) {\n' +
        '      await page.setViewportSize({\n' +
        '        width: viewport.width,\n' +
        '        height: viewport.height\n' +
        '      });\n' +
        '\n' +
        '      // Wait for layout to stabilize\n' +
        '      await page.waitForTimeout(500);\n' +
        '\n' +
        '      // Check that main content is visible and properly positioned\n' +
        `      const mainContent = page.locator('main, .main, #main, [role="main"]').first();\n` +
        '      if ((await mainContent.count()) > 0) {\n' +
        '        const isVisible = await mainContent.isVisible();\n' +
        '        (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        "        // Check that content doesn't overflow horizontally\n" +
        '        const overflow = await page.evaluate(() => {\n' +
        '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
        '        });\n' +
        '        (0, _test.expect)(overflow).toBe(true);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain layout consistency on different screen sizes',
    scope: 'should maintain layout consistency on different screen sizes',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 46,
    started_at: '2025-08-05T18:47:10.275Z',
    finished_at: '2025-08-05T18:47:10.321Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain layout consistency on different screen sizes'
    },
    hooks: [ 'a3be7e1c-f142-4916-8eaf-02eaa8a50889' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:14.694Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:14.676Z',
      uuid: '012b706a-638e-4e69-a68a-d280791fbe90',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '012b706a-638e-4e69-a68a-d280791fbe90'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:14.677Z',
      uuid: '012b706a-638e-4e69-a68a-d280791fbe90',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '012b706a-638e-4e69-a68a-d280791fbe90'
    }
  ]
} to 36431:0
2025-08-05T18:47:14.712Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:10.284Z',
      uuid: 'd295ef92-565c-419a-82af-194f7e9a0e36',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'd295ef92-565c-419a-82af-194f7e9a0e36'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:10.317Z',
      uuid: 'd295ef92-565c-419a-82af-194f7e9a0e36',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'd295ef92-565c-419a-82af-194f7e9a0e36'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:10.350Z',
      uuid: 'd295ef92-565c-419a-82af-194f7e9a0e36',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'd295ef92-565c-419a-82af-194f7e9a0e36'
    }
  ]
} to 36431:0
2025-08-05T18:47:14.719Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'd295ef92-565c-419a-82af-194f7e9a0e36',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'ba95549e-a256-4b5d-83a1-9aed7a088dc6',
    body: { lang: 'node', code: null },
    scope: 'should have consistent button styling',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
    started_at: '2025-08-05T18:47:10.281Z',
    finished_at: '2025-08-05T18:47:14.700Z'
  }
} to 36431:0
2025-08-05T18:47:14.744Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'ba95549e-a256-4b5d-83a1-9aed7a088dc6',
    name: 'should have consistent button styling',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    const buttons = page.locator('button');\n" +
        '    for (let i = 0; i < Math.min(await buttons.count(), 5); i++) {\n' +
        '      const button = buttons.nth(i);\n' +
        '\n' +
        '      // Check button has proper styling\n' +
        '      const styles = await button.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding,\n' +
        '          cursor: computed.cursor\n' +
        '        };\n' +
        '      });\n' +
        "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
        "      (0, _test.expect)(styles.borderRadius).not.toBe('0px');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should have consistent button styling',
    scope: 'should have consistent button styling',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 48,
    started_at: '2025-08-05T18:47:10.260Z',
    finished_at: '2025-08-05T18:47:10.308Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should have consistent button styling'
    },
    hooks: [ 'd295ef92-565c-419a-82af-194f7e9a0e36' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:14.744Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:14.725Z',
      uuid: 'ba95549e-a256-4b5d-83a1-9aed7a088dc6',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'ba95549e-a256-4b5d-83a1-9aed7a088dc6'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:14.726Z',
      uuid: 'ba95549e-a256-4b5d-83a1-9aed7a088dc6',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'ba95549e-a256-4b5d-83a1-9aed7a088dc6'
    }
  ]
} to 36431:0
2025-08-05T18:47:15.505Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:11.192Z',
      uuid: '6bffb7be-b727-4e36-be1c-5e7c51fa1eec',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '6bffb7be-b727-4e36-be1c-5e7c51fa1eec'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:11.221Z',
      uuid: '6bffb7be-b727-4e36-be1c-5e7c51fa1eec',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '6bffb7be-b727-4e36-be1c-5e7c51fa1eec'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:11.252Z',
      uuid: '6bffb7be-b727-4e36-be1c-5e7c51fa1eec',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '6bffb7be-b727-4e36-be1c-5e7c51fa1eec'
    }
  ]
} to 36431:0
2025-08-05T18:47:15.509Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '6bffb7be-b727-4e36-be1c-5e7c51fa1eec',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '6386af81-e81e-47ff-bf05-f64f78afd93d',
    body: { lang: 'node', code: null },
    scope: 'should handle form elements consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
    started_at: '2025-08-05T18:47:11.186Z',
    finished_at: '2025-08-05T18:47:15.499Z'
  }
} to 36431:0
2025-08-05T18:47:15.538Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '6386af81-e81e-47ff-bf05-f64f78afd93d',
    name: 'should handle form elements consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test form input styling\n' +
        "    const inputs = page.locator('input, textarea, select');\n" +
        '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
        '      const input = inputs.nth(i);\n' +
        '      const styles = await input.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          border: computed.border,\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have consistent border and padding\n' +
        "      (0, _test.expect)(styles.border).not.toBe('none');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form elements consistently',
    scope: 'should handle form elements consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 51,
    started_at: '2025-08-05T18:47:11.179Z',
    finished_at: '2025-08-05T18:47:11.230Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle form elements consistently'
    },
    hooks: [ '6bffb7be-b727-4e36-be1c-5e7c51fa1eec' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:15.538Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:15.522Z',
      uuid: '6386af81-e81e-47ff-bf05-f64f78afd93d',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '6386af81-e81e-47ff-bf05-f64f78afd93d'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:15.523Z',
      uuid: '6386af81-e81e-47ff-bf05-f64f78afd93d',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '6386af81-e81e-47ff-bf05-f64f78afd93d'
    }
  ]
} to 36431:0
2025-08-05T18:47:15.899Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'a3be7e1c-f142-4916-8eaf-02eaa8a50889',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '012b706a-638e-4e69-a68a-d280791fbe90',
      body: [Object],
      scope: 'should maintain layout consistency on different screen sizes',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
      started_at: '2025-08-05T18:47:10.294Z',
      finished_at: '2025-08-05T18:47:14.659Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '012b706a-638e-4e69-a68a-d280791fbe90',
      name: 'should maintain layout consistency on different screen sizes',
      body: [Object],
      identifier: 'should maintain layout consistency on different screen sizes',
      scope: 'should maintain layout consistency on different screen sizes',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 46,
      started_at: '2025-08-05T18:47:10.275Z',
      finished_at: '2025-08-05T18:47:10.321Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'd295ef92-565c-419a-82af-194f7e9a0e36',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'ba95549e-a256-4b5d-83a1-9aed7a088dc6',
      body: [Object],
      scope: 'should have consistent button styling',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
      started_at: '2025-08-05T18:47:10.281Z',
      finished_at: '2025-08-05T18:47:14.700Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'ba95549e-a256-4b5d-83a1-9aed7a088dc6',
      name: 'should have consistent button styling',
      body: [Object],
      identifier: 'should have consistent button styling',
      scope: 'should have consistent button styling',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 48,
      started_at: '2025-08-05T18:47:10.260Z',
      finished_at: '2025-08-05T18:47:10.308Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '6bffb7be-b727-4e36-be1c-5e7c51fa1eec',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '6386af81-e81e-47ff-bf05-f64f78afd93d',
      body: [Object],
      scope: 'should handle form elements consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
      started_at: '2025-08-05T18:47:11.186Z',
      finished_at: '2025-08-05T18:47:15.499Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '6386af81-e81e-47ff-bf05-f64f78afd93d',
      name: 'should handle form elements consistently',
      body: [Object],
      identifier: 'should handle form elements consistently',
      scope: 'should handle form elements consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 51,
      started_at: '2025-08-05T18:47:11.179Z',
      finished_at: '2025-08-05T18:47:11.230Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:47:15.900Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:47:18.384Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '1726fccb-ee39-4a76-9dac-cd008691e89b',
    name: 'should handle dark mode consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test dark mode colors\n' +
        '    await page.evaluate(() => {\n' +
        '      // Simulate dark mode\n' +
        "      document.documentElement.style.colorScheme = 'dark';\n" +
        "      document.documentElement.classList.add('dark');\n" +
        '    });\n' +
        '    await page.waitForTimeout(100);\n' +
        '\n' +
        '    // Check that dark mode colors are applied\n' +
        '    const bodyColor = await page.evaluate(() => {\n' +
        '      return window.getComputedStyle(document.body).backgroundColor;\n' +
        '    });\n' +
        '\n' +
        '    // Should have dark background in dark mode\n' +
        '    (0, _test.expect)(bodyColor).toMatch(/rgb\\(10, 10, 10\\)|rgba\\(10, 10, 10/);\n' +
        '  }'
    },
    identifier: 'should handle dark mode consistently',
    scope: 'should handle dark mode consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:47:18.337Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle dark mode consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:18.385Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '3d9c9aab-f475-4f25-858f-08716a94c362',
    name: 'should maintain consistent spacing and alignment',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test that elements have consistent spacing\n' +
        "    const containers = page.locator('div, section, article').filter({\n" +
        '      hasText: /./\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await containers.count(), 10); i++) {\n' +
        '      const container = containers.nth(i);\n' +
        '      const styles = await container.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          margin: computed.margin,\n' +
        '          padding: computed.padding,\n' +
        '          display: computed.display\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have consistent display properties\n' +
        "      (0, _test.expect)(['block', 'flex', 'grid', 'inline-block']).toContain(styles.display);\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent spacing and alignment',
    scope: 'should maintain consistent spacing and alignment',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:47:18.339Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain consistent spacing and alignment'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:18.389Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '5d4dee97-c7fb-4ec8-b12b-062f625031e9',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '1726fccb-ee39-4a76-9dac-cd008691e89b',
    body: { lang: 'node', code: null },
    scope: 'should handle dark mode consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    started_at: '2025-08-05T18:47:18.351Z'
  }
} to 36431:0
2025-08-05T18:47:18.390Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '074edd66-9f2e-4f16-bf72-2752d2483961',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '3d9c9aab-f475-4f25-858f-08716a94c362',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent spacing and alignment',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    started_at: '2025-08-05T18:47:18.356Z'
  }
} to 36431:0
2025-08-05T18:47:19.173Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'a3e6d83e-1ea4-4f37-9595-736f5b343cc7',
    name: 'should maintain accessibility standards',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test color contrast\n' +
        "    const textElements = page.locator('h1, h2, h3, p, span, div').filter({\n" +
        '      hasText: /./\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await textElements.count(), 5); i++) {\n' +
        '      const element = textElements.nth(i);\n' +
        '      const contrast = await element.evaluate(el => {\n' +
        '        const style = window.getComputedStyle(el);\n' +
        '        const backgroundColor = style.backgroundColor;\n' +
        '        const color = style.color;\n' +
        '\n' +
        "        // Simple contrast check - in a real test, you'd use a proper contrast calculation\n" +
        '        return {\n' +
        '          backgroundColor,\n' +
        '          color\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have defined colors\n' +
        "      (0, _test.expect)(contrast.backgroundColor).not.toBe('rgba(0, 0, 0, 0)');\n" +
        "      (0, _test.expect)(contrast.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain accessibility standards',
    scope: 'should maintain accessibility standards',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:47:19.158Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain accessibility standards'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:19.186Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '83056215-9c31-4433-8d38-98f7f5c8c6d8',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'a3e6d83e-1ea4-4f37-9595-736f5b343cc7',
    body: { lang: 'node', code: null },
    scope: 'should maintain accessibility standards',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    started_at: '2025-08-05T18:47:19.182Z'
  }
} to 36431:0
2025-08-05T18:47:19.900Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '1726fccb-ee39-4a76-9dac-cd008691e89b',
      name: 'should handle dark mode consistently',
      body: [Object],
      identifier: 'should handle dark mode consistently',
      scope: 'should handle dark mode consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:47:18.337Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '3d9c9aab-f475-4f25-858f-08716a94c362',
      name: 'should maintain consistent spacing and alignment',
      body: [Object],
      identifier: 'should maintain consistent spacing and alignment',
      scope: 'should maintain consistent spacing and alignment',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:47:18.339Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '5d4dee97-c7fb-4ec8-b12b-062f625031e9',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '1726fccb-ee39-4a76-9dac-cd008691e89b',
      body: [Object],
      scope: 'should handle dark mode consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      started_at: '2025-08-05T18:47:18.351Z'
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '074edd66-9f2e-4f16-bf72-2752d2483961',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '3d9c9aab-f475-4f25-858f-08716a94c362',
      body: [Object],
      scope: 'should maintain consistent spacing and alignment',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      started_at: '2025-08-05T18:47:18.356Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'a3e6d83e-1ea4-4f37-9595-736f5b343cc7',
      name: 'should maintain accessibility standards',
      body: [Object],
      identifier: 'should maintain accessibility standards',
      scope: 'should maintain accessibility standards',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:47:19.158Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '83056215-9c31-4433-8d38-98f7f5c8c6d8',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'a3e6d83e-1ea4-4f37-9595-736f5b343cc7',
      body: [Object],
      scope: 'should maintain accessibility standards',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      started_at: '2025-08-05T18:47:19.182Z'
    }
  }
] to 36431:0
2025-08-05T18:47:19.901Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:47:22.796Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:18.353Z',
      uuid: '5d4dee97-c7fb-4ec8-b12b-062f625031e9',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '5d4dee97-c7fb-4ec8-b12b-062f625031e9'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:18.380Z',
      uuid: '5d4dee97-c7fb-4ec8-b12b-062f625031e9',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '5d4dee97-c7fb-4ec8-b12b-062f625031e9'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:18.415Z',
      uuid: '5d4dee97-c7fb-4ec8-b12b-062f625031e9',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '5d4dee97-c7fb-4ec8-b12b-062f625031e9'
    }
  ]
} to 36431:0
2025-08-05T18:47:22.798Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '5d4dee97-c7fb-4ec8-b12b-062f625031e9',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '1726fccb-ee39-4a76-9dac-cd008691e89b',
    body: { lang: 'node', code: null },
    scope: 'should handle dark mode consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
    started_at: '2025-08-05T18:47:18.351Z',
    finished_at: '2025-08-05T18:47:22.792Z'
  }
} to 36431:0
2025-08-05T18:47:22.824Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '1726fccb-ee39-4a76-9dac-cd008691e89b',
    name: 'should handle dark mode consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test dark mode colors\n' +
        '    await page.evaluate(() => {\n' +
        '      // Simulate dark mode\n' +
        "      document.documentElement.style.colorScheme = 'dark';\n" +
        "      document.documentElement.classList.add('dark');\n" +
        '    });\n' +
        '    await page.waitForTimeout(100);\n' +
        '\n' +
        '    // Check that dark mode colors are applied\n' +
        '    const bodyColor = await page.evaluate(() => {\n' +
        '      return window.getComputedStyle(document.body).backgroundColor;\n' +
        '    });\n' +
        '\n' +
        '    // Should have dark background in dark mode\n' +
        '    (0, _test.expect)(bodyColor).toMatch(/rgb\\(10, 10, 10\\)|rgba\\(10, 10, 10/);\n' +
        '  }'
    },
    identifier: 'should handle dark mode consistently',
    scope: 'should handle dark mode consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 40,
    started_at: '2025-08-05T18:47:18.337Z',
    finished_at: '2025-08-05T18:47:18.377Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle dark mode consistently'
    },
    hooks: [ '5d4dee97-c7fb-4ec8-b12b-062f625031e9' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:22.824Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:22.809Z',
      uuid: '1726fccb-ee39-4a76-9dac-cd008691e89b',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '1726fccb-ee39-4a76-9dac-cd008691e89b'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:22.810Z',
      uuid: '1726fccb-ee39-4a76-9dac-cd008691e89b',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '1726fccb-ee39-4a76-9dac-cd008691e89b'
    }
  ]
} to 36431:0
2025-08-05T18:47:23.409Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:19.187Z',
      uuid: '83056215-9c31-4433-8d38-98f7f5c8c6d8',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '83056215-9c31-4433-8d38-98f7f5c8c6d8'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:19.216Z',
      uuid: '83056215-9c31-4433-8d38-98f7f5c8c6d8',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '83056215-9c31-4433-8d38-98f7f5c8c6d8'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:19.265Z',
      uuid: '83056215-9c31-4433-8d38-98f7f5c8c6d8',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '83056215-9c31-4433-8d38-98f7f5c8c6d8'
    }
  ]
} to 36431:0
2025-08-05T18:47:23.413Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '83056215-9c31-4433-8d38-98f7f5c8c6d8',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'a3e6d83e-1ea4-4f37-9595-736f5b343cc7',
    body: { lang: 'node', code: null },
    scope: 'should maintain accessibility standards',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
    started_at: '2025-08-05T18:47:19.182Z',
    finished_at: '2025-08-05T18:47:23.404Z'
  }
} to 36431:0
2025-08-05T18:47:23.437Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'a3e6d83e-1ea4-4f37-9595-736f5b343cc7',
    name: 'should maintain accessibility standards',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test color contrast\n' +
        "    const textElements = page.locator('h1, h2, h3, p, span, div').filter({\n" +
        '      hasText: /./\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await textElements.count(), 5); i++) {\n' +
        '      const element = textElements.nth(i);\n' +
        '      const contrast = await element.evaluate(el => {\n' +
        '        const style = window.getComputedStyle(el);\n' +
        '        const backgroundColor = style.backgroundColor;\n' +
        '        const color = style.color;\n' +
        '\n' +
        "        // Simple contrast check - in a real test, you'd use a proper contrast calculation\n" +
        '        return {\n' +
        '          backgroundColor,\n' +
        '          color\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have defined colors\n' +
        "      (0, _test.expect)(contrast.backgroundColor).not.toBe('rgba(0, 0, 0, 0)');\n" +
        "      (0, _test.expect)(contrast.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain accessibility standards',
    scope: 'should maintain accessibility standards',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 45,
    started_at: '2025-08-05T18:47:19.158Z',
    finished_at: '2025-08-05T18:47:19.203Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain accessibility standards'
    },
    hooks: [ '83056215-9c31-4433-8d38-98f7f5c8c6d8' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:23.438Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:23.423Z',
      uuid: 'a3e6d83e-1ea4-4f37-9595-736f5b343cc7',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'a3e6d83e-1ea4-4f37-9595-736f5b343cc7'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:23.424Z',
      uuid: 'a3e6d83e-1ea4-4f37-9595-736f5b343cc7',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'a3e6d83e-1ea4-4f37-9595-736f5b343cc7'
    }
  ]
} to 36431:0
2025-08-05T18:47:23.622Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:18.359Z',
      uuid: '074edd66-9f2e-4f16-bf72-2752d2483961',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '074edd66-9f2e-4f16-bf72-2752d2483961'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:18.392Z',
      uuid: '074edd66-9f2e-4f16-bf72-2752d2483961',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '074edd66-9f2e-4f16-bf72-2752d2483961'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:18.422Z',
      uuid: '074edd66-9f2e-4f16-bf72-2752d2483961',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '074edd66-9f2e-4f16-bf72-2752d2483961'
    }
  ]
} to 36431:0
2025-08-05T18:47:23.627Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '074edd66-9f2e-4f16-bf72-2752d2483961',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '3d9c9aab-f475-4f25-858f-08716a94c362',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent spacing and alignment',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
    started_at: '2025-08-05T18:47:18.356Z',
    finished_at: '2025-08-05T18:47:23.616Z'
  }
} to 36431:0
2025-08-05T18:47:23.663Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '3d9c9aab-f475-4f25-858f-08716a94c362',
    name: 'should maintain consistent spacing and alignment',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test that elements have consistent spacing\n' +
        "    const containers = page.locator('div, section, article').filter({\n" +
        '      hasText: /./\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await containers.count(), 10); i++) {\n' +
        '      const container = containers.nth(i);\n' +
        '      const styles = await container.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          margin: computed.margin,\n' +
        '          padding: computed.padding,\n' +
        '          display: computed.display\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have consistent display properties\n' +
        "      (0, _test.expect)(['block', 'flex', 'grid', 'inline-block']).toContain(styles.display);\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent spacing and alignment',
    scope: 'should maintain consistent spacing and alignment',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 47,
    started_at: '2025-08-05T18:47:18.339Z',
    finished_at: '2025-08-05T18:47:18.386Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain consistent spacing and alignment'
    },
    hooks: [ '074edd66-9f2e-4f16-bf72-2752d2483961' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:23.664Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:23.635Z',
      uuid: '3d9c9aab-f475-4f25-858f-08716a94c362',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '3d9c9aab-f475-4f25-858f-08716a94c362'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:23.635Z',
      uuid: '3d9c9aab-f475-4f25-858f-08716a94c362',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '3d9c9aab-f475-4f25-858f-08716a94c362'
    }
  ]
} to 36431:0
2025-08-05T18:47:23.907Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '5d4dee97-c7fb-4ec8-b12b-062f625031e9',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '1726fccb-ee39-4a76-9dac-cd008691e89b',
      body: [Object],
      scope: 'should handle dark mode consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
      started_at: '2025-08-05T18:47:18.351Z',
      finished_at: '2025-08-05T18:47:22.792Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '1726fccb-ee39-4a76-9dac-cd008691e89b',
      name: 'should handle dark mode consistently',
      body: [Object],
      identifier: 'should handle dark mode consistently',
      scope: 'should handle dark mode consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 40,
      started_at: '2025-08-05T18:47:18.337Z',
      finished_at: '2025-08-05T18:47:18.377Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '83056215-9c31-4433-8d38-98f7f5c8c6d8',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'a3e6d83e-1ea4-4f37-9595-736f5b343cc7',
      body: [Object],
      scope: 'should maintain accessibility standards',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
      started_at: '2025-08-05T18:47:19.182Z',
      finished_at: '2025-08-05T18:47:23.404Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'a3e6d83e-1ea4-4f37-9595-736f5b343cc7',
      name: 'should maintain accessibility standards',
      body: [Object],
      identifier: 'should maintain accessibility standards',
      scope: 'should maintain accessibility standards',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 45,
      started_at: '2025-08-05T18:47:19.158Z',
      finished_at: '2025-08-05T18:47:19.203Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '074edd66-9f2e-4f16-bf72-2752d2483961',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '3d9c9aab-f475-4f25-858f-08716a94c362',
      body: [Object],
      scope: 'should maintain consistent spacing and alignment',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
      started_at: '2025-08-05T18:47:18.356Z',
      finished_at: '2025-08-05T18:47:23.616Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '3d9c9aab-f475-4f25-858f-08716a94c362',
      name: 'should maintain consistent spacing and alignment',
      body: [Object],
      identifier: 'should maintain consistent spacing and alignment',
      scope: 'should maintain consistent spacing and alignment',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 47,
      started_at: '2025-08-05T18:47:18.339Z',
      finished_at: '2025-08-05T18:47:18.386Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:47:23.909Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:47:26.710Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'ffcc4e6e-dfec-41ab-91b3-4792c12d6478',
    name: 'should handle images and icons consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    const images = page.locator('img, svg');\n" +
        '    for (let i = 0; i < Math.min(await images.count(), 5); i++) {\n' +
        '      const image = images.nth(i);\n' +
        '\n' +
        '      // Check that images are properly loaded and visible\n' +
        '      const isVisible = await image.isVisible();\n' +
        '      (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        '      // Check that images have proper alt text or aria labels\n' +
        "      const altText = await image.getAttribute('alt');\n" +
        "      const ariaLabel = await image.getAttribute('aria-label');\n" +
        '      if (!altText && !ariaLabel) {\n' +
        '        // For decorative images, this might be acceptable\n' +
        "        const role = await image.getAttribute('role');\n" +
        "        (0, _test.expect)(role === 'presentation' || role === 'img').toBe(true);\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle images and icons consistently',
    scope: 'should handle images and icons consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:47:26.699Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle images and icons consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:26.714Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '57a5e624-5656-44ca-8aed-a5ac6585733a',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'ffcc4e6e-dfec-41ab-91b3-4792c12d6478',
    body: { lang: 'node', code: null },
    scope: 'should handle images and icons consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    started_at: '2025-08-05T18:47:26.712Z'
  }
} to 36431:0
2025-08-05T18:47:27.249Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '5e319620-7115-4670-83e5-aedf692f6b89',
    name: 'should display assessment questions consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Wait for assessment content to load\n' +
        `    await page.waitForSelector('[data-testid="assessment-question"], .question, h1, h2', {\n` +
        '      timeout: 10000\n' +
        '    });\n' +
        '\n' +
        '    // Check that questions are visible and properly styled\n' +
        `    const questions = page.locator('[data-testid="assessment-question"], .question, h1, h2').filter({\n` +
        '      hasText: /./\n' +
        '    });\n' +
        '    (0, _test.expect)(await questions.count()).toBeGreaterThan(0);\n' +
        '    for (let i = 0; i < Math.min(await questions.count(), 3); i++) {\n' +
        '      const question = questions.nth(i);\n' +
        '\n' +
        '      // Check visibility\n' +
        '      await (0, _test.expect)(question).toBeVisible();\n' +
        '\n' +
        '      // Check styling\n' +
        '      const styles = await question.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          fontSize: computed.fontSize,\n' +
        '          fontWeight: computed.fontWeight,\n' +
        '          color: computed.color,\n' +
        '          lineHeight: computed.lineHeight\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have readable text styling\n' +
        '      (0, _test.expect)(parseFloat(styles.fontSize)).toBeGreaterThan(12);\n' +
        "      (0, _test.expect)(styles.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display assessment questions consistently',
    scope: 'should display assessment questions consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:47:27.232Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should display assessment questions consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:27.260Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '44caf213-1e2b-4954-84b0-1822a3a5b4dc',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '5e319620-7115-4670-83e5-aedf692f6b89',
    body: { lang: 'node', code: null },
    scope: 'should display assessment questions consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    started_at: '2025-08-05T18:47:27.254Z'
  }
} to 36431:0
2025-08-05T18:47:27.393Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '94b36669-be9a-423f-b965-ea2de081494b',
    name: 'should handle form inputs consistently across browsers',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for form inputs (radio buttons, checkboxes, text inputs)\n' +
        "    const inputs = page.locator('input, textarea, select');\n" +
        '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
        '      const input = inputs.nth(i);\n' +
        '\n' +
        '      // Check input is visible and interactive\n' +
        '      await (0, _test.expect)(input).toBeVisible();\n' +
        "      const inputType = await input.getAttribute('type');\n" +
        "      if (inputType === 'radio' || inputType === 'checkbox') {\n" +
        '        // Test radio/checkbox functionality\n' +
        '        await input.click();\n' +
        '\n' +
        '        // Verify selection state\n' +
        '        const isChecked = await input.isChecked();\n' +
        '        (0, _test.expect)(isChecked).toBe(true);\n' +
        "      } else if (inputType === 'text' || inputType === 'textarea') {\n" +
        '        // Test text input functionality\n' +
        "        await input.fill('Test input');\n" +
        '        const value = await input.inputValue();\n' +
        "        (0, _test.expect)(value).toBe('Test input');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form inputs consistently across browsers',
    scope: 'should handle form inputs consistently across browsers',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:47:27.382Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form inputs consistently across browsers'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:27.395Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '52000c02-8f60-4e91-a57b-f6ce2729e71e',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '94b36669-be9a-423f-b965-ea2de081494b',
    body: { lang: 'node', code: null },
    scope: 'should handle form inputs consistently across browsers',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    started_at: '2025-08-05T18:47:27.390Z'
  }
} to 36431:0
2025-08-05T18:47:27.904Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'ffcc4e6e-dfec-41ab-91b3-4792c12d6478',
      name: 'should handle images and icons consistently',
      body: [Object],
      identifier: 'should handle images and icons consistently',
      scope: 'should handle images and icons consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:47:26.699Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '57a5e624-5656-44ca-8aed-a5ac6585733a',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'ffcc4e6e-dfec-41ab-91b3-4792c12d6478',
      body: [Object],
      scope: 'should handle images and icons consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      started_at: '2025-08-05T18:47:26.712Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '5e319620-7115-4670-83e5-aedf692f6b89',
      name: 'should display assessment questions consistently',
      body: [Object],
      identifier: 'should display assessment questions consistently',
      scope: 'should display assessment questions consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:47:27.232Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '44caf213-1e2b-4954-84b0-1822a3a5b4dc',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '5e319620-7115-4670-83e5-aedf692f6b89',
      body: [Object],
      scope: 'should display assessment questions consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      started_at: '2025-08-05T18:47:27.254Z'
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '94b36669-be9a-423f-b965-ea2de081494b',
      name: 'should handle form inputs consistently across browsers',
      body: [Object],
      identifier: 'should handle form inputs consistently across browsers',
      scope: 'should handle form inputs consistently across browsers',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:47:27.382Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '52000c02-8f60-4e91-a57b-f6ce2729e71e',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '94b36669-be9a-423f-b965-ea2de081494b',
      body: [Object],
      scope: 'should handle form inputs consistently across browsers',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      started_at: '2025-08-05T18:47:27.390Z'
    }
  }
] to 36431:0
2025-08-05T18:47:27.905Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:47:32.032Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:26.717Z',
      uuid: '57a5e624-5656-44ca-8aed-a5ac6585733a',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '57a5e624-5656-44ca-8aed-a5ac6585733a'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:26.739Z',
      uuid: '57a5e624-5656-44ca-8aed-a5ac6585733a',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '57a5e624-5656-44ca-8aed-a5ac6585733a'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:26.770Z',
      uuid: '57a5e624-5656-44ca-8aed-a5ac6585733a',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '57a5e624-5656-44ca-8aed-a5ac6585733a'
    }
  ]
} to 36431:0
2025-08-05T18:47:32.035Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '57a5e624-5656-44ca-8aed-a5ac6585733a',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'ffcc4e6e-dfec-41ab-91b3-4792c12d6478',
    body: { lang: 'node', code: null },
    scope: 'should handle images and icons consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Visual Consistency Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
    started_at: '2025-08-05T18:47:26.712Z',
    finished_at: '2025-08-05T18:47:32.024Z'
  }
} to 36431:0
2025-08-05T18:47:32.092Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'ffcc4e6e-dfec-41ab-91b3-4792c12d6478',
    name: 'should handle images and icons consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    const images = page.locator('img, svg');\n" +
        '    for (let i = 0; i < Math.min(await images.count(), 5); i++) {\n' +
        '      const image = images.nth(i);\n' +
        '\n' +
        '      // Check that images are properly loaded and visible\n' +
        '      const isVisible = await image.isVisible();\n' +
        '      (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        '      // Check that images have proper alt text or aria labels\n' +
        "      const altText = await image.getAttribute('alt');\n" +
        "      const ariaLabel = await image.getAttribute('aria-label');\n" +
        '      if (!altText && !ariaLabel) {\n' +
        '        // For decorative images, this might be acceptable\n' +
        "        const role = await image.getAttribute('role');\n" +
        "        (0, _test.expect)(role === 'presentation' || role === 'img').toBe(true);\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle images and icons consistently',
    scope: 'should handle images and icons consistently',
    scopes: [ 'Visual Consistency Tests' ],
    custom_metadata: {},
    file_name: 'tests/visual-consistency.spec.ts',
    vc_filepath: 'tests/visual-consistency.spec.ts',
    location: 'tests/visual-consistency.spec.ts',
    result: 'failed',
    duration_in_ms: 49,
    started_at: '2025-08-05T18:47:26.699Z',
    finished_at: '2025-08-05T18:47:26.748Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle images and icons consistently'
    },
    hooks: [ '57a5e624-5656-44ca-8aed-a5ac6585733a' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:32.098Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:32.056Z',
      uuid: 'ffcc4e6e-dfec-41ab-91b3-4792c12d6478',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'ffcc4e6e-dfec-41ab-91b3-4792c12d6478'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:32.058Z',
      uuid: 'ffcc4e6e-dfec-41ab-91b3-4792c12d6478',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'ffcc4e6e-dfec-41ab-91b3-4792c12d6478'
    }
  ]
} to 36431:0
2025-08-05T18:47:33.905Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '57a5e624-5656-44ca-8aed-a5ac6585733a',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'ffcc4e6e-dfec-41ab-91b3-4792c12d6478',
      body: [Object],
      scope: 'should handle images and icons consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
      started_at: '2025-08-05T18:47:26.712Z',
      finished_at: '2025-08-05T18:47:32.024Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'ffcc4e6e-dfec-41ab-91b3-4792c12d6478',
      name: 'should handle images and icons consistently',
      body: [Object],
      identifier: 'should handle images and icons consistently',
      scope: 'should handle images and icons consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/visual-consistency.spec.ts',
      vc_filepath: 'tests/visual-consistency.spec.ts',
      location: 'tests/visual-consistency.spec.ts',
      result: 'failed',
      duration_in_ms: 49,
      started_at: '2025-08-05T18:47:26.699Z',
      finished_at: '2025-08-05T18:47:26.748Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:47:33.905Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:47:34.448Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:27.393Z',
      uuid: '52000c02-8f60-4e91-a57b-f6ce2729e71e',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '52000c02-8f60-4e91-a57b-f6ce2729e71e'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:27.415Z',
      uuid: '52000c02-8f60-4e91-a57b-f6ce2729e71e',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '52000c02-8f60-4e91-a57b-f6ce2729e71e'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:27.447Z',
      uuid: '52000c02-8f60-4e91-a57b-f6ce2729e71e',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '52000c02-8f60-4e91-a57b-f6ce2729e71e'
    }
  ]
} to 36431:0
2025-08-05T18:47:34.453Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '52000c02-8f60-4e91-a57b-f6ce2729e71e',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '94b36669-be9a-423f-b965-ea2de081494b',
    body: { lang: 'node', code: null },
    scope: 'should handle form inputs consistently across browsers',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
    started_at: '2025-08-05T18:47:27.390Z',
    finished_at: '2025-08-05T18:47:34.442Z'
  }
} to 36431:0
2025-08-05T18:47:34.476Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '94b36669-be9a-423f-b965-ea2de081494b',
    name: 'should handle form inputs consistently across browsers',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for form inputs (radio buttons, checkboxes, text inputs)\n' +
        "    const inputs = page.locator('input, textarea, select');\n" +
        '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
        '      const input = inputs.nth(i);\n' +
        '\n' +
        '      // Check input is visible and interactive\n' +
        '      await (0, _test.expect)(input).toBeVisible();\n' +
        "      const inputType = await input.getAttribute('type');\n" +
        "      if (inputType === 'radio' || inputType === 'checkbox') {\n" +
        '        // Test radio/checkbox functionality\n' +
        '        await input.click();\n' +
        '\n' +
        '        // Verify selection state\n' +
        '        const isChecked = await input.isChecked();\n' +
        '        (0, _test.expect)(isChecked).toBe(true);\n' +
        "      } else if (inputType === 'text' || inputType === 'textarea') {\n" +
        '        // Test text input functionality\n' +
        "        await input.fill('Test input');\n" +
        '        const value = await input.inputValue();\n' +
        "        (0, _test.expect)(value).toBe('Test input');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form inputs consistently across browsers',
    scope: 'should handle form inputs consistently across browsers',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 38,
    started_at: '2025-08-05T18:47:27.382Z',
    finished_at: '2025-08-05T18:47:27.420Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form inputs consistently across browsers'
    },
    hooks: [ '52000c02-8f60-4e91-a57b-f6ce2729e71e' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:34.477Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:34.462Z',
      uuid: '94b36669-be9a-423f-b965-ea2de081494b',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '94b36669-be9a-423f-b965-ea2de081494b'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:34.463Z',
      uuid: '94b36669-be9a-423f-b965-ea2de081494b',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '94b36669-be9a-423f-b965-ea2de081494b'
    }
  ]
} to 36431:0
2025-08-05T18:47:35.465Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '7eac935b-436e-4909-a0b6-f17739a31b4c',
    name: 'should maintain consistent button styling and behavior',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        `    const buttons = page.locator('button, [role="button"], input[type="submit"]');\n` +
        '    for (let i = 0; i < Math.min(await buttons.count(), 3); i++) {\n' +
        '      const button = buttons.nth(i);\n' +
        '\n' +
        '      // Check button styling\n' +
        '      const styles = await button.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          backgroundColor: computed.backgroundColor,\n' +
        '          color: computed.color,\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding,\n' +
        '          cursor: computed.cursor\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have proper button styling\n' +
        "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '\n' +
        '      // Check button text is readable\n' +
        '      const buttonText = await button.textContent();\n' +
        '      if (buttonText && buttonText.trim()) {\n' +
        '        (0, _test.expect)(buttonText.trim().length).toBeGreaterThan(0);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent button styling and behavior',
    scope: 'should maintain consistent button styling and behavior',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:47:35.452Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent button styling and behavior'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:35.466Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'b580a17a-baf4-4e5d-9a75-5dbebef67795',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '7eac935b-436e-4909-a0b6-f17739a31b4c',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent button styling and behavior',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    started_at: '2025-08-05T18:47:35.459Z'
  }
} to 36431:0
2025-08-05T18:47:35.636Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:27.257Z',
      uuid: '44caf213-1e2b-4954-84b0-1822a3a5b4dc',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '44caf213-1e2b-4954-84b0-1822a3a5b4dc'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:27.281Z',
      uuid: '44caf213-1e2b-4954-84b0-1822a3a5b4dc',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '44caf213-1e2b-4954-84b0-1822a3a5b4dc'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:27.312Z',
      uuid: '44caf213-1e2b-4954-84b0-1822a3a5b4dc',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '44caf213-1e2b-4954-84b0-1822a3a5b4dc'
    }
  ]
} to 36431:0
2025-08-05T18:47:35.639Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '44caf213-1e2b-4954-84b0-1822a3a5b4dc',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '5e319620-7115-4670-83e5-aedf692f6b89',
    body: { lang: 'node', code: null },
    scope: 'should display assessment questions consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
    started_at: '2025-08-05T18:47:27.254Z',
    finished_at: '2025-08-05T18:47:35.632Z'
  }
} to 36431:0
2025-08-05T18:47:35.664Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '5e319620-7115-4670-83e5-aedf692f6b89',
    name: 'should display assessment questions consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Wait for assessment content to load\n' +
        `    await page.waitForSelector('[data-testid="assessment-question"], .question, h1, h2', {\n` +
        '      timeout: 10000\n' +
        '    });\n' +
        '\n' +
        '    // Check that questions are visible and properly styled\n' +
        `    const questions = page.locator('[data-testid="assessment-question"], .question, h1, h2').filter({\n` +
        '      hasText: /./\n' +
        '    });\n' +
        '    (0, _test.expect)(await questions.count()).toBeGreaterThan(0);\n' +
        '    for (let i = 0; i < Math.min(await questions.count(), 3); i++) {\n' +
        '      const question = questions.nth(i);\n' +
        '\n' +
        '      // Check visibility\n' +
        '      await (0, _test.expect)(question).toBeVisible();\n' +
        '\n' +
        '      // Check styling\n' +
        '      const styles = await question.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          fontSize: computed.fontSize,\n' +
        '          fontWeight: computed.fontWeight,\n' +
        '          color: computed.color,\n' +
        '          lineHeight: computed.lineHeight\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have readable text styling\n' +
        '      (0, _test.expect)(parseFloat(styles.fontSize)).toBeGreaterThan(12);\n' +
        "      (0, _test.expect)(styles.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display assessment questions consistently',
    scope: 'should display assessment questions consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 40,
    started_at: '2025-08-05T18:47:27.232Z',
    finished_at: '2025-08-05T18:47:27.272Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should display assessment questions consistently'
    },
    hooks: [ '44caf213-1e2b-4954-84b0-1822a3a5b4dc' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:35.665Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:35.651Z',
      uuid: '5e319620-7115-4670-83e5-aedf692f6b89',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '5e319620-7115-4670-83e5-aedf692f6b89'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:35.652Z',
      uuid: '5e319620-7115-4670-83e5-aedf692f6b89',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '5e319620-7115-4670-83e5-aedf692f6b89'
    }
  ]
} to 36431:0
2025-08-05T18:47:35.905Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '52000c02-8f60-4e91-a57b-f6ce2729e71e',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '94b36669-be9a-423f-b965-ea2de081494b',
      body: [Object],
      scope: 'should handle form inputs consistently across browsers',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
      started_at: '2025-08-05T18:47:27.390Z',
      finished_at: '2025-08-05T18:47:34.442Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '94b36669-be9a-423f-b965-ea2de081494b',
      name: 'should handle form inputs consistently across browsers',
      body: [Object],
      identifier: 'should handle form inputs consistently across browsers',
      scope: 'should handle form inputs consistently across browsers',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 38,
      started_at: '2025-08-05T18:47:27.382Z',
      finished_at: '2025-08-05T18:47:27.420Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '7eac935b-436e-4909-a0b6-f17739a31b4c',
      name: 'should maintain consistent button styling and behavior',
      body: [Object],
      identifier: 'should maintain consistent button styling and behavior',
      scope: 'should maintain consistent button styling and behavior',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:47:35.452Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'b580a17a-baf4-4e5d-9a75-5dbebef67795',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '7eac935b-436e-4909-a0b6-f17739a31b4c',
      body: [Object],
      scope: 'should maintain consistent button styling and behavior',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      started_at: '2025-08-05T18:47:35.459Z'
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '44caf213-1e2b-4954-84b0-1822a3a5b4dc',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '5e319620-7115-4670-83e5-aedf692f6b89',
      body: [Object],
      scope: 'should display assessment questions consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
      started_at: '2025-08-05T18:47:27.254Z',
      finished_at: '2025-08-05T18:47:35.632Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '5e319620-7115-4670-83e5-aedf692f6b89',
      name: 'should display assessment questions consistently',
      body: [Object],
      identifier: 'should display assessment questions consistently',
      scope: 'should display assessment questions consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 40,
      started_at: '2025-08-05T18:47:27.232Z',
      finished_at: '2025-08-05T18:47:27.272Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:47:35.906Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:47:38.750Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '1bd60f2b-e196-4f88-b346-86dabf6b4a6f',
    name: 'should handle responsive design for assessment flow',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    const viewports = [{\n' +
        '      width: 375,\n' +
        '      height: 667,\n' +
        "      name: 'Mobile'\n" +
        '    }, {\n' +
        '      width: 768,\n' +
        '      height: 1024,\n' +
        "      name: 'Tablet'\n" +
        '    }, {\n' +
        '      width: 1024,\n' +
        '      height: 768,\n' +
        "      name: 'Desktop'\n" +
        '    }];\n' +
        '    for (const viewport of viewports) {\n' +
        '      await page.setViewportSize({\n' +
        '        width: viewport.width,\n' +
        '        height: viewport.height\n' +
        '      });\n' +
        '      await page.waitForTimeout(500);\n' +
        '\n' +
        '      // Check that assessment content is properly contained\n' +
        `      const container = page.locator('main, .container, .assessment-container, [role="main"]').first();\n` +
        '      if ((await container.count()) > 0) {\n' +
        '        const isVisible = await container.isVisible();\n' +
        '        (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        '        // Check no horizontal overflow\n' +
        '        const overflow = await page.evaluate(() => {\n' +
        '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
        '        });\n' +
        '        (0, _test.expect)(overflow).toBe(true);\n' +
        '      }\n' +
        '\n' +
        '      // Check that form elements are still accessible\n' +
        "      const inputs = page.locator('input, textarea, select');\n" +
        '      if ((await inputs.count()) > 0) {\n' +
        '        const firstInput = inputs.first();\n' +
        '        await (0, _test.expect)(firstInput).toBeVisible();\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle responsive design for assessment flow',
    scope: 'should handle responsive design for assessment flow',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:47:38.729Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle responsive design for assessment flow'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:38.763Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'ce39857a-a0d5-493b-bc96-d6cb62b47688',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '1bd60f2b-e196-4f88-b346-86dabf6b4a6f',
    body: { lang: 'node', code: null },
    scope: 'should handle responsive design for assessment flow',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    started_at: '2025-08-05T18:47:38.751Z'
  }
} to 36431:0
2025-08-05T18:47:39.908Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '1bd60f2b-e196-4f88-b346-86dabf6b4a6f',
      name: 'should handle responsive design for assessment flow',
      body: [Object],
      identifier: 'should handle responsive design for assessment flow',
      scope: 'should handle responsive design for assessment flow',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:47:38.729Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'ce39857a-a0d5-493b-bc96-d6cb62b47688',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '1bd60f2b-e196-4f88-b346-86dabf6b4a6f',
      body: [Object],
      scope: 'should handle responsive design for assessment flow',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      started_at: '2025-08-05T18:47:38.751Z'
    }
  }
] to 36431:0
2025-08-05T18:47:39.911Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:47:40.737Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '79471043-64e7-47c9-b6e2-d34241c1bc62',
    name: 'should handle form validation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for submit buttons\n' +
        `    const submitButtons = page.locator('button[type="submit"], input[type="submit"], button:has-text("Submit"), button:has-text("Next")');\n` +
        '    if ((await submitButtons.count()) > 0) {\n' +
        '      const submitButton = submitButtons.first();\n' +
        '\n' +
        '      // Try to submit without filling required fields\n' +
        '      await submitButton.click();\n' +
        '\n' +
        '      // Wait for potential validation messages\n' +
        '      await page.waitForTimeout(1000);\n' +
        '\n' +
        '      // Check for validation messages\n' +
        `      const errorMessages = page.locator('.error, .validation-error, [role="alert"], .text-red-500, .text-red-600');\n` +
        '\n' +
        '      // If there are validation errors, they should be visible and styled consistently\n' +
        '      if ((await errorMessages.count()) > 0) {\n' +
        '        for (let i = 0; i < Math.min(await errorMessages.count(), 3); i++) {\n' +
        '          const error = errorMessages.nth(i);\n' +
        '          await (0, _test.expect)(error).toBeVisible();\n' +
        '\n' +
        '          // Check error styling\n' +
        '          const color = await error.evaluate(el => {\n' +
        '            return window.getComputedStyle(el).color;\n' +
        '          });\n' +
        '\n' +
        '          // Should have error color styling\n' +
        '          (0, _test.expect)(color).toMatch(/rgb\\(239, 68, 68\\)|rgb\\(220, 38, 38\\)|red/);\n' +
        '        }\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form validation consistently',
    scope: 'should handle form validation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:47:40.690Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form validation consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:40.751Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'f8c6f447-66ce-45ee-a7e4-e2413c31ec02',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: '79471043-64e7-47c9-b6e2-d34241c1bc62',
    body: { lang: 'node', code: null },
    scope: 'should handle form validation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    started_at: '2025-08-05T18:47:40.725Z'
  }
} to 36431:0
2025-08-05T18:47:41.906Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '79471043-64e7-47c9-b6e2-d34241c1bc62',
      name: 'should handle form validation consistently',
      body: [Object],
      identifier: 'should handle form validation consistently',
      scope: 'should handle form validation consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:47:40.690Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'f8c6f447-66ce-45ee-a7e4-e2413c31ec02',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: '79471043-64e7-47c9-b6e2-d34241c1bc62',
      body: [Object],
      scope: 'should handle form validation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      started_at: '2025-08-05T18:47:40.725Z'
    }
  }
] to 36431:0
2025-08-05T18:47:41.906Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:47:42.580Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:35.463Z',
      uuid: 'b580a17a-baf4-4e5d-9a75-5dbebef67795',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'b580a17a-baf4-4e5d-9a75-5dbebef67795'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:35.486Z',
      uuid: 'b580a17a-baf4-4e5d-9a75-5dbebef67795',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'b580a17a-baf4-4e5d-9a75-5dbebef67795'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:35.515Z',
      uuid: 'b580a17a-baf4-4e5d-9a75-5dbebef67795',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'b580a17a-baf4-4e5d-9a75-5dbebef67795'
    }
  ]
} to 36431:0
2025-08-05T18:47:42.602Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'b580a17a-baf4-4e5d-9a75-5dbebef67795',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '7eac935b-436e-4909-a0b6-f17739a31b4c',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent button styling and behavior',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
    started_at: '2025-08-05T18:47:35.459Z',
    finished_at: '2025-08-05T18:47:42.556Z'
  }
} to 36431:0
2025-08-05T18:47:42.652Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '7eac935b-436e-4909-a0b6-f17739a31b4c',
    name: 'should maintain consistent button styling and behavior',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        `    const buttons = page.locator('button, [role="button"], input[type="submit"]');\n` +
        '    for (let i = 0; i < Math.min(await buttons.count(), 3); i++) {\n' +
        '      const button = buttons.nth(i);\n' +
        '\n' +
        '      // Check button styling\n' +
        '      const styles = await button.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          backgroundColor: computed.backgroundColor,\n' +
        '          color: computed.color,\n' +
        '          borderRadius: computed.borderRadius,\n' +
        '          padding: computed.padding,\n' +
        '          cursor: computed.cursor\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should have proper button styling\n' +
        "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
        "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
        '\n' +
        '      // Check button text is readable\n' +
        '      const buttonText = await button.textContent();\n' +
        '      if (buttonText && buttonText.trim()) {\n' +
        '        (0, _test.expect)(buttonText.trim().length).toBeGreaterThan(0);\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent button styling and behavior',
    scope: 'should maintain consistent button styling and behavior',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 89,
    started_at: '2025-08-05T18:47:35.452Z',
    finished_at: '2025-08-05T18:47:35.541Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent button styling and behavior'
    },
    hooks: [ 'b580a17a-baf4-4e5d-9a75-5dbebef67795' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:42.653Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:42.635Z',
      uuid: '7eac935b-436e-4909-a0b6-f17739a31b4c',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '7eac935b-436e-4909-a0b6-f17739a31b4c'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:42.636Z',
      uuid: '7eac935b-436e-4909-a0b6-f17739a31b4c',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '7eac935b-436e-4909-a0b6-f17739a31b4c'
    }
  ]
} to 36431:0
2025-08-05T18:47:43.907Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'b580a17a-baf4-4e5d-9a75-5dbebef67795',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '7eac935b-436e-4909-a0b6-f17739a31b4c',
      body: [Object],
      scope: 'should maintain consistent button styling and behavior',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
      started_at: '2025-08-05T18:47:35.459Z',
      finished_at: '2025-08-05T18:47:42.556Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '7eac935b-436e-4909-a0b6-f17739a31b4c',
      name: 'should maintain consistent button styling and behavior',
      body: [Object],
      identifier: 'should maintain consistent button styling and behavior',
      scope: 'should maintain consistent button styling and behavior',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 89,
      started_at: '2025-08-05T18:47:35.452Z',
      finished_at: '2025-08-05T18:47:35.541Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:47:43.908Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:47:46.368Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'cd1ed1f3-223e-4728-9eee-05e340a4900c',
    name: 'should maintain consistent loading states',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for loading indicators\n' +
        `    const loadingIndicators = page.locator('.loading, .spinner, [aria-busy="true"], .animate-spin');\n` +
        '    if ((await loadingIndicators.count()) > 0) {\n' +
        '      for (let i = 0; i < Math.min(await loadingIndicators.count(), 3); i++) {\n' +
        '        const loader = loadingIndicators.nth(i);\n' +
        '\n' +
        '        // Check loading indicator is visible\n' +
        '        await (0, _test.expect)(loader).toBeVisible();\n' +
        '\n' +
        '        // Check it has proper styling\n' +
        '        const styles = await loader.evaluate(el => {\n' +
        '          const computed = window.getComputedStyle(el);\n' +
        '          return {\n' +
        '            display: computed.display,\n' +
        '            visibility: computed.visibility\n' +
        '          };\n' +
        '        });\n' +
        "        (0, _test.expect)(styles.display).not.toBe('none');\n" +
        "        (0, _test.expect)(styles.visibility).not.toBe('hidden');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent loading states',
    scope: 'should maintain consistent loading states',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:47:46.359Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent loading states'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:46.373Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '5981286c-7cde-455b-bac6-fe53c14089b1',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'cd1ed1f3-223e-4728-9eee-05e340a4900c',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent loading states',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    started_at: '2025-08-05T18:47:46.369Z'
  }
} to 36431:0
2025-08-05T18:47:47.909Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'cd1ed1f3-223e-4728-9eee-05e340a4900c',
      name: 'should maintain consistent loading states',
      body: [Object],
      identifier: 'should maintain consistent loading states',
      scope: 'should maintain consistent loading states',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:47:46.359Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '5981286c-7cde-455b-bac6-fe53c14089b1',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'cd1ed1f3-223e-4728-9eee-05e340a4900c',
      body: [Object],
      scope: 'should maintain consistent loading states',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      started_at: '2025-08-05T18:47:46.369Z'
    }
  }
] to 36431:0
2025-08-05T18:47:47.910Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:47:53.077Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:40.735Z',
      uuid: 'f8c6f447-66ce-45ee-a7e4-e2413c31ec02',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'f8c6f447-66ce-45ee-a7e4-e2413c31ec02'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:40.794Z',
      uuid: 'f8c6f447-66ce-45ee-a7e4-e2413c31ec02',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'f8c6f447-66ce-45ee-a7e4-e2413c31ec02'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:40.839Z',
      uuid: 'f8c6f447-66ce-45ee-a7e4-e2413c31ec02',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'f8c6f447-66ce-45ee-a7e4-e2413c31ec02'
    }
  ]
} to 36431:0
2025-08-05T18:47:53.080Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'f8c6f447-66ce-45ee-a7e4-e2413c31ec02',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '79471043-64e7-47c9-b6e2-d34241c1bc62',
    body: { lang: 'node', code: null },
    scope: 'should handle form validation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
    started_at: '2025-08-05T18:47:40.725Z',
    finished_at: '2025-08-05T18:47:53.074Z'
  }
} to 36431:0
2025-08-05T18:47:53.102Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '79471043-64e7-47c9-b6e2-d34241c1bc62',
    name: 'should handle form validation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for submit buttons\n' +
        `    const submitButtons = page.locator('button[type="submit"], input[type="submit"], button:has-text("Submit"), button:has-text("Next")');\n` +
        '    if ((await submitButtons.count()) > 0) {\n' +
        '      const submitButton = submitButtons.first();\n' +
        '\n' +
        '      // Try to submit without filling required fields\n' +
        '      await submitButton.click();\n' +
        '\n' +
        '      // Wait for potential validation messages\n' +
        '      await page.waitForTimeout(1000);\n' +
        '\n' +
        '      // Check for validation messages\n' +
        `      const errorMessages = page.locator('.error, .validation-error, [role="alert"], .text-red-500, .text-red-600');\n` +
        '\n' +
        '      // If there are validation errors, they should be visible and styled consistently\n' +
        '      if ((await errorMessages.count()) > 0) {\n' +
        '        for (let i = 0; i < Math.min(await errorMessages.count(), 3); i++) {\n' +
        '          const error = errorMessages.nth(i);\n' +
        '          await (0, _test.expect)(error).toBeVisible();\n' +
        '\n' +
        '          // Check error styling\n' +
        '          const color = await error.evaluate(el => {\n' +
        '            return window.getComputedStyle(el).color;\n' +
        '          });\n' +
        '\n' +
        '          // Should have error color styling\n' +
        '          (0, _test.expect)(color).toMatch(/rgb\\(239, 68, 68\\)|rgb\\(220, 38, 38\\)|red/);\n' +
        '        }\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle form validation consistently',
    scope: 'should handle form validation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 74,
    started_at: '2025-08-05T18:47:40.690Z',
    finished_at: '2025-08-05T18:47:40.764Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form validation consistently'
    },
    hooks: [ 'f8c6f447-66ce-45ee-a7e4-e2413c31ec02' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:53.102Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:53.090Z',
      uuid: '79471043-64e7-47c9-b6e2-d34241c1bc62',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '79471043-64e7-47c9-b6e2-d34241c1bc62'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:53.091Z',
      uuid: '79471043-64e7-47c9-b6e2-d34241c1bc62',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '79471043-64e7-47c9-b6e2-d34241c1bc62'
    }
  ]
} to 36431:0
2025-08-05T18:47:53.659Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:46.374Z',
      uuid: '5981286c-7cde-455b-bac6-fe53c14089b1',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '5981286c-7cde-455b-bac6-fe53c14089b1'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:46.394Z',
      uuid: '5981286c-7cde-455b-bac6-fe53c14089b1',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '5981286c-7cde-455b-bac6-fe53c14089b1'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:46.420Z',
      uuid: '5981286c-7cde-455b-bac6-fe53c14089b1',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '5981286c-7cde-455b-bac6-fe53c14089b1'
    }
  ]
} to 36431:0
2025-08-05T18:47:53.665Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '5981286c-7cde-455b-bac6-fe53c14089b1',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'cd1ed1f3-223e-4728-9eee-05e340a4900c',
    body: { lang: 'node', code: null },
    scope: 'should maintain consistent loading states',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
    started_at: '2025-08-05T18:47:46.369Z',
    finished_at: '2025-08-05T18:47:53.653Z'
  }
} to 36431:0
2025-08-05T18:47:53.727Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'cd1ed1f3-223e-4728-9eee-05e340a4900c',
    name: 'should maintain consistent loading states',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Look for loading indicators\n' +
        `    const loadingIndicators = page.locator('.loading, .spinner, [aria-busy="true"], .animate-spin');\n` +
        '    if ((await loadingIndicators.count()) > 0) {\n' +
        '      for (let i = 0; i < Math.min(await loadingIndicators.count(), 3); i++) {\n' +
        '        const loader = loadingIndicators.nth(i);\n' +
        '\n' +
        '        // Check loading indicator is visible\n' +
        '        await (0, _test.expect)(loader).toBeVisible();\n' +
        '\n' +
        '        // Check it has proper styling\n' +
        '        const styles = await loader.evaluate(el => {\n' +
        '          const computed = window.getComputedStyle(el);\n' +
        '          return {\n' +
        '            display: computed.display,\n' +
        '            visibility: computed.visibility\n' +
        '          };\n' +
        '        });\n' +
        "        (0, _test.expect)(styles.display).not.toBe('none');\n" +
        "        (0, _test.expect)(styles.visibility).not.toBe('hidden');\n" +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should maintain consistent loading states',
    scope: 'should maintain consistent loading states',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 38,
    started_at: '2025-08-05T18:47:46.359Z',
    finished_at: '2025-08-05T18:47:46.397Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent loading states'
    },
    hooks: [ '5981286c-7cde-455b-bac6-fe53c14089b1' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:53.728Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:53.674Z',
      uuid: 'cd1ed1f3-223e-4728-9eee-05e340a4900c',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'cd1ed1f3-223e-4728-9eee-05e340a4900c'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:47:53.675Z',
      uuid: 'cd1ed1f3-223e-4728-9eee-05e340a4900c',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'cd1ed1f3-223e-4728-9eee-05e340a4900c'
    }
  ]
} to 36431:0
2025-08-05T18:47:54.006Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'f8c6f447-66ce-45ee-a7e4-e2413c31ec02',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '79471043-64e7-47c9-b6e2-d34241c1bc62',
      body: [Object],
      scope: 'should handle form validation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
      started_at: '2025-08-05T18:47:40.725Z',
      finished_at: '2025-08-05T18:47:53.074Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '79471043-64e7-47c9-b6e2-d34241c1bc62',
      name: 'should handle form validation consistently',
      body: [Object],
      identifier: 'should handle form validation consistently',
      scope: 'should handle form validation consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 74,
      started_at: '2025-08-05T18:47:40.690Z',
      finished_at: '2025-08-05T18:47:40.764Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '5981286c-7cde-455b-bac6-fe53c14089b1',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'cd1ed1f3-223e-4728-9eee-05e340a4900c',
      body: [Object],
      scope: 'should maintain consistent loading states',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
      started_at: '2025-08-05T18:47:46.369Z',
      finished_at: '2025-08-05T18:47:53.653Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'cd1ed1f3-223e-4728-9eee-05e340a4900c',
      name: 'should maintain consistent loading states',
      body: [Object],
      identifier: 'should maintain consistent loading states',
      scope: 'should maintain consistent loading states',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 38,
      started_at: '2025-08-05T18:47:46.359Z',
      finished_at: '2025-08-05T18:47:46.397Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:47:54.011Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:47:57.549Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'ce0cb8c6-bd4b-490c-abe8-ceac2c66e5f1',
    name: 'should handle navigation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test navigation buttons/links\n' +
        `    const navButtons = page.locator('a, button, [role="link"]').filter({\n` +
        '      hasText: /back|next|previous|continue/i\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await navButtons.count(), 3); i++) {\n' +
        '      const navButton = navButtons.nth(i);\n' +
        '\n' +
        '      // Check navigation element is visible and clickable\n' +
        '      await (0, _test.expect)(navButton).toBeVisible();\n' +
        '      const styles = await navButton.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          cursor: computed.cursor,\n' +
        '          pointerEvents: computed.pointerEvents\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should be clickable\n' +
        "      (0, _test.expect)(['pointer', 'default']).toContain(styles.cursor);\n" +
        "      (0, _test.expect)(styles.pointerEvents).not.toBe('none');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle navigation consistently',
    scope: 'should handle navigation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:47:57.524Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle navigation consistently'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:47:57.558Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunStarted',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '63095210-a246-4fc2-a606-77a70e2ac6cd',
    name: 'beforeEach hook',
    result: 'pending',
    test_run_id: 'ce0cb8c6-bd4b-490c-abe8-ceac2c66e5f1',
    body: { lang: 'node', code: null },
    scope: 'should handle navigation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    started_at: '2025-08-05T18:47:57.546Z'
  }
} to 36431:0
2025-08-05T18:47:58.016Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'ce0cb8c6-bd4b-490c-abe8-ceac2c66e5f1',
      name: 'should handle navigation consistently',
      body: [Object],
      identifier: 'should handle navigation consistently',
      scope: 'should handle navigation consistently',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:47:57.524Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'HookRunStarted',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '63095210-a246-4fc2-a606-77a70e2ac6cd',
      name: 'beforeEach hook',
      result: 'pending',
      test_run_id: 'ce0cb8c6-bd4b-490c-abe8-ceac2c66e5f1',
      body: [Object],
      scope: 'should handle navigation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      started_at: '2025-08-05T18:47:57.546Z'
    }
  }
] to 36431:0
2025-08-05T18:47:58.017Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:47:58.287Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'e803daba-a25b-4c8b-b9b4-3cfef9c1f17e',
    name: 'should connect to BrowserStack and load the homepage',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to the homepage\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-connection-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load the homepage',
    scope: 'should connect to BrowserStack and load the homepage',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:47:58.264Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should connect to BrowserStack and load the homepage'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:48:00.016Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'e803daba-a25b-4c8b-b9b4-3cfef9c1f17e',
      name: 'should connect to BrowserStack and load the homepage',
      body: [Object],
      identifier: 'should connect to BrowserStack and load the homepage',
      scope: 'should connect to BrowserStack and load the homepage',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:47:58.264Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 36431:0
2025-08-05T18:48:00.017Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:48:05.568Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'e803daba-a25b-4c8b-b9b4-3cfef9c1f17e',
    name: 'should connect to BrowserStack and load the homepage',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to the homepage\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-connection-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load the homepage',
    scope: 'should connect to BrowserStack and load the homepage',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'failed',
    duration_in_ms: 68,
    started_at: '2025-08-05T18:47:58.264Z',
    finished_at: '2025-08-05T18:47:58.332Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should connect to BrowserStack and load the homepage'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:48:05.569Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:05.538Z',
      uuid: 'e803daba-a25b-4c8b-b9b4-3cfef9c1f17e',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'e803daba-a25b-4c8b-b9b4-3cfef9c1f17e'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:05.538Z',
      uuid: 'e803daba-a25b-4c8b-b9b4-3cfef9c1f17e',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'e803daba-a25b-4c8b-b9b4-3cfef9c1f17e'
    }
  ]
} to 36431:0
2025-08-05T18:48:05.923Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:38.757Z',
      uuid: 'ce39857a-a0d5-493b-bc96-d6cb62b47688',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'ce39857a-a0d5-493b-bc96-d6cb62b47688'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:38.792Z',
      uuid: 'ce39857a-a0d5-493b-bc96-d6cb62b47688',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'ce39857a-a0d5-493b-bc96-d6cb62b47688'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:38.832Z',
      uuid: 'ce39857a-a0d5-493b-bc96-d6cb62b47688',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: 'ce39857a-a0d5-493b-bc96-d6cb62b47688'
    }
  ]
} to 36431:0
2025-08-05T18:48:05.932Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: 'ce39857a-a0d5-493b-bc96-d6cb62b47688',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: '1bd60f2b-e196-4f88-b346-86dabf6b4a6f',
    body: { lang: 'node', code: null },
    scope: 'should handle responsive design for assessment flow',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
    started_at: '2025-08-05T18:47:38.751Z',
    finished_at: '2025-08-05T18:48:05.918Z'
  }
} to 36431:0
2025-08-05T18:48:05.971Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '1bd60f2b-e196-4f88-b346-86dabf6b4a6f',
    name: 'should handle responsive design for assessment flow',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    const viewports = [{\n' +
        '      width: 375,\n' +
        '      height: 667,\n' +
        "      name: 'Mobile'\n" +
        '    }, {\n' +
        '      width: 768,\n' +
        '      height: 1024,\n' +
        "      name: 'Tablet'\n" +
        '    }, {\n' +
        '      width: 1024,\n' +
        '      height: 768,\n' +
        "      name: 'Desktop'\n" +
        '    }];\n' +
        '    for (const viewport of viewports) {\n' +
        '      await page.setViewportSize({\n' +
        '        width: viewport.width,\n' +
        '        height: viewport.height\n' +
        '      });\n' +
        '      await page.waitForTimeout(500);\n' +
        '\n' +
        '      // Check that assessment content is properly contained\n' +
        `      const container = page.locator('main, .container, .assessment-container, [role="main"]').first();\n` +
        '      if ((await container.count()) > 0) {\n' +
        '        const isVisible = await container.isVisible();\n' +
        '        (0, _test.expect)(isVisible).toBe(true);\n' +
        '\n' +
        '        // Check no horizontal overflow\n' +
        '        const overflow = await page.evaluate(() => {\n' +
        '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
        '        });\n' +
        '        (0, _test.expect)(overflow).toBe(true);\n' +
        '      }\n' +
        '\n' +
        '      // Check that form elements are still accessible\n' +
        "      const inputs = page.locator('input, textarea, select');\n" +
        '      if ((await inputs.count()) > 0) {\n' +
        '        const firstInput = inputs.first();\n' +
        '        await (0, _test.expect)(firstInput).toBeVisible();\n' +
        '      }\n' +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle responsive design for assessment flow',
    scope: 'should handle responsive design for assessment flow',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 65,
    started_at: '2025-08-05T18:47:38.729Z',
    finished_at: '2025-08-05T18:47:38.794Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle responsive design for assessment flow'
    },
    hooks: [ 'ce39857a-a0d5-493b-bc96-d6cb62b47688' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:48:05.972Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:05.952Z',
      uuid: '1bd60f2b-e196-4f88-b346-86dabf6b4a6f',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '1bd60f2b-e196-4f88-b346-86dabf6b4a6f'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:05.953Z',
      uuid: '1bd60f2b-e196-4f88-b346-86dabf6b4a6f',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '1bd60f2b-e196-4f88-b346-86dabf6b4a6f'
    }
  ]
} to 36431:0
2025-08-05T18:48:06.018Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'e803daba-a25b-4c8b-b9b4-3cfef9c1f17e',
      name: 'should connect to BrowserStack and load the homepage',
      body: [Object],
      identifier: 'should connect to BrowserStack and load the homepage',
      scope: 'should connect to BrowserStack and load the homepage',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'failed',
      duration_in_ms: 68,
      started_at: '2025-08-05T18:47:58.264Z',
      finished_at: '2025-08-05T18:47:58.332Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: 'ce39857a-a0d5-493b-bc96-d6cb62b47688',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: '1bd60f2b-e196-4f88-b346-86dabf6b4a6f',
      body: [Object],
      scope: 'should handle responsive design for assessment flow',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
      started_at: '2025-08-05T18:47:38.751Z',
      finished_at: '2025-08-05T18:48:05.918Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '1bd60f2b-e196-4f88-b346-86dabf6b4a6f',
      name: 'should handle responsive design for assessment flow',
      body: [Object],
      identifier: 'should handle responsive design for assessment flow',
      scope: 'should handle responsive design for assessment flow',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 65,
      started_at: '2025-08-05T18:47:38.729Z',
      finished_at: '2025-08-05T18:47:38.794Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:48:06.019Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:48:06.204Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:57.551Z',
      uuid: '63095210-a246-4fc2-a606-77a70e2ac6cd',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '63095210-a246-4fc2-a606-77a70e2ac6cd'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:57.585Z',
      uuid: '63095210-a246-4fc2-a606-77a70e2ac6cd',
      kind: 'TEST_STEP',
      message: '__browserstack_testHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '63095210-a246-4fc2-a606-77a70e2ac6cd'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'BEFORE_EACH',
      timestamp: '2025-08-05T18:47:57.621Z',
      uuid: '63095210-a246-4fc2-a606-77a70e2ac6cd',
      kind: 'TEST_STEP',
      message: 'connect',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      hook_run_uuid: '63095210-a246-4fc2-a606-77a70e2ac6cd'
    }
  ]
} to 36431:0
2025-08-05T18:48:06.208Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'HookRunFinished',
  hook_run: {
    type: 'hook',
    hook_type: 'BEFORE_EACH',
    framework: 'Playwright',
    uuid: '63095210-a246-4fc2-a606-77a70e2ac6cd',
    name: 'beforeEach hook',
    result: 'failed',
    test_run_id: 'ce0cb8c6-bd4b-490c-abe8-ceac2c66e5f1',
    body: { lang: 'node', code: null },
    scope: 'should handle navigation consistently',
    custom_metadata: {},
    tags: [],
    scopes: [ 'Assessment Flow Tests' ],
    file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
    started_at: '2025-08-05T18:47:57.546Z',
    finished_at: '2025-08-05T18:48:06.201Z'
  }
} to 36431:0
2025-08-05T18:48:06.250Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'ce0cb8c6-bd4b-490c-abe8-ceac2c66e5f1',
    name: 'should handle navigation consistently',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    // Test navigation buttons/links\n' +
        `    const navButtons = page.locator('a, button, [role="link"]').filter({\n` +
        '      hasText: /back|next|previous|continue/i\n' +
        '    });\n' +
        '    for (let i = 0; i < Math.min(await navButtons.count(), 3); i++) {\n' +
        '      const navButton = navButtons.nth(i);\n' +
        '\n' +
        '      // Check navigation element is visible and clickable\n' +
        '      await (0, _test.expect)(navButton).toBeVisible();\n' +
        '      const styles = await navButton.evaluate(el => {\n' +
        '        const computed = window.getComputedStyle(el);\n' +
        '        return {\n' +
        '          cursor: computed.cursor,\n' +
        '          pointerEvents: computed.pointerEvents\n' +
        '        };\n' +
        '      });\n' +
        '\n' +
        '      // Should be clickable\n' +
        "      (0, _test.expect)(['pointer', 'default']).toContain(styles.cursor);\n" +
        "      (0, _test.expect)(styles.pointerEvents).not.toBe('none');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should handle navigation consistently',
    scope: 'should handle navigation consistently',
    scopes: [ 'Assessment Flow Tests' ],
    custom_metadata: {},
    file_name: 'tests/assessment-flow.spec.ts',
    vc_filepath: 'tests/assessment-flow.spec.ts',
    location: 'tests/assessment-flow.spec.ts',
    result: 'failed',
    duration_in_ms: 59,
    started_at: '2025-08-05T18:47:57.524Z',
    finished_at: '2025-08-05T18:47:57.583Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle navigation consistently'
    },
    hooks: [ '63095210-a246-4fc2-a606-77a70e2ac6cd' ],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:48:06.251Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:06.233Z',
      uuid: 'ce0cb8c6-bd4b-490c-abe8-ceac2c66e5f1',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'ce0cb8c6-bd4b-490c-abe8-ceac2c66e5f1'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:06.234Z',
      uuid: 'ce0cb8c6-bd4b-490c-abe8-ceac2c66e5f1',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'ce0cb8c6-bd4b-490c-abe8-ceac2c66e5f1'
    }
  ]
} to 36431:0
2025-08-05T18:48:08.019Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  { event_type: 'LogCreated', logs: [ [Object], [Object], [Object] ] },
  {
    event_type: 'HookRunFinished',
    hook_run: {
      type: 'hook',
      hook_type: 'BEFORE_EACH',
      framework: 'Playwright',
      uuid: '63095210-a246-4fc2-a606-77a70e2ac6cd',
      name: 'beforeEach hook',
      result: 'failed',
      test_run_id: 'ce0cb8c6-bd4b-490c-abe8-ceac2c66e5f1',
      body: [Object],
      scope: 'should handle navigation consistently',
      custom_metadata: {},
      tags: [],
      scopes: [Array],
      file_name: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      vc_filepath: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
      started_at: '2025-08-05T18:47:57.546Z',
      finished_at: '2025-08-05T18:48:06.201Z'
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'ce0cb8c6-bd4b-490c-abe8-ceac2c66e5f1',
      name: 'should handle navigation consistently',
      body: [Object],
      identifier: 'should handle navigation consistently',
      scope: 'should handle navigation consistently',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/assessment-flow.spec.ts',
      vc_filepath: 'tests/assessment-flow.spec.ts',
      location: 'tests/assessment-flow.spec.ts',
      result: 'failed',
      duration_in_ms: 59,
      started_at: '2025-08-05T18:47:57.524Z',
      finished_at: '2025-08-05T18:47:57.583Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [Array],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:48:08.020Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:48:10.217Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'cf7a10e6-c705-4969-9fed-ab4b46c80009',
    name: 'should display consistent branding colors',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for any elements with Gutcheck brand colors\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    if ((await gutcheckElements.count()) > 0) {\n' +
        '      console.log(`🎨 Found ${await gutcheckElements.count()} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display consistent branding colors',
    scope: 'should display consistent branding colors',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:48:10.205Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should display consistent branding colors'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:48:10.486Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '30648aa1-a1bc-49ed-bdc7-48e60759b3cb',
    name: 'should connect to BrowserStack and load a public website',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to a public website instead of localhost\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-public-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '    console.log(`🌐 URL: ${page.url()}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load a public website',
    scope: 'should connect to BrowserStack and load a public website',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:48:10.447Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should connect to BrowserStack and load a public website'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:48:10.488Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b1784227-b39c-4e45-b8e9-f287f0864db8',
    name: 'should verify browser capabilities',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Get browser information\n' +
        '    const userAgent = await page.evaluate(() => navigator.userAgent);\n' +
        '    const viewport = page.viewportSize();\n' +
        '    console.log(`🔍 User Agent: ${userAgent}`);\n' +
        '    console.log(`📐 Viewport: ${viewport === null || viewport === void 0 ? void 0 : viewport.width}x${viewport === null || viewport === void 0 ? void 0 : viewport.height}`);\n' +
        '\n' +
        "    // Verify we're running in a real browser environment\n" +
        "    (0, _test.expect)(userAgent).toContain('Chrome');\n" +
        '    (0, _test.expect)(viewport).toBeTruthy();\n' +
        '  }'
    },
    identifier: 'should verify browser capabilities',
    scope: 'should verify browser capabilities',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:48:10.447Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should verify browser capabilities'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:48:12.021Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'cf7a10e6-c705-4969-9fed-ab4b46c80009',
      name: 'should display consistent branding colors',
      body: [Object],
      identifier: 'should display consistent branding colors',
      scope: 'should display consistent branding colors',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:48:10.205Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '30648aa1-a1bc-49ed-bdc7-48e60759b3cb',
      name: 'should connect to BrowserStack and load a public website',
      body: [Object],
      identifier: 'should connect to BrowserStack and load a public website',
      scope: 'should connect to BrowserStack and load a public website',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:48:10.447Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b1784227-b39c-4e45-b8e9-f287f0864db8',
      name: 'should verify browser capabilities',
      body: [Object],
      identifier: 'should verify browser capabilities',
      scope: 'should verify browser capabilities',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:48:10.447Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 36431:0
2025-08-05T18:48:12.021Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:48:19.405Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'cf7a10e6-c705-4969-9fed-ab4b46c80009',
    name: 'should display consistent branding colors',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for any elements with Gutcheck brand colors\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    if ((await gutcheckElements.count()) > 0) {\n' +
        '      console.log(`🎨 Found ${await gutcheckElements.count()} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '  }'
    },
    identifier: 'should display consistent branding colors',
    scope: 'should display consistent branding colors',
    scopes: [ 'BrowserStack Connection Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-connection.spec.ts',
    vc_filepath: 'tests/browserstack-connection.spec.ts',
    location: 'tests/browserstack-connection.spec.ts',
    result: 'failed',
    duration_in_ms: 64,
    started_at: '2025-08-05T18:48:10.205Z',
    finished_at: '2025-08-05T18:48:10.269Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should display consistent branding colors'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:48:19.406Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:19.374Z',
      uuid: 'cf7a10e6-c705-4969-9fed-ab4b46c80009',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'cf7a10e6-c705-4969-9fed-ab4b46c80009'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:19.375Z',
      uuid: 'cf7a10e6-c705-4969-9fed-ab4b46c80009',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'cf7a10e6-c705-4969-9fed-ab4b46c80009'
    }
  ]
} to 36431:0
2025-08-05T18:48:19.632Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b1784227-b39c-4e45-b8e9-f287f0864db8',
    name: 'should verify browser capabilities',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Get browser information\n' +
        '    const userAgent = await page.evaluate(() => navigator.userAgent);\n' +
        '    const viewport = page.viewportSize();\n' +
        '    console.log(`🔍 User Agent: ${userAgent}`);\n' +
        '    console.log(`📐 Viewport: ${viewport === null || viewport === void 0 ? void 0 : viewport.width}x${viewport === null || viewport === void 0 ? void 0 : viewport.height}`);\n' +
        '\n' +
        "    // Verify we're running in a real browser environment\n" +
        "    (0, _test.expect)(userAgent).toContain('Chrome');\n" +
        '    (0, _test.expect)(viewport).toBeTruthy();\n' +
        '  }'
    },
    identifier: 'should verify browser capabilities',
    scope: 'should verify browser capabilities',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'failed',
    duration_in_ms: 51,
    started_at: '2025-08-05T18:48:10.447Z',
    finished_at: '2025-08-05T18:48:10.498Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should verify browser capabilities'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:48:19.633Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:19.602Z',
      uuid: 'b1784227-b39c-4e45-b8e9-f287f0864db8',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b1784227-b39c-4e45-b8e9-f287f0864db8'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:19.603Z',
      uuid: 'b1784227-b39c-4e45-b8e9-f287f0864db8',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b1784227-b39c-4e45-b8e9-f287f0864db8'
    }
  ]
} to 36431:0
2025-08-05T18:48:20.024Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'cf7a10e6-c705-4969-9fed-ab4b46c80009',
      name: 'should display consistent branding colors',
      body: [Object],
      identifier: 'should display consistent branding colors',
      scope: 'should display consistent branding colors',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-connection.spec.ts',
      vc_filepath: 'tests/browserstack-connection.spec.ts',
      location: 'tests/browserstack-connection.spec.ts',
      result: 'failed',
      duration_in_ms: 64,
      started_at: '2025-08-05T18:48:10.205Z',
      finished_at: '2025-08-05T18:48:10.269Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b1784227-b39c-4e45-b8e9-f287f0864db8',
      name: 'should verify browser capabilities',
      body: [Object],
      identifier: 'should verify browser capabilities',
      scope: 'should verify browser capabilities',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'failed',
      duration_in_ms: 51,
      started_at: '2025-08-05T18:48:10.447Z',
      finished_at: '2025-08-05T18:48:10.498Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:48:20.025Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:48:21.300Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '30648aa1-a1bc-49ed-bdc7-48e60759b3cb',
    name: 'should connect to BrowserStack and load a public website',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        '    // Navigate to a public website instead of localhost\n' +
        "    await page.goto('https://example.com');\n" +
        '\n' +
        '    // Wait for the page to load\n' +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check that the page loaded successfully\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-public-test.png'\n" +
        '    });\n' +
        '\n' +
        '    // Check that the page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        "    console.log('✅ BrowserStack connection successful!');\n" +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '    console.log(`🌐 URL: ${page.url()}`);\n' +
        '  }'
    },
    identifier: 'should connect to BrowserStack and load a public website',
    scope: 'should connect to BrowserStack and load a public website',
    scopes: [ 'BrowserStack Public URL Test' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-public.spec.ts',
    vc_filepath: 'tests/browserstack-public.spec.ts',
    location: 'tests/browserstack-public.spec.ts',
    result: 'failed',
    duration_in_ms: 61,
    started_at: '2025-08-05T18:48:10.447Z',
    finished_at: '2025-08-05T18:48:10.508Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should connect to BrowserStack and load a public website'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:48:21.301Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:21.285Z',
      uuid: '30648aa1-a1bc-49ed-bdc7-48e60759b3cb',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '30648aa1-a1bc-49ed-bdc7-48e60759b3cb'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:21.286Z',
      uuid: '30648aa1-a1bc-49ed-bdc7-48e60759b3cb',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '30648aa1-a1bc-49ed-bdc7-48e60759b3cb'
    }
  ]
} to 36431:0
2025-08-05T18:48:22.024Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '30648aa1-a1bc-49ed-bdc7-48e60759b3cb',
      name: 'should connect to BrowserStack and load a public website',
      body: [Object],
      identifier: 'should connect to BrowserStack and load a public website',
      scope: 'should connect to BrowserStack and load a public website',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-public.spec.ts',
      vc_filepath: 'tests/browserstack-public.spec.ts',
      location: 'tests/browserstack-public.spec.ts',
      result: 'failed',
      duration_in_ms: 61,
      started_at: '2025-08-05T18:48:10.447Z',
      finished_at: '2025-08-05T18:48:10.508Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:48:22.025Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:48:24.215Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b3598b6a-4624-4956-8b52-cfeab81264e0',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:48:24.170Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:48:24.218Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '33429120-3137-4ade-a233-29deaf496636',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:48:24.183Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:48:25.306Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'c8f7e621-d21a-427d-893d-1dfe46a78da3',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:48:25.297Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:48:26.026Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b3598b6a-4624-4956-8b52-cfeab81264e0',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:48:24.170Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '33429120-3137-4ade-a233-29deaf496636',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:48:24.183Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'c8f7e621-d21a-427d-893d-1dfe46a78da3',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:48:25.297Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 36431:0
2025-08-05T18:48:26.027Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:48:34.000Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'b3598b6a-4624-4956-8b52-cfeab81264e0',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 69,
    started_at: '2025-08-05T18:48:24.170Z',
    finished_at: '2025-08-05T18:48:24.239Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:48:34.001Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:33.989Z',
      uuid: 'b3598b6a-4624-4956-8b52-cfeab81264e0',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b3598b6a-4624-4956-8b52-cfeab81264e0'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:33.990Z',
      uuid: 'b3598b6a-4624-4956-8b52-cfeab81264e0',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'b3598b6a-4624-4956-8b52-cfeab81264e0'
    }
  ]
} to 36431:0
2025-08-05T18:48:34.027Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'b3598b6a-4624-4956-8b52-cfeab81264e0',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 69,
      started_at: '2025-08-05T18:48:24.170Z',
      finished_at: '2025-08-05T18:48:24.239Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:48:34.028Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:48:37.641Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'd94ea318-9159-4edc-982a-fd2a781709be',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Traditional Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-traditional.spec.ts',
    vc_filepath: 'tests/browserstack-traditional.spec.ts',
    location: 'tests/browserstack-traditional.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:48:37.631Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:48:38.029Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'd94ea318-9159-4edc-982a-fd2a781709be',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-traditional.spec.ts',
      vc_filepath: 'tests/browserstack-traditional.spec.ts',
      location: 'tests/browserstack-traditional.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:48:37.631Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 36431:0
2025-08-05T18:48:38.031Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:48:38.773Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'c8f7e621-d21a-427d-893d-1dfe46a78da3',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 41,
    started_at: '2025-08-05T18:48:25.297Z',
    finished_at: '2025-08-05T18:48:25.338Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:48:38.774Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:38.752Z',
      uuid: 'c8f7e621-d21a-427d-893d-1dfe46a78da3',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'c8f7e621-d21a-427d-893d-1dfe46a78da3'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:38.754Z',
      uuid: 'c8f7e621-d21a-427d-893d-1dfe46a78da3',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'c8f7e621-d21a-427d-893d-1dfe46a78da3'
    }
  ]
} to 36431:0
2025-08-05T18:48:40.030Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'c8f7e621-d21a-427d-893d-1dfe46a78da3',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 41,
      started_at: '2025-08-05T18:48:25.297Z',
      finished_at: '2025-08-05T18:48:25.338Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:48:40.031Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:48:42.389Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '33429120-3137-4ade-a233-29deaf496636',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Simple Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-simple.spec.ts',
    vc_filepath: 'tests/browserstack-simple.spec.ts',
    location: 'tests/browserstack-simple.spec.ts',
    result: 'failed',
    duration_in_ms: 54,
    started_at: '2025-08-05T18:48:24.183Z',
    finished_at: '2025-08-05T18:48:24.237Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:48:42.390Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:42.373Z',
      uuid: '33429120-3137-4ade-a233-29deaf496636',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '33429120-3137-4ade-a233-29deaf496636'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:42.374Z',
      uuid: '33429120-3137-4ade-a233-29deaf496636',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '33429120-3137-4ade-a233-29deaf496636'
    }
  ]
} to 36431:0
2025-08-05T18:48:43.234Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'c47b9f2d-ebdd-49b6-a076-9ed81b50f116',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Traditional Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-traditional.spec.ts',
    vc_filepath: 'tests/browserstack-traditional.spec.ts',
    location: 'tests/browserstack-traditional.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:48:43.222Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:48:44.030Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '33429120-3137-4ade-a233-29deaf496636',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-simple.spec.ts',
      vc_filepath: 'tests/browserstack-simple.spec.ts',
      location: 'tests/browserstack-simple.spec.ts',
      result: 'failed',
      duration_in_ms: 54,
      started_at: '2025-08-05T18:48:24.183Z',
      finished_at: '2025-08-05T18:48:24.237Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'c47b9f2d-ebdd-49b6-a076-9ed81b50f116',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-traditional.spec.ts',
      vc_filepath: 'tests/browserstack-traditional.spec.ts',
      location: 'tests/browserstack-traditional.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:48:43.222Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  }
] to 36431:0
2025-08-05T18:48:44.031Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:48:45.157Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'd94ea318-9159-4edc-982a-fd2a781709be',
    name: 'should load homepage successfully',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        '    var _page$viewportSize, _page$viewportSize2;\n' +
        "    await page.goto('/');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Basic page load verification\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Check if page has content\n' +
        "    const bodyText = await page.textContent('body');\n" +
        '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
        '\n' +
        '    // Take a screenshot for visual verification\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-homepage.png'\n" +
        '    });\n' +
        '    console.log(`✅ Homepage loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
        '  }'
    },
    identifier: 'should load homepage successfully',
    scope: 'should load homepage successfully',
    scopes: [ 'BrowserStack Traditional Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-traditional.spec.ts',
    vc_filepath: 'tests/browserstack-traditional.spec.ts',
    location: 'tests/browserstack-traditional.spec.ts',
    result: 'failed',
    duration_in_ms: 43,
    started_at: '2025-08-05T18:48:37.631Z',
    finished_at: '2025-08-05T18:48:37.674Z',
    failure: [ [Object] ],
    failure_type: 'UnhandledError',
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should load homepage successfully'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:48:45.158Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:45.140Z',
      uuid: 'd94ea318-9159-4edc-982a-fd2a781709be',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'd94ea318-9159-4edc-982a-fd2a781709be'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:45.141Z',
      uuid: 'd94ea318-9159-4edc-982a-fd2a781709be',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'd94ea318-9159-4edc-982a-fd2a781709be'
    }
  ]
} to 36431:0
2025-08-05T18:48:46.030Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'd94ea318-9159-4edc-982a-fd2a781709be',
      name: 'should load homepage successfully',
      body: [Object],
      identifier: 'should load homepage successfully',
      scope: 'should load homepage successfully',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-traditional.spec.ts',
      vc_filepath: 'tests/browserstack-traditional.spec.ts',
      location: 'tests/browserstack-traditional.spec.ts',
      result: 'failed',
      duration_in_ms: 43,
      started_at: '2025-08-05T18:48:37.631Z',
      finished_at: '2025-08-05T18:48:37.674Z',
      failure: [Array],
      failure_type: 'UnhandledError',
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] }
] to 36431:0
2025-08-05T18:48:46.031Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:48:46.587Z CLI info [main]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Received graceful signal termination, performing cleanup
2025-08-05T18:48:46.683Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: 'c47b9f2d-ebdd-49b6-a076-9ed81b50f116',
    name: 'should navigate to assessment page',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/assessment');\n" +
        "    await page.waitForLoadState('networkidle');\n" +
        '\n' +
        '    // Check if assessment page loads\n' +
        '    const title = await page.title();\n' +
        '    (0, _test.expect)(title).toBeTruthy();\n' +
        '\n' +
        '    // Look for assessment-specific content\n' +
        "    const assessmentContent = await page.textContent('body');\n" +
        '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-assessment.png'\n" +
        '    });\n' +
        '    console.log(`✅ Assessment page loaded successfully`);\n' +
        '    console.log(`📄 Page title: ${title}`);\n' +
        '  }'
    },
    identifier: 'should navigate to assessment page',
    scope: 'should navigate to assessment page',
    scopes: [ 'BrowserStack Traditional Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-traditional.spec.ts',
    vc_filepath: 'tests/browserstack-traditional.spec.ts',
    location: 'tests/browserstack-traditional.spec.ts',
    result: 'interrupted',
    duration_in_ms: 64,
    started_at: '2025-08-05T18:48:43.222Z',
    finished_at: '2025-08-05T18:48:43.286Z',
    failure: null,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should navigate to assessment page'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:48:46.684Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:46.620Z',
      uuid: 'c47b9f2d-ebdd-49b6-a076-9ed81b50f116',
      kind: 'TEST_STEP',
      message: 'browser',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'c47b9f2d-ebdd-49b6-a076-9ed81b50f116'
    },
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:46.621Z',
      uuid: 'c47b9f2d-ebdd-49b6-a076-9ed81b50f116',
      kind: 'TEST_STEP',
      message: '__browserstack_workerHook',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: 'c47b9f2d-ebdd-49b6-a076-9ed81b50f116'
    }
  ]
} to 36431:0
2025-08-05T18:48:47.401Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunStarted',
  logs: undefined,
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '82fa4662-6775-4734-a2e5-41168c3cff15',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Traditional Tests' ],
    custom_metadata: undefined,
    file_name: 'tests/browserstack-traditional.spec.ts',
    vc_filepath: 'tests/browserstack-traditional.spec.ts',
    location: 'tests/browserstack-traditional.spec.ts',
    result: 'pending',
    duration_in_ms: null,
    started_at: '2025-08-05T18:48:47.376Z',
    failure: undefined,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:48:47.402Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'TestRunFinished',
  logs: [],
  test_run: {
    type: 'test',
    framework: 'Playwright',
    uuid: '82fa4662-6775-4734-a2e5-41168c3cff15',
    name: 'should display consistent branding',
    body: {
      lang: 'javascript',
      code: 'async ({\n' +
        '    page\n' +
        '  }) => {\n' +
        "    await page.goto('/');\n" +
        '\n' +
        '    // Check for Gutcheck branding elements\n' +
        `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
        '    const elementCount = await gutcheckElements.count();\n' +
        '    if (elementCount > 0) {\n' +
        '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
        '\n' +
        '      // Check the first branded element\n' +
        '      const firstElement = gutcheckElements.first();\n' +
        '      const backgroundColor = await firstElement.evaluate(el => {\n' +
        '        return window.getComputedStyle(el).backgroundColor;\n' +
        '      });\n' +
        '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
        '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
        '    } else {\n' +
        "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
        '    }\n' +
        '    await page.screenshot({\n' +
        "      path: 'browserstack-branding.png'\n" +
        '    });\n' +
        '  }'
    },
    identifier: 'should display consistent branding',
    scope: 'should display consistent branding',
    scopes: [ 'BrowserStack Traditional Tests' ],
    custom_metadata: {},
    file_name: 'tests/browserstack-traditional.spec.ts',
    vc_filepath: 'tests/browserstack-traditional.spec.ts',
    location: 'tests/browserstack-traditional.spec.ts',
    result: 'skipped',
    duration_in_ms: null,
    started_at: '2025-08-05T18:48:47.376Z',
    finished_at: '2025-08-05T18:48:47.376Z',
    failure: null,
    failure_type: undefined,
    failure_reason: null,
    retry_of: null,
    tags: [],
    customRerunParam: {
      rerun_name: ' -latest:Windows 11-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should display consistent branding'
    },
    hooks: [],
    product_map: {
      observability: true,
      accessibility: false,
      percy: false,
      automate: true,
      app_automate: false
    }
  }
} to 36431:0
2025-08-05T18:48:47.403Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Added the event {
  event_type: 'LogCreated',
  logs: [
    {
      testFrameworkName: 'Playwright',
      testFrameworkVersion: '1.54.2',
      testFrameworkState: 'TEST',
      timestamp: '2025-08-05T18:48:47.383Z',
      uuid: '82fa4662-6775-4734-a2e5-41168c3cff15',
      kind: 'TEST_STEP',
      message: 'Worker Cleanup',
      level: 'passed',
      fileName: '',
      fileSize: [Long],
      filePath: '',
      attachmentType: '',
      test_run_uuid: '82fa4662-6775-4734-a2e5-41168c3cff15'
    }
  ]
} to 36431:0
2025-08-05T18:48:47.753Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:48:47.778Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:48:47.848Z CLI error [testhub:module]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [collectBuildData] Exception in collecting build data for build UUID edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j: {"message":"Build data collection started"}
2025-08-05T18:48:47.854Z CLI error [testhub:module]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [collectBuildData] Exception in collecting build data for build UUID edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j: {"message":"Build data collection started"}
2025-08-05T18:48:48.030Z CLI info [testhub:request-queue-handler]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Processing batch event [
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: 'c47b9f2d-ebdd-49b6-a076-9ed81b50f116',
      name: 'should navigate to assessment page',
      body: [Object],
      identifier: 'should navigate to assessment page',
      scope: 'should navigate to assessment page',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-traditional.spec.ts',
      vc_filepath: 'tests/browserstack-traditional.spec.ts',
      location: 'tests/browserstack-traditional.spec.ts',
      result: 'interrupted',
      duration_in_ms: 64,
      started_at: '2025-08-05T18:48:43.222Z',
      finished_at: '2025-08-05T18:48:43.286Z',
      failure: null,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object], [Object] ] },
  {
    event_type: 'TestRunStarted',
    logs: undefined,
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '82fa4662-6775-4734-a2e5-41168c3cff15',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: undefined,
      file_name: 'tests/browserstack-traditional.spec.ts',
      vc_filepath: 'tests/browserstack-traditional.spec.ts',
      location: 'tests/browserstack-traditional.spec.ts',
      result: 'pending',
      duration_in_ms: null,
      started_at: '2025-08-05T18:48:47.376Z',
      failure: undefined,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  {
    event_type: 'TestRunFinished',
    logs: [],
    test_run: {
      type: 'test',
      framework: 'Playwright',
      uuid: '82fa4662-6775-4734-a2e5-41168c3cff15',
      name: 'should display consistent branding',
      body: [Object],
      identifier: 'should display consistent branding',
      scope: 'should display consistent branding',
      scopes: [Array],
      custom_metadata: {},
      file_name: 'tests/browserstack-traditional.spec.ts',
      vc_filepath: 'tests/browserstack-traditional.spec.ts',
      location: 'tests/browserstack-traditional.spec.ts',
      result: 'skipped',
      duration_in_ms: null,
      started_at: '2025-08-05T18:48:47.376Z',
      finished_at: '2025-08-05T18:48:47.376Z',
      failure: null,
      failure_type: undefined,
      failure_reason: null,
      retry_of: null,
      tags: [],
      customRerunParam: [Object],
      hooks: [],
      product_map: [Object]
    }
  },
  { event_type: 'LogCreated', logs: [ [Object] ] }
] to 36431:0
2025-08-05T18:48:48.031Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://collector-observability.browserstack.com
2025-08-05T18:48:48.157Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making PUT request to https://collector-observability.browserstack.com
2025-08-05T18:48:48.195Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making PUT request to https://collector-observability.browserstack.com
2025-08-05T18:48:48.329Z CLI info [testhub:module]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  stopBuild: edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j request={"finished_at":"2025-08-05T18:48:46.688Z","finished_metadata":[],"custom_metadata":{}} response={"data":""}
2025-08-05T18:48:48.344Z CLI info  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  [PRODUCTION] Making POST request to https://api.browserstack.com
2025-08-05T18:48:48.367Z CLI info [observability:module]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  Visit https://observability.browserstack.com/builds/edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j to view build report, insights, and many more debugging information all at one place!
2025-08-05T18:48:48.455Z CLI info [testhub:module]  [coreylipsey_CicmlG]  [edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j]  [e4d07e95-5dda-4e81-9882-c8fe1514f00a]  stopBuild: edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j request={"finished_at":"2025-08-05T18:48:46.601Z","finished_metadata":[],"custom_metadata":null} response={"data":""}
