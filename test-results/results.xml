<testsuites id="" name="" tests="78" failures="67" skipped="11" errors="0" time="310.39836199999996">
<testsuite name="assessment-flow.spec.ts" timestamp="2025-08-05T18:43:37.374Z" hostname="-latest:Windows 11-browserstack" tests="7" failures="7" skipped="0" time="0.469" errors="0">
<testcase name="Assessment Flow Tests › should display assessment questions consistently" classname="assessment-flow.spec.ts" time="0.073">
<failure message="assessment-flow.spec.ts:9:7 should display assessment questions consistently" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › assessment-flow.spec.ts:9:7 › Assessment Flow Tests › should display assessment questions consistently 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:43:41 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:43:41 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:43:41 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36496:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:43:41 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=389add930f058dd159dfc76a53931d3ab4b29d196101e980a86959aace54edbb target=36496:0
2025-08-05 14:43:41 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:43:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:43:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:43:54 - [32minfo[39m: [PlaywrightDriverModule] testId: 2657358a77c132dcc4e7-2d7d29c4fc2f2208651b
2025-08-05 14:43:54 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '1f0dae87-652c-4acd-8b54-719d4f1cabbf',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '1f0dae87-652c-4acd-8b54-719d4f1cabbf',
  test_result: 'pending',
  automate_session_name: 'Assessment Flow Tests - should display assessment questions consistently',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts',
  test_id: '2657358a77c132dcc4e7-2d7d29c4fc2f2208651b',
  test_name: 'should display assessment questions consistently',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Wait for assessment content to load\n' +
    `    await page.waitForSelector('[data-testid="assessment-question"], .question, h1, h2', {\n` +
    '      timeout: 10000\n' +
    '    });\n' +
    '\n' +
    '    // Check that questions are visible and properly styled\n' +
    `    const questions = page.locator('[data-testid="assessment-question"], .question, h1, h2').filter({\n` +
    '      hasText: /./\n' +
    '    });\n' +
    '    (0, _test.expect)(await questions.count()).toBeGreaterThan(0);\n' +
    '    for (let i = 0; i < Math.min(await questions.count(), 3); i++) {\n' +
    '      const question = questions.nth(i);\n' +
    '\n' +
    '      // Check visibility\n' +
    '      await (0, _test.expect)(question).toBeVisible();\n' +
    '\n' +
    '      // Check styling\n' +
    '      const styles = await question.evaluate(el => {\n' +
    '        const computed = window.getComputedStyle(el);\n' +
    '        return {\n' +
    '          fontSize: computed.fontSize,\n' +
    '          fontWeight: computed.fontWeight,\n' +
    '          color: computed.color,\n' +
    '          lineHeight: computed.lineHeight\n' +
    '        };\n' +
    '      });\n' +
    '\n' +
    '      // Should have readable text styling\n' +
    '      (0, _test.expect)(parseFloat(styles.fontSize)).toBeGreaterThan(12);\n' +
    "      (0, _test.expect)(styles.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:43:41.381Z',
  test_scope: 'Assessment Flow Tests - should display assessment questions consistently',
  test_scopes: [ 'Assessment Flow Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should display assessment questions consistently'
}
2025-08-05 14:43:54 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Assessment Flow Tests › should handle form inputs consistently across browsers" classname="assessment-flow.spec.ts" time="0.06">
<failure message="assessment-flow.spec.ts:41:7 should handle form inputs consistently across browsers" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › assessment-flow.spec.ts:41:7 › Assessment Flow Tests › should handle form inputs consistently across browsers 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:43:41 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:43:41 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:43:41 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36497:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:43:41 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=50c51ee7aedaa5f1148ec0053e12bcf5ef4c4044a385ddd96c70bb0b4ed16a12 target=36497:0
2025-08-05 14:43:41 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:43:51 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:43:51 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:43:51 - [32minfo[39m: [PlaywrightDriverModule] testId: 2657358a77c132dcc4e7-3c6f99289f591e12dd87
2025-08-05 14:43:51 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '01dfbb45-ddb5-4f49-81ab-cf14f1f2a0a0',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '01dfbb45-ddb5-4f49-81ab-cf14f1f2a0a0',
  test_result: 'pending',
  automate_session_name: 'Assessment Flow Tests - should handle form inputs consistently across browsers',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts',
  test_id: '2657358a77c132dcc4e7-3c6f99289f591e12dd87',
  test_name: 'should handle form inputs consistently across browsers',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Look for form inputs (radio buttons, checkboxes, text inputs)\n' +
    "    const inputs = page.locator('input, textarea, select');\n" +
    '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
    '      const input = inputs.nth(i);\n' +
    '\n' +
    '      // Check input is visible and interactive\n' +
    '      await (0, _test.expect)(input).toBeVisible();\n' +
    "      const inputType = await input.getAttribute('type');\n" +
    "      if (inputType === 'radio' || inputType === 'checkbox') {\n" +
    '        // Test radio/checkbox functionality\n' +
    '        await input.click();\n' +
    '\n' +
    '        // Verify selection state\n' +
    '        const isChecked = await input.isChecked();\n' +
    '        (0, _test.expect)(isChecked).toBe(true);\n' +
    "      } else if (inputType === 'text' || inputType === 'textarea') {\n" +
    '        // Test text input functionality\n' +
    "        await input.fill('Test input');\n" +
    '        const value = await input.inputValue();\n' +
    "        (0, _test.expect)(value).toBe('Test input');\n" +
    '      }\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:43:41.354Z',
  test_scope: 'Assessment Flow Tests - should handle form inputs consistently across browsers',
  test_scopes: [ 'Assessment Flow Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form inputs consistently across browsers'
}
2025-08-05 14:43:51 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Assessment Flow Tests › should maintain consistent button styling and behavior" classname="assessment-flow.spec.ts" time="0.143">
<failure message="assessment-flow.spec.ts:69:7 should maintain consistent button styling and behavior" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › assessment-flow.spec.ts:69:7 › Assessment Flow Tests › should maintain consistent button styling and behavior 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:43:41 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:43:41 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:43:41 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36498:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:43:41 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=e261e9ecb5ca1c9a84d7ed2f59ca34e7d7376ec6edf0cc71bead8ffcdeb3a59b target=36498:0
2025-08-05 14:43:41 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:43:51 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:43:51 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:43:51 - [32minfo[39m: [PlaywrightDriverModule] testId: 2657358a77c132dcc4e7-bb0dd5e9746454eab93a
2025-08-05 14:43:51 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '44fdf9c7-6576-4e6f-90a0-2f6c046e2678',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '44fdf9c7-6576-4e6f-90a0-2f6c046e2678',
  test_result: 'pending',
  automate_session_name: 'Assessment Flow Tests - should maintain consistent button styling and behavior',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts',
  test_id: '2657358a77c132dcc4e7-bb0dd5e9746454eab93a',
  test_name: 'should maintain consistent button styling and behavior',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    `    const buttons = page.locator('button, [role="button"], input[type="submit"]');\n` +
    '    for (let i = 0; i < Math.min(await buttons.count(), 3); i++) {\n' +
    '      const button = buttons.nth(i);\n' +
    '\n' +
    '      // Check button styling\n' +
    '      const styles = await button.evaluate(el => {\n' +
    '        const computed = window.getComputedStyle(el);\n' +
    '        return {\n' +
    '          backgroundColor: computed.backgroundColor,\n' +
    '          color: computed.color,\n' +
    '          borderRadius: computed.borderRadius,\n' +
    '          padding: computed.padding,\n' +
    '          cursor: computed.cursor\n' +
    '        };\n' +
    '      });\n' +
    '\n' +
    '      // Should have proper button styling\n' +
    "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
    "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
    '\n' +
    '      // Check button text is readable\n' +
    '      const buttonText = await button.textContent();\n' +
    '      if (buttonText && buttonText.trim()) {\n' +
    '        (0, _test.expect)(buttonText.trim().length).toBeGreaterThan(0);\n' +
    '      }\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:43:41.468Z',
  test_scope: 'Assessment Flow Tests - should maintain consistent button styling and behavior',
  test_scopes: [ 'Assessment Flow Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent button styling and behavior'
}
2025-08-05 14:43:51 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Assessment Flow Tests › should handle responsive design for assessment flow" classname="assessment-flow.spec.ts" time="0.054">
<failure message="assessment-flow.spec.ts:99:7 should handle responsive design for assessment flow" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › assessment-flow.spec.ts:99:7 › Assessment Flow Tests › should handle responsive design for assessment flow 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:43:55 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:43:55 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:43:55 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36533:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:43:55 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=452105373b8e5871b44c0bfc5d53597643d1dbed021104d5a447754940de6c52 target=36533:0
2025-08-05 14:43:55 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:44:04 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:04 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:04 - [32minfo[39m: [PlaywrightDriverModule] testId: 2657358a77c132dcc4e7-5e256ccda84c1f5185b2
2025-08-05 14:44:04 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '9a9f9372-e31a-4467-8cc3-d734a9b6097e',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '9a9f9372-e31a-4467-8cc3-d734a9b6097e',
  test_result: 'pending',
  automate_session_name: 'Assessment Flow Tests - should handle responsive design for assessment flow',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts',
  test_id: '2657358a77c132dcc4e7-5e256ccda84c1f5185b2',
  test_name: 'should handle responsive design for assessment flow',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    const viewports = [{\n' +
    '      width: 375,\n' +
    '      height: 667,\n' +
    "      name: 'Mobile'\n" +
    '    }, {\n' +
    '      width: 768,\n' +
    '      height: 1024,\n' +
    "      name: 'Tablet'\n" +
    '    }, {\n' +
    '      width: 1024,\n' +
    '      height: 768,\n' +
    "      name: 'Desktop'\n" +
    '    }];\n' +
    '    for (const viewport of viewports) {\n' +
    '      await page.setViewportSize({\n' +
    '        width: viewport.width,\n' +
    '        height: viewport.height\n' +
    '      });\n' +
    '      await page.waitForTimeout(500);\n' +
    '\n' +
    '      // Check that assessment content is properly contained\n' +
    `      const container = page.locator('main, .container, .assessment-container, [role="main"]').first();\n` +
    '      if ((await container.count()) > 0) {\n' +
    '        const isVisible = await container.isVisible();\n' +
    '        (0, _test.expect)(isVisible).toBe(true);\n' +
    '\n' +
    '        // Check no horizontal overflow\n' +
    '        const overflow = await page.evaluate(() => {\n' +
    '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
    '        });\n' +
    '        (0, _test.expect)(overflow).toBe(true);\n' +
    '      }\n' +
    '\n' +
    '      // Check that form elements are still accessible\n' +
    "      const inputs = page.locator('input, textarea, select');\n" +
    '      if ((await inputs.count()) > 0) {\n' +
    '        const firstInput = inputs.first();\n' +
    '        await (0, _test.expect)(firstInput).toBeVisible();\n' +
    '      }\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:43:55.022Z',
  test_scope: 'Assessment Flow Tests - should handle responsive design for assessment flow',
  test_scopes: [ 'Assessment Flow Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle responsive design for assessment flow'
}
2025-08-05 14:44:04 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Assessment Flow Tests › should handle form validation consistently" classname="assessment-flow.spec.ts" time="0.056">
<failure message="assessment-flow.spec.ts:132:7 should handle form validation consistently" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › assessment-flow.spec.ts:132:7 › Assessment Flow Tests › should handle form validation consistently 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:43:55 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:43:55 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:43:55 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36534:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:43:55 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=38428a4b2649da37836c0f38f10d8f52bad9355dc5e1a82a0300478ec2eb3aaa target=36534:0
2025-08-05 14:43:55 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:44:12 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:12 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:12 - [32minfo[39m: [PlaywrightDriverModule] testId: 2657358a77c132dcc4e7-fde13f094c61f9770f62
2025-08-05 14:44:12 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '0a560f42-eed3-42b7-9965-fbaae1b753b8',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '0a560f42-eed3-42b7-9965-fbaae1b753b8',
  test_result: 'pending',
  automate_session_name: 'Assessment Flow Tests - should handle form validation consistently',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts',
  test_id: '2657358a77c132dcc4e7-fde13f094c61f9770f62',
  test_name: 'should handle form validation consistently',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Look for submit buttons\n' +
    `    const submitButtons = page.locator('button[type="submit"], input[type="submit"], button:has-text("Submit"), button:has-text("Next")');\n` +
    '    if ((await submitButtons.count()) > 0) {\n' +
    '      const submitButton = submitButtons.first();\n' +
    '\n' +
    '      // Try to submit without filling required fields\n' +
    '      await submitButton.click();\n' +
    '\n' +
    '      // Wait for potential validation messages\n' +
    '      await page.waitForTimeout(1000);\n' +
    '\n' +
    '      // Check for validation messages\n' +
    `      const errorMessages = page.locator('.error, .validation-error, [role="alert"], .text-red-500, .text-red-600');\n` +
    '\n' +
    '      // If there are validation errors, they should be visible and styled consistently\n' +
    '      if ((await errorMessages.count()) > 0) {\n' +
    '        for (let i = 0; i < Math.min(await errorMessages.count(), 3); i++) {\n' +
    '          const error = errorMessages.nth(i);\n' +
    '          await (0, _test.expect)(error).toBeVisible();\n' +
    '\n' +
    '          // Check error styling\n' +
    '          const color = await error.evaluate(el => {\n' +
    '            return window.getComputedStyle(el).color;\n' +
    '          });\n' +
    '\n' +
    '          // Should have error color styling\n' +
    '          (0, _test.expect)(color).toMatch(/rgb\\(239, 68, 68\\)|rgb\\(220, 38, 38\\)|red/);\n' +
    '        }\n' +
    '      }\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:43:55.050Z',
  test_scope: 'Assessment Flow Tests - should handle form validation consistently',
  test_scopes: [ 'Assessment Flow Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form validation consistently'
}
2025-08-05 14:44:12 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Assessment Flow Tests › should maintain consistent loading states" classname="assessment-flow.spec.ts" time="0.04">
<failure message="assessment-flow.spec.ts:166:7 should maintain consistent loading states" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › assessment-flow.spec.ts:166:7 › Assessment Flow Tests › should maintain consistent loading states 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:43:57 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:43:57 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:43:57 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36549:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:43:57 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=4fac4a116ef426cd89f3f21ae79150b4cdf62bd3da2791233410c338bf339526 target=36549:0
2025-08-05 14:43:57 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:44:06 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:06 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:06 - [32minfo[39m: [PlaywrightDriverModule] testId: 2657358a77c132dcc4e7-4eb84e55328cf6fa3911
2025-08-05 14:44:06 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '682f2896-feae-4311-bf37-6a181d0698e0',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '682f2896-feae-4311-bf37-6a181d0698e0',
  test_result: 'pending',
  automate_session_name: 'Assessment Flow Tests - should maintain consistent loading states',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts',
  test_id: '2657358a77c132dcc4e7-4eb84e55328cf6fa3911',
  test_name: 'should maintain consistent loading states',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Look for loading indicators\n' +
    `    const loadingIndicators = page.locator('.loading, .spinner, [aria-busy="true"], .animate-spin');\n` +
    '    if ((await loadingIndicators.count()) > 0) {\n' +
    '      for (let i = 0; i < Math.min(await loadingIndicators.count(), 3); i++) {\n' +
    '        const loader = loadingIndicators.nth(i);\n' +
    '\n' +
    '        // Check loading indicator is visible\n' +
    '        await (0, _test.expect)(loader).toBeVisible();\n' +
    '\n' +
    '        // Check it has proper styling\n' +
    '        const styles = await loader.evaluate(el => {\n' +
    '          const computed = window.getComputedStyle(el);\n' +
    '          return {\n' +
    '            display: computed.display,\n' +
    '            visibility: computed.visibility\n' +
    '          };\n' +
    '        });\n' +
    "        (0, _test.expect)(styles.display).not.toBe('none');\n" +
    "        (0, _test.expect)(styles.visibility).not.toBe('hidden');\n" +
    '      }\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:43:57.419Z',
  test_scope: 'Assessment Flow Tests - should maintain consistent loading states',
  test_scopes: [ 'Assessment Flow Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent loading states'
}
2025-08-05 14:44:06 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Assessment Flow Tests › should handle navigation consistently" classname="assessment-flow.spec.ts" time="0.043">
<failure message="assessment-flow.spec.ts:192:7 should handle navigation consistently" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › assessment-flow.spec.ts:192:7 › Assessment Flow Tests › should handle navigation consistently 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:44:07 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:44:07 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:44:07 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36572:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:44:07 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=9caf35294ee67702f35768574df869b5aae34ff68e9f6c1a78aec3c66b279982 target=36572:0
2025-08-05 14:44:07 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:44:17 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:17 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:17 - [32minfo[39m: [PlaywrightDriverModule] testId: 2657358a77c132dcc4e7-f52ced16178146ffece8
2025-08-05 14:44:17 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'e2b2abcd-47f1-4e15-8bbd-487d26e7a4e9',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'e2b2abcd-47f1-4e15-8bbd-487d26e7a4e9',
  test_result: 'pending',
  automate_session_name: 'Assessment Flow Tests - should handle navigation consistently',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts',
  test_id: '2657358a77c132dcc4e7-f52ced16178146ffece8',
  test_name: 'should handle navigation consistently',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Test navigation buttons/links\n' +
    `    const navButtons = page.locator('a, button, [role="link"]').filter({\n` +
    '      hasText: /back|next|previous|continue/i\n' +
    '    });\n' +
    '    for (let i = 0; i < Math.min(await navButtons.count(), 3); i++) {\n' +
    '      const navButton = navButtons.nth(i);\n' +
    '\n' +
    '      // Check navigation element is visible and clickable\n' +
    '      await (0, _test.expect)(navButton).toBeVisible();\n' +
    '      const styles = await navButton.evaluate(el => {\n' +
    '        const computed = window.getComputedStyle(el);\n' +
    '        return {\n' +
    '          cursor: computed.cursor,\n' +
    '          pointerEvents: computed.pointerEvents\n' +
    '        };\n' +
    '      });\n' +
    '\n' +
    '      // Should be clickable\n' +
    "      (0, _test.expect)(['pointer', 'default']).toContain(styles.cursor);\n" +
    "      (0, _test.expect)(styles.pointerEvents).not.toBe('none');\n" +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:44:07.193Z',
  test_scope: 'Assessment Flow Tests - should handle navigation consistently',
  test_scopes: [ 'Assessment Flow Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle navigation consistently'
}
2025-08-05 14:44:17 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="browserstack-connection.spec.ts" timestamp="2025-08-05T18:43:37.374Z" hostname="-latest:Windows 11-browserstack" tests="2" failures="2" skipped="0" time="0.078" errors="0">
<testcase name="BrowserStack Connection Test › should connect to BrowserStack and load the homepage" classname="browserstack-connection.spec.ts" time="0.037">
<failure message="browserstack-connection.spec.ts:4:7 should connect to BrowserStack and load the homepage" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › browserstack-connection.spec.ts:4:7 › BrowserStack Connection Test › should connect to BrowserStack and load the homepage 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:44:09 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:44:09 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:44:10 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36575:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:44:10 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=16d814e1dff2465832d11da696b52e02d80f605058a30663d2fad99d6359f854 target=36575:0
2025-08-05 14:44:10 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:44:19 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:19 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:19 - [32minfo[39m: [PlaywrightDriverModule] testId: d09c4f4bbc136c469c4b-e15570eee07ccdd353ee
2025-08-05 14:44:19 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '186d5af1-3fe7-4ce0-880b-bebab9b97cdf',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '186d5af1-3fe7-4ce0-880b-bebab9b97cdf',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Connection Test - should connect to BrowserStack and load the homepage',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-connection.spec.ts',
  test_id: 'd09c4f4bbc136c469c4b-e15570eee07ccdd353ee',
  test_name: 'should connect to BrowserStack and load the homepage',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-connection.spec.ts:4',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    var _page$viewportSize, _page$viewportSize2;\n' +
    '    // Navigate to the homepage\n' +
    "    await page.goto('/');\n" +
    '\n' +
    '    // Wait for the page to load\n' +
    "    await page.waitForLoadState('networkidle');\n" +
    '\n' +
    '    // Check that the page loaded successfully\n' +
    '    const title = await page.title();\n' +
    '    (0, _test.expect)(title).toBeTruthy();\n' +
    '\n' +
    '    // Take a screenshot for verification\n' +
    '    await page.screenshot({\n' +
    "      path: 'browserstack-connection-test.png'\n" +
    '    });\n' +
    '\n' +
    '    // Check that the page has content\n' +
    "    const bodyText = await page.textContent('body');\n" +
    '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
    "    console.log('✅ BrowserStack connection successful!');\n" +
    '    console.log(`📄 Page title: ${title}`);\n' +
    '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:44:09.987Z',
  test_scope: 'BrowserStack Connection Test - should connect to BrowserStack and load the homepage',
  test_scopes: [ 'BrowserStack Connection Test' ],
  test_rerun_name: ' -latest:Windows 11-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should connect to BrowserStack and load the homepage'
}
2025-08-05 14:44:19 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="BrowserStack Connection Test › should display consistent branding colors" classname="browserstack-connection.spec.ts" time="0.041">
<failure message="browserstack-connection.spec.ts:27:7 should display consistent branding colors" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › browserstack-connection.spec.ts:27:7 › BrowserStack Connection Test › should display consistent branding colors 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:44:15 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:44:15 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:44:15 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36591:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:44:15 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=81aa99ecda3491957773c1ac83340eeaf31069ca170af353dff0473b134a1058 target=36591:0
2025-08-05 14:44:15 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:44:25 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:25 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:25 - [32minfo[39m: [PlaywrightDriverModule] testId: d09c4f4bbc136c469c4b-19eed17401918c1db4b6
2025-08-05 14:44:25 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '3fdb4fba-1b76-4fc0-99af-7eb1a77446db',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '3fdb4fba-1b76-4fc0-99af-7eb1a77446db',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Connection Test - should display consistent branding colors',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-connection.spec.ts',
  test_id: 'd09c4f4bbc136c469c4b-19eed17401918c1db4b6',
  test_name: 'should display consistent branding colors',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-connection.spec.ts:27',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    "    await page.goto('/');\n" +
    '\n' +
    '    // Check for any elements with Gutcheck brand colors\n' +
    `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
    '    if ((await gutcheckElements.count()) > 0) {\n' +
    '      console.log(`🎨 Found ${await gutcheckElements.count()} Gutcheck branded elements`);\n' +
    '\n' +
    '      // Check the first branded element\n' +
    '      const firstElement = gutcheckElements.first();\n' +
    '      const backgroundColor = await firstElement.evaluate(el => {\n' +
    '        return window.getComputedStyle(el).backgroundColor;\n' +
    '      });\n' +
    '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
    '    } else {\n' +
    "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:44:15.249Z',
  test_scope: 'BrowserStack Connection Test - should display consistent branding colors',
  test_scopes: [ 'BrowserStack Connection Test' ],
  test_rerun_name: ' -latest:Windows 11-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should display consistent branding colors'
}
2025-08-05 14:44:25 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="browserstack-public.spec.ts" timestamp="2025-08-05T18:43:37.374Z" hostname="-latest:Windows 11-browserstack" tests="2" failures="2" skipped="0" time="0.077" errors="0">
<testcase name="BrowserStack Public URL Test › should connect to BrowserStack and load a public website" classname="browserstack-public.spec.ts" time="0.042">
<failure message="browserstack-public.spec.ts:4:7 should connect to BrowserStack and load a public website" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › browserstack-public.spec.ts:4:7 › BrowserStack Public URL Test › should connect to BrowserStack and load a public website 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:44:20 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:44:20 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:44:20 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36608:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:44:20 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=0496fb0a54ad9faac53d0e79330464baa6269ace57638ad034e16248675505ee target=36608:0
2025-08-05 14:44:20 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:44:30 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:30 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:30 - [32minfo[39m: [PlaywrightDriverModule] testId: ebf48cb40e267d4d2a11-e0c62fcf81dd54eea10d
2025-08-05 14:44:30 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '497aec96-00d5-4687-bbe4-52be7825f986',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '497aec96-00d5-4687-bbe4-52be7825f986',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Public URL Test - should connect to BrowserStack and load a public website',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-public.spec.ts',
  test_id: 'ebf48cb40e267d4d2a11-e0c62fcf81dd54eea10d',
  test_name: 'should connect to BrowserStack and load a public website',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-public.spec.ts:4',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    var _page$viewportSize, _page$viewportSize2;\n' +
    '    // Navigate to a public website instead of localhost\n' +
    "    await page.goto('https://example.com');\n" +
    '\n' +
    '    // Wait for the page to load\n' +
    "    await page.waitForLoadState('networkidle');\n" +
    '\n' +
    '    // Check that the page loaded successfully\n' +
    '    const title = await page.title();\n' +
    '    (0, _test.expect)(title).toBeTruthy();\n' +
    '\n' +
    '    // Take a screenshot for verification\n' +
    '    await page.screenshot({\n' +
    "      path: 'browserstack-public-test.png'\n" +
    '    });\n' +
    '\n' +
    '    // Check that the page has content\n' +
    "    const bodyText = await page.textContent('body');\n" +
    '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
    "    console.log('✅ BrowserStack connection successful!');\n" +
    '    console.log(`📄 Page title: ${title}`);\n' +
    '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
    '    console.log(`🌐 URL: ${page.url()}`);\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:44:20.725Z',
  test_scope: 'BrowserStack Public URL Test - should connect to BrowserStack and load a public website',
  test_scopes: [ 'BrowserStack Public URL Test' ],
  test_rerun_name: ' -latest:Windows 11-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should connect to BrowserStack and load a public website'
}
2025-08-05 14:44:30 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="BrowserStack Public URL Test › should verify browser capabilities" classname="browserstack-public.spec.ts" time="0.035">
<failure message="browserstack-public.spec.ts:28:7 should verify browser capabilities" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › browserstack-public.spec.ts:28:7 › BrowserStack Public URL Test › should verify browser capabilities 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:44:22 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:44:22 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:44:22 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36619:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:44:22 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=b5cc08ea1051c0768f2c3714f76be4bc14a7999ac200e09ddb78410ff9b29508 target=36619:0
2025-08-05 14:44:22 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:44:33 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:33 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:33 - [32minfo[39m: [PlaywrightDriverModule] testId: ebf48cb40e267d4d2a11-8a39d57697fc87da5834
2025-08-05 14:44:33 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'b4f20554-6135-4611-a6a7-86d642709b31',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'b4f20554-6135-4611-a6a7-86d642709b31',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Public URL Test - should verify browser capabilities',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-public.spec.ts',
  test_id: 'ebf48cb40e267d4d2a11-8a39d57697fc87da5834',
  test_name: 'should verify browser capabilities',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-public.spec.ts:28',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    "    await page.goto('https://example.com');\n" +
    '\n' +
    '    // Get browser information\n' +
    '    const userAgent = await page.evaluate(() => navigator.userAgent);\n' +
    '    const viewport = page.viewportSize();\n' +
    '    console.log(`🔍 User Agent: ${userAgent}`);\n' +
    '    console.log(`📐 Viewport: ${viewport === null || viewport === void 0 ? void 0 : viewport.width}x${viewport === null || viewport === void 0 ? void 0 : viewport.height}`);\n' +
    '\n' +
    "    // Verify we're running in a real browser environment\n" +
    "    (0, _test.expect)(userAgent).toContain('Chrome');\n" +
    '    (0, _test.expect)(viewport).toBeTruthy();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:44:22.654Z',
  test_scope: 'BrowserStack Public URL Test - should verify browser capabilities',
  test_scopes: [ 'BrowserStack Public URL Test' ],
  test_rerun_name: ' -latest:Windows 11-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should verify browser capabilities'
}
2025-08-05 14:44:33 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="browserstack-simple.spec.ts" timestamp="2025-08-05T18:43:37.374Z" hostname="-latest:Windows 11-browserstack" tests="3" failures="3" skipped="0" time="0.131" errors="0">
<testcase name="BrowserStack Simple Tests › should load homepage successfully" classname="browserstack-simple.spec.ts" time="0.038">
<failure message="browserstack-simple.spec.ts:4:7 should load homepage successfully" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › browserstack-simple.spec.ts:4:7 › BrowserStack Simple Tests › should load homepage successfully 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:44:28 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:44:28 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:44:28 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36634:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:44:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=5fe56340909af43163bbdad15aeab545d9ba8a19c1ffeca4389a56703909480d target=36634:0
2025-08-05 14:44:29 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:44:49 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:49 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:49 - [32minfo[39m: [PlaywrightDriverModule] testId: 97c431d5d3d14e7f8260-332b4aa16d573128ecdb
2025-08-05 14:44:49 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'b1eee389-637c-45b6-acaa-72be70df2814',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'b1eee389-637c-45b6-acaa-72be70df2814',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Simple Tests - should load homepage successfully',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-simple.spec.ts',
  test_id: '97c431d5d3d14e7f8260-332b4aa16d573128ecdb',
  test_name: 'should load homepage successfully',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-simple.spec.ts:4',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    var _page$viewportSize, _page$viewportSize2;\n' +
    "    await page.goto('/');\n" +
    "    await page.waitForLoadState('networkidle');\n" +
    '\n' +
    '    // Basic page load verification\n' +
    '    const title = await page.title();\n' +
    '    (0, _test.expect)(title).toBeTruthy();\n' +
    '\n' +
    '    // Check if page has content\n' +
    "    const bodyText = await page.textContent('body');\n" +
    '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
    '\n' +
    '    // Take a screenshot for visual verification\n' +
    '    await page.screenshot({\n' +
    "      path: 'browserstack-homepage.png'\n" +
    '    });\n' +
    '    console.log(`✅ Homepage loaded successfully`);\n' +
    '    console.log(`📄 Page title: ${title}`);\n' +
    '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:44:28.960Z',
  test_scope: 'BrowserStack Simple Tests - should load homepage successfully',
  test_scopes: [ 'BrowserStack Simple Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
}
2025-08-05 14:44:49 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="BrowserStack Simple Tests › should navigate to assessment page" classname="browserstack-simple.spec.ts" time="0.05">
<failure message="browserstack-simple.spec.ts:24:7 should navigate to assessment page" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › browserstack-simple.spec.ts:24:7 › BrowserStack Simple Tests › should navigate to assessment page 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:44:33 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:44:33 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:44:33 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36645:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:44:33 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=4f24c9318d704b379ede37155fd790059d9fc3f113fc35b9b2f5e79b76dba86e target=36645:0
2025-08-05 14:44:33 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:44:44 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:44 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:44 - [32minfo[39m: [PlaywrightDriverModule] testId: 97c431d5d3d14e7f8260-4074d8fc801d21b7a6b1
2025-08-05 14:44:44 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'aaad59a4-0ec8-41c6-b498-4f0d4954cb86',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'aaad59a4-0ec8-41c6-b498-4f0d4954cb86',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Simple Tests - should navigate to assessment page',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-simple.spec.ts',
  test_id: '97c431d5d3d14e7f8260-4074d8fc801d21b7a6b1',
  test_name: 'should navigate to assessment page',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-simple.spec.ts:24',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    "    await page.goto('/assessment');\n" +
    "    await page.waitForLoadState('networkidle');\n" +
    '\n' +
    '    // Check if assessment page loads\n' +
    '    const title = await page.title();\n' +
    '    (0, _test.expect)(title).toBeTruthy();\n' +
    '\n' +
    '    // Look for assessment-specific content\n' +
    "    const assessmentContent = await page.textContent('body');\n" +
    '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
    '    await page.screenshot({\n' +
    "      path: 'browserstack-assessment.png'\n" +
    '    });\n' +
    '    console.log(`✅ Assessment page loaded successfully`);\n' +
    '    console.log(`📄 Page title: ${title}`);\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:44:33.682Z',
  test_scope: 'BrowserStack Simple Tests - should navigate to assessment page',
  test_scopes: [ 'BrowserStack Simple Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
}
2025-08-05 14:44:44 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="BrowserStack Simple Tests › should display consistent branding" classname="browserstack-simple.spec.ts" time="0.043">
<failure message="browserstack-simple.spec.ts:42:7 should display consistent branding" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › browserstack-simple.spec.ts:42:7 › BrowserStack Simple Tests › should display consistent branding 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:44:36 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:44:36 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:44:36 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36658:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:44:36 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=11e13cd13aa2db2b1580519783cc4194b91cadabb889f9a2438a2a37cd2d217e target=36658:0
2025-08-05 14:44:36 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:44:47 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:47 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:47 - [32minfo[39m: [PlaywrightDriverModule] testId: 97c431d5d3d14e7f8260-85ef5dc1966149cc9cf8
2025-08-05 14:44:47 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'b3a8746c-8850-445d-baaa-6341a4ef0c39',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'b3a8746c-8850-445d-baaa-6341a4ef0c39',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Simple Tests - should display consistent branding',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-simple.spec.ts',
  test_id: '97c431d5d3d14e7f8260-85ef5dc1966149cc9cf8',
  test_name: 'should display consistent branding',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-simple.spec.ts:42',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    "    await page.goto('/');\n" +
    '\n' +
    '    // Check for Gutcheck branding elements\n' +
    `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
    '    const elementCount = await gutcheckElements.count();\n' +
    '    if (elementCount > 0) {\n' +
    '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
    '\n' +
    '      // Check the first branded element\n' +
    '      const firstElement = gutcheckElements.first();\n' +
    '      const backgroundColor = await firstElement.evaluate(el => {\n' +
    '        return window.getComputedStyle(el).backgroundColor;\n' +
    '      });\n' +
    '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
    '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
    '    } else {\n' +
    "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
    '    }\n' +
    '    await page.screenshot({\n' +
    "      path: 'browserstack-branding.png'\n" +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:44:36.800Z',
  test_scope: 'BrowserStack Simple Tests - should display consistent branding',
  test_scopes: [ 'BrowserStack Simple Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
}
2025-08-05 14:44:47 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="browserstack-traditional.spec.ts" timestamp="2025-08-05T18:43:37.374Z" hostname="-latest:Windows 11-browserstack" tests="3" failures="3" skipped="0" time="0.141" errors="0">
<testcase name="BrowserStack Traditional Tests › should load homepage successfully" classname="browserstack-traditional.spec.ts" time="0.051">
<failure message="browserstack-traditional.spec.ts:4:7 should load homepage successfully" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › browserstack-traditional.spec.ts:4:7 › BrowserStack Traditional Tests › should load homepage successfully 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:44:47 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:44:47 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:44:47 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36676:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:44:47 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=6e1411f2053ae9ce8dae531ecd53a977acb4dd62c6063de16c5c2052472cfbb7 target=36676:0
2025-08-05 14:44:47 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:44:56 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:56 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:44:56 - [32minfo[39m: [PlaywrightDriverModule] testId: 5341f8408f38eeb41a40-ec99a909538bf01ede8b
2025-08-05 14:44:56 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '378f891d-30ff-4ba6-88df-42be74ad9f97',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '378f891d-30ff-4ba6-88df-42be74ad9f97',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Traditional Tests - should load homepage successfully',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-traditional.spec.ts',
  test_id: '5341f8408f38eeb41a40-ec99a909538bf01ede8b',
  test_name: 'should load homepage successfully',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-traditional.spec.ts:4',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    var _page$viewportSize, _page$viewportSize2;\n' +
    "    await page.goto('/');\n" +
    "    await page.waitForLoadState('networkidle');\n" +
    '\n' +
    '    // Basic page load verification\n' +
    '    const title = await page.title();\n' +
    '    (0, _test.expect)(title).toBeTruthy();\n' +
    '\n' +
    '    // Check if page has content\n' +
    "    const bodyText = await page.textContent('body');\n" +
    '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
    '\n' +
    '    // Take a screenshot for visual verification\n' +
    '    await page.screenshot({\n' +
    "      path: 'browserstack-homepage.png'\n" +
    '    });\n' +
    '    console.log(`✅ Homepage loaded successfully`);\n' +
    '    console.log(`📄 Page title: ${title}`);\n' +
    '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:44:47.187Z',
  test_scope: 'BrowserStack Traditional Tests - should load homepage successfully',
  test_scopes: [ 'BrowserStack Traditional Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should load homepage successfully'
}
2025-08-05 14:44:56 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="BrowserStack Traditional Tests › should navigate to assessment page" classname="browserstack-traditional.spec.ts" time="0.046">
<failure message="browserstack-traditional.spec.ts:24:7 should navigate to assessment page" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › browserstack-traditional.spec.ts:24:7 › BrowserStack Traditional Tests › should navigate to assessment page 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:44:51 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:44:51 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:44:51 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36687:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:44:51 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=4468712d34d753157daa5b56e2e36ea3e12227d18004d87d3351b755fa7106f2 target=36687:0
2025-08-05 14:44:51 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:45:21 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:45:21 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:45:21 - [32minfo[39m: [PlaywrightDriverModule] testId: 5341f8408f38eeb41a40-d60d92b4bac91a27d02f
2025-08-05 14:45:21 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'a7ce65e2-6ffc-4dae-9647-9a172470ff6e',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'a7ce65e2-6ffc-4dae-9647-9a172470ff6e',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Traditional Tests - should navigate to assessment page',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-traditional.spec.ts',
  test_id: '5341f8408f38eeb41a40-d60d92b4bac91a27d02f',
  test_name: 'should navigate to assessment page',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-traditional.spec.ts:24',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    "    await page.goto('/assessment');\n" +
    "    await page.waitForLoadState('networkidle');\n" +
    '\n' +
    '    // Check if assessment page loads\n' +
    '    const title = await page.title();\n' +
    '    (0, _test.expect)(title).toBeTruthy();\n' +
    '\n' +
    '    // Look for assessment-specific content\n' +
    "    const assessmentContent = await page.textContent('body');\n" +
    '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
    '    await page.screenshot({\n' +
    "      path: 'browserstack-assessment.png'\n" +
    '    });\n' +
    '    console.log(`✅ Assessment page loaded successfully`);\n' +
    '    console.log(`📄 Page title: ${title}`);\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:44:51.163Z',
  test_scope: 'BrowserStack Traditional Tests - should navigate to assessment page',
  test_scopes: [ 'BrowserStack Traditional Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should navigate to assessment page'
}
2025-08-05 14:45:21 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="BrowserStack Traditional Tests › should display consistent branding" classname="browserstack-traditional.spec.ts" time="0.044">
<failure message="browserstack-traditional.spec.ts:42:7 should display consistent branding" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › browserstack-traditional.spec.ts:42:7 › BrowserStack Traditional Tests › should display consistent branding 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:44:52 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:44:52 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:44:52 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36690:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:44:52 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=073f63cea990e5d434b3a5aaec49e1b6572000661a765ba319f03d4e249330c3 target=36690:0
2025-08-05 14:44:52 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:45:00 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:45:00 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:45:00 - [32minfo[39m: [PlaywrightDriverModule] testId: 5341f8408f38eeb41a40-793c5a7a84482ebbc5ce
2025-08-05 14:45:00 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '98490676-0ae9-4b62-9ec0-4658d0a83297',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '98490676-0ae9-4b62-9ec0-4658d0a83297',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Traditional Tests - should display consistent branding',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-traditional.spec.ts',
  test_id: '5341f8408f38eeb41a40-793c5a7a84482ebbc5ce',
  test_name: 'should display consistent branding',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-traditional.spec.ts:42',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    "    await page.goto('/');\n" +
    '\n' +
    '    // Check for Gutcheck branding elements\n' +
    `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
    '    const elementCount = await gutcheckElements.count();\n' +
    '    if (elementCount > 0) {\n' +
    '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
    '\n' +
    '      // Check the first branded element\n' +
    '      const firstElement = gutcheckElements.first();\n' +
    '      const backgroundColor = await firstElement.evaluate(el => {\n' +
    '        return window.getComputedStyle(el).backgroundColor;\n' +
    '      });\n' +
    '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
    '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
    '    } else {\n' +
    "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
    '    }\n' +
    '    await page.screenshot({\n' +
    "      path: 'browserstack-branding.png'\n" +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:44:52.150Z',
  test_scope: 'BrowserStack Traditional Tests - should display consistent branding',
  test_scopes: [ 'BrowserStack Traditional Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should display consistent branding'
}
2025-08-05 14:45:00 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="visual-consistency.spec.ts" timestamp="2025-08-05T18:43:37.374Z" hostname="-latest:Windows 11-browserstack" tests="9" failures="9" skipped="0" time="0.472" errors="0">
<testcase name="Visual Consistency Tests › should display consistent colors across browsers" classname="visual-consistency.spec.ts" time="0.044">
<failure message="visual-consistency.spec.ts:9:7 should display consistent colors across browsers" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › visual-consistency.spec.ts:9:7 › Visual Consistency Tests › should display consistent colors across browsers 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:44:59 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:44:59 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:44:59 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36713:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:44:59 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=c5c113ca5de757398a37dcb53bfc6112667aed8e58764784e5167afe2c737cf2 target=36713:0
2025-08-05 14:44:59 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:45:08 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:45:08 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:45:08 - [32minfo[39m: [PlaywrightDriverModule] testId: 2645056029e91a3a60a4-7611d7d20509b00dcc98
2025-08-05 14:45:08 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'd1a79ef9-179a-42b6-9d20-47e8746ed00d',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'd1a79ef9-179a-42b6-9d20-47e8746ed00d',
  test_result: 'pending',
  automate_session_name: 'Visual Consistency Tests - should display consistent colors across browsers',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts',
  test_id: '2645056029e91a3a60a4-7611d7d20509b00dcc98',
  test_name: 'should display consistent colors across browsers',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Test Gutcheck brand colors\n' +
    '    const colorTests = [{\n' +
    "      selector: '.bg-gutcheck-deep-navy',\n" +
    "      expectedColor: 'rgb(10, 31, 68)'\n" +
    '    }, {\n' +
    "      selector: '.bg-gutcheck-electric-blue',\n" +
    "      expectedColor: 'rgb(20, 122, 255)'\n" +
    '    }, {\n' +
    "      selector: '.bg-gutcheck-vibrant-teal',\n" +
    "      expectedColor: 'rgb(25, 194, 160)'\n" +
    '    }, {\n' +
    "      selector: '.bg-gutcheck-bright-orange',\n" +
    "      expectedColor: 'rgb(255, 107, 0)'\n" +
    '    }, {\n' +
    "      selector: '.bg-gutcheck-bright-yellow',\n" +
    "      expectedColor: 'rgb(255, 199, 0)'\n" +
    '    }];\n' +
    '    for (const test of colorTests) {\n' +
    '      const element = page.locator(test.selector).first();\n' +
    '      if ((await element.count()) > 0) {\n' +
    '        const backgroundColor = await element.evaluate(el => {\n' +
    '          return window.getComputedStyle(el).backgroundColor;\n' +
    '        });\n' +
    '        (0, _test.expect)(backgroundColor).toBe(test.expectedColor);\n' +
    '      }\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:44:59.875Z',
  test_scope: 'Visual Consistency Tests - should display consistent colors across browsers',
  test_scopes: [ 'Visual Consistency Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should display consistent colors across browsers'
}
2025-08-05 14:45:08 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Visual Consistency Tests › should maintain consistent typography" classname="visual-consistency.spec.ts" time="0.039">
<failure message="visual-consistency.spec.ts:30:7 should maintain consistent typography" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › visual-consistency.spec.ts:30:7 › Visual Consistency Tests › should maintain consistent typography 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:45:03 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:45:03 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:45:03 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36727:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:45:03 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=864fd231b3950b502fbc0496450650c6263ee01dec0526fd4a1824f9a3e3bbc1 target=36727:0
2025-08-05 14:45:03 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:45:34 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:45:34 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:45:34 - [32minfo[39m: [PlaywrightDriverModule] testId: 2645056029e91a3a60a4-c6c52944e784aed0f156
2025-08-05 14:45:34 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '31bf31b3-7a78-4653-aacc-2f436e16e6c6',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '31bf31b3-7a78-4653-aacc-2f436e16e6c6',
  test_result: 'pending',
  automate_session_name: 'Visual Consistency Tests - should maintain consistent typography',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts',
  test_id: '2645056029e91a3a60a4-c6c52944e784aed0f156',
  test_name: 'should maintain consistent typography',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Test font family consistency\n' +
    "    const textElements = page.locator('h1, h2, h3, p, button, input, textarea');\n" +
    '    for (let i = 0; i < Math.min(await textElements.count(), 10); i++) {\n' +
    '      const element = textElements.nth(i);\n' +
    '      const fontFamily = await element.evaluate(el => {\n' +
    '        return window.getComputedStyle(el).fontFamily;\n' +
    '      });\n' +
    '\n' +
    '      // Should use Inter font family or fallback to system fonts\n' +
    '      (0, _test.expect)(fontFamily).toMatch(/Inter|system-ui|sans-serif/);\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:45:03.910Z',
  test_scope: 'Visual Consistency Tests - should maintain consistent typography',
  test_scopes: [ 'Visual Consistency Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain consistent typography'
}
2025-08-05 14:45:34 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Visual Consistency Tests › should have consistent button styling" classname="visual-consistency.spec.ts" time="0.078">
<failure message="visual-consistency.spec.ts:45:7 should have consistent button styling" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › visual-consistency.spec.ts:45:7 › Visual Consistency Tests › should have consistent button styling 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:45:12 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:45:12 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:45:12 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36745:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:45:12 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=81430f1624ebe2605b9f15dbb5a951994a58eaea0a08d4c0469d99e1ae3850de target=36745:0
2025-08-05 14:45:12 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:45:42 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:45:42 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:45:42 - [32minfo[39m: [PlaywrightDriverModule] testId: 2645056029e91a3a60a4-ce9c06f8ce8834110c43
2025-08-05 14:45:42 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'df35d50c-8921-45b3-8def-494448fcdd40',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'df35d50c-8921-45b3-8def-494448fcdd40',
  test_result: 'pending',
  automate_session_name: 'Visual Consistency Tests - should have consistent button styling',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts',
  test_id: '2645056029e91a3a60a4-ce9c06f8ce8834110c43',
  test_name: 'should have consistent button styling',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    "    const buttons = page.locator('button');\n" +
    '    for (let i = 0; i < Math.min(await buttons.count(), 5); i++) {\n' +
    '      const button = buttons.nth(i);\n' +
    '\n' +
    '      // Check button has proper styling\n' +
    '      const styles = await button.evaluate(el => {\n' +
    '        const computed = window.getComputedStyle(el);\n' +
    '        return {\n' +
    '          borderRadius: computed.borderRadius,\n' +
    '          padding: computed.padding,\n' +
    '          cursor: computed.cursor\n' +
    '        };\n' +
    '      });\n' +
    "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
    "      (0, _test.expect)(styles.borderRadius).not.toBe('0px');\n" +
    "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:45:12.796Z',
  test_scope: 'Visual Consistency Tests - should have consistent button styling',
  test_scopes: [ 'Visual Consistency Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should have consistent button styling'
}
2025-08-05 14:45:42 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Visual Consistency Tests › should maintain layout consistency on different screen sizes" classname="visual-consistency.spec.ts" time="0.094">
<failure message="visual-consistency.spec.ts:67:7 should maintain layout consistency on different screen sizes" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › visual-consistency.spec.ts:67:7 › Visual Consistency Tests › should maintain layout consistency on different screen sizes 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:45:24 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:45:24 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:45:24 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36758:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:45:24 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=7659d9b11f9540cd4bb73d447eeff3527c6cd5306b3cb67909e289d292cb0cdb target=36758:0
2025-08-05 14:45:24 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:45:38 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:45:38 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:45:38 - [32minfo[39m: [PlaywrightDriverModule] testId: 2645056029e91a3a60a4-8eeaac1f84334d0ba514
2025-08-05 14:45:38 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'f29ea331-4aff-4840-9cac-8981d8020ca1',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'f29ea331-4aff-4840-9cac-8981d8020ca1',
  test_result: 'pending',
  automate_session_name: 'Visual Consistency Tests - should maintain layout consistency on different screen sizes',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts',
  test_id: '2645056029e91a3a60a4-8eeaac1f84334d0ba514',
  test_name: 'should maintain layout consistency on different screen sizes',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    const viewports = [{\n' +
    '      width: 1920,\n' +
    '      height: 1080,\n' +
    "      name: 'Desktop Large'\n" +
    '    }, {\n' +
    '      width: 1366,\n' +
    '      height: 768,\n' +
    "      name: 'Desktop Small'\n" +
    '    }, {\n' +
    '      width: 768,\n' +
    '      height: 1024,\n' +
    "      name: 'Tablet Portrait'\n" +
    '    }, {\n' +
    '      width: 375,\n' +
    '      height: 667,\n' +
    "      name: 'Mobile Portrait'\n" +
    '    }, {\n' +
    '      width: 414,\n' +
    '      height: 896,\n' +
    "      name: 'Mobile Large'\n" +
    '    }];\n' +
    '    for (const viewport of viewports) {\n' +
    '      await page.setViewportSize({\n' +
    '        width: viewport.width,\n' +
    '        height: viewport.height\n' +
    '      });\n' +
    '\n' +
    '      // Wait for layout to stabilize\n' +
    '      await page.waitForTimeout(500);\n' +
    '\n' +
    '      // Check that main content is visible and properly positioned\n' +
    `      const mainContent = page.locator('main, .main, #main, [role="main"]').first();\n` +
    '      if ((await mainContent.count()) > 0) {\n' +
    '        const isVisible = await mainContent.isVisible();\n' +
    '        (0, _test.expect)(isVisible).toBe(true);\n' +
    '\n' +
    "        // Check that content doesn't overflow horizontally\n" +
    '        const overflow = await page.evaluate(() => {\n' +
    '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
    '        });\n' +
    '        (0, _test.expect)(overflow).toBe(true);\n' +
    '      }\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:45:24.188Z',
  test_scope: 'Visual Consistency Tests - should maintain layout consistency on different screen sizes',
  test_scopes: [ 'Visual Consistency Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain layout consistency on different screen sizes'
}
2025-08-05 14:45:38 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Visual Consistency Tests › should handle form elements consistently" classname="visual-consistency.spec.ts" time="0.038">
<failure message="visual-consistency.spec.ts:97:7 should handle form elements consistently" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › visual-consistency.spec.ts:97:7 › Visual Consistency Tests › should handle form elements consistently 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:45:37 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:45:37 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:45:37 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36767:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:45:37 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=a970c7ce35a232c18f2e1bda8dbc19bec50e531ef7740431ebded5c63d8a6607 target=36767:0
2025-08-05 14:45:37 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:45:47 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:45:47 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:45:47 - [32minfo[39m: [PlaywrightDriverModule] testId: 2645056029e91a3a60a4-4576a4a54173927e9c76
2025-08-05 14:45:47 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '636a82f2-c5aa-4a05-9736-43f6a6971925',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '636a82f2-c5aa-4a05-9736-43f6a6971925',
  test_result: 'pending',
  automate_session_name: 'Visual Consistency Tests - should handle form elements consistently',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts',
  test_id: '2645056029e91a3a60a4-4576a4a54173927e9c76',
  test_name: 'should handle form elements consistently',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Test form input styling\n' +
    "    const inputs = page.locator('input, textarea, select');\n" +
    '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
    '      const input = inputs.nth(i);\n' +
    '      const styles = await input.evaluate(el => {\n' +
    '        const computed = window.getComputedStyle(el);\n' +
    '        return {\n' +
    '          border: computed.border,\n' +
    '          borderRadius: computed.borderRadius,\n' +
    '          padding: computed.padding\n' +
    '        };\n' +
    '      });\n' +
    '\n' +
    '      // Should have consistent border and padding\n' +
    "      (0, _test.expect)(styles.border).not.toBe('none');\n" +
    "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:45:37.816Z',
  test_scope: 'Visual Consistency Tests - should handle form elements consistently',
  test_scopes: [ 'Visual Consistency Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle form elements consistently'
}
2025-08-05 14:45:47 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Visual Consistency Tests › should maintain consistent spacing and alignment" classname="visual-consistency.spec.ts" time="0.042">
<failure message="visual-consistency.spec.ts:119:7 should maintain consistent spacing and alignment" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › visual-consistency.spec.ts:119:7 › Visual Consistency Tests › should maintain consistent spacing and alignment 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:45:41 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:45:41 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:45:41 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36773:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:45:41 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=b23a8da0a956035f95e05b121530cb32ab54017b9c870ca8f5c38fe829892bc1 target=36773:0
2025-08-05 14:45:41 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:45:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:45:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:45:53 - [32minfo[39m: [PlaywrightDriverModule] testId: 2645056029e91a3a60a4-d27e85568ad858d1c3f2
2025-08-05 14:45:53 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'ab50da8e-876a-42b5-b708-5bbdf2ec2050',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'ab50da8e-876a-42b5-b708-5bbdf2ec2050',
  test_result: 'pending',
  automate_session_name: 'Visual Consistency Tests - should maintain consistent spacing and alignment',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts',
  test_id: '2645056029e91a3a60a4-d27e85568ad858d1c3f2',
  test_name: 'should maintain consistent spacing and alignment',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Test that elements have consistent spacing\n' +
    "    const containers = page.locator('div, section, article').filter({\n" +
    '      hasText: /./\n' +
    '    });\n' +
    '    for (let i = 0; i < Math.min(await containers.count(), 10); i++) {\n' +
    '      const container = containers.nth(i);\n' +
    '      const styles = await container.evaluate(el => {\n' +
    '        const computed = window.getComputedStyle(el);\n' +
    '        return {\n' +
    '          margin: computed.margin,\n' +
    '          padding: computed.padding,\n' +
    '          display: computed.display\n' +
    '        };\n' +
    '      });\n' +
    '\n' +
    '      // Should have consistent display properties\n' +
    "      (0, _test.expect)(['block', 'flex', 'grid', 'inline-block']).toContain(styles.display);\n" +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:45:41.187Z',
  test_scope: 'Visual Consistency Tests - should maintain consistent spacing and alignment',
  test_scopes: [ 'Visual Consistency Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain consistent spacing and alignment'
}
2025-08-05 14:45:53 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Visual Consistency Tests › should handle dark mode consistently" classname="visual-consistency.spec.ts" time="0.053">
<failure message="visual-consistency.spec.ts:140:7 should handle dark mode consistently" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › visual-consistency.spec.ts:140:7 › Visual Consistency Tests › should handle dark mode consistently 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:45:46 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:45:46 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:45:46 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36780:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:45:46 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=2c630df8001de01ea570b7f116f7d4f93f0f1a0f0e65597aef2feca2fe76fdf3 target=36780:0
2025-08-05 14:45:46 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:45:56 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:45:56 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:45:56 - [32minfo[39m: [PlaywrightDriverModule] testId: 2645056029e91a3a60a4-187bfb2b7e4bd2df04fc
2025-08-05 14:45:56 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'aa759b7a-86b6-4ef2-b547-45e53cdcae13',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'aa759b7a-86b6-4ef2-b547-45e53cdcae13',
  test_result: 'pending',
  automate_session_name: 'Visual Consistency Tests - should handle dark mode consistently',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts',
  test_id: '2645056029e91a3a60a4-187bfb2b7e4bd2df04fc',
  test_name: 'should handle dark mode consistently',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Test dark mode colors\n' +
    '    await page.evaluate(() => {\n' +
    '      // Simulate dark mode\n' +
    "      document.documentElement.style.colorScheme = 'dark';\n" +
    "      document.documentElement.classList.add('dark');\n" +
    '    });\n' +
    '    await page.waitForTimeout(100);\n' +
    '\n' +
    '    // Check that dark mode colors are applied\n' +
    '    const bodyColor = await page.evaluate(() => {\n' +
    '      return window.getComputedStyle(document.body).backgroundColor;\n' +
    '    });\n' +
    '\n' +
    '    // Should have dark background in dark mode\n' +
    '    (0, _test.expect)(bodyColor).toMatch(/rgb\\(10, 10, 10\\)|rgba\\(10, 10, 10/);\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:45:46.515Z',
  test_scope: 'Visual Consistency Tests - should handle dark mode consistently',
  test_scopes: [ 'Visual Consistency Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle dark mode consistently'
}
2025-08-05 14:45:56 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Visual Consistency Tests › should maintain accessibility standards" classname="visual-consistency.spec.ts" time="0.039">
<failure message="visual-consistency.spec.ts:159:7 should maintain accessibility standards" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › visual-consistency.spec.ts:159:7 › Visual Consistency Tests › should maintain accessibility standards 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:45:49 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:45:49 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:45:49 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36796:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:45:50 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=910dd4264c2241092e539a69e9bdba0ac309b22883685ef90e3c4f1c7265768d target=36796:0
2025-08-05 14:45:50 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:46:21 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:21 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:21 - [32minfo[39m: [PlaywrightDriverModule] testId: 2645056029e91a3a60a4-0b25b16b94973982ecc2
2025-08-05 14:46:21 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '3e10bbff-65af-47a8-9b1a-680659e9ef62',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '3e10bbff-65af-47a8-9b1a-680659e9ef62',
  test_result: 'pending',
  automate_session_name: 'Visual Consistency Tests - should maintain accessibility standards',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts',
  test_id: '2645056029e91a3a60a4-0b25b16b94973982ecc2',
  test_name: 'should maintain accessibility standards',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Test color contrast\n' +
    "    const textElements = page.locator('h1, h2, h3, p, span, div').filter({\n" +
    '      hasText: /./\n' +
    '    });\n' +
    '    for (let i = 0; i < Math.min(await textElements.count(), 5); i++) {\n' +
    '      const element = textElements.nth(i);\n' +
    '      const contrast = await element.evaluate(el => {\n' +
    '        const style = window.getComputedStyle(el);\n' +
    '        const backgroundColor = style.backgroundColor;\n' +
    '        const color = style.color;\n' +
    '\n' +
    "        // Simple contrast check - in a real test, you'd use a proper contrast calculation\n" +
    '        return {\n' +
    '          backgroundColor,\n' +
    '          color\n' +
    '        };\n' +
    '      });\n' +
    '\n' +
    '      // Should have defined colors\n' +
    "      (0, _test.expect)(contrast.backgroundColor).not.toBe('rgba(0, 0, 0, 0)');\n" +
    "      (0, _test.expect)(contrast.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:45:49.960Z',
  test_scope: 'Visual Consistency Tests - should maintain accessibility standards',
  test_scopes: [ 'Visual Consistency Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain accessibility standards'
}
2025-08-05 14:46:21 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Visual Consistency Tests › should handle images and icons consistently" classname="visual-consistency.spec.ts" time="0.045">
<failure message="visual-consistency.spec.ts:181:7 should handle images and icons consistently" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › visual-consistency.spec.ts:181:7 › Visual Consistency Tests › should handle images and icons consistently 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:45:57 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:45:57 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:45:57 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36803:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:45:57 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=e4144a3b9600fdec66843a56bddb8963ebadfa612d6ebd9ae3146065c1eb7feb target=36803:0
2025-08-05 14:45:57 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:46:14 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:14 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:14 - [32minfo[39m: [PlaywrightDriverModule] testId: 2645056029e91a3a60a4-6d720f1bb14cd86c68a2
2025-08-05 14:46:14 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '64fc3a77-8ce2-4b0c-8729-beaa04dded72',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '64fc3a77-8ce2-4b0c-8729-beaa04dded72',
  test_result: 'pending',
  automate_session_name: 'Visual Consistency Tests - should handle images and icons consistently',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts',
  test_id: '2645056029e91a3a60a4-6d720f1bb14cd86c68a2',
  test_name: 'should handle images and icons consistently',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    "    const images = page.locator('img, svg');\n" +
    '    for (let i = 0; i < Math.min(await images.count(), 5); i++) {\n' +
    '      const image = images.nth(i);\n' +
    '\n' +
    '      // Check that images are properly loaded and visible\n' +
    '      const isVisible = await image.isVisible();\n' +
    '      (0, _test.expect)(isVisible).toBe(true);\n' +
    '\n' +
    '      // Check that images have proper alt text or aria labels\n' +
    "      const altText = await image.getAttribute('alt');\n" +
    "      const ariaLabel = await image.getAttribute('aria-label');\n" +
    '      if (!altText && !ariaLabel) {\n' +
    '        // For decorative images, this might be acceptable\n' +
    "        const role = await image.getAttribute('role');\n" +
    "        (0, _test.expect)(role === 'presentation' || role === 'img').toBe(true);\n" +
    '      }\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:45:57.508Z',
  test_scope: 'Visual Consistency Tests - should handle images and icons consistently',
  test_scopes: [ 'Visual Consistency Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle images and icons consistently'
}
2025-08-05 14:46:14 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="assessment-flow.spec.ts" timestamp="2025-08-05T18:43:37.374Z" hostname="-latest:OSX Ventura-browserstack" tests="7" failures="7" skipped="0" time="0.327" errors="0">
<testcase name="Assessment Flow Tests › should display assessment questions consistently" classname="assessment-flow.spec.ts" time="0.043">
<failure message="assessment-flow.spec.ts:9:7 should display assessment questions consistently" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › assessment-flow.spec.ts:9:7 › Assessment Flow Tests › should display assessment questions consistently 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:45:59 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:45:59 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:45:59 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36808:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:45:59 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=1245cf100ac95df5a0c72a8d79cfaf0a7ac5e234fb92ac6fc04e3d028579e978 target=36808:0
2025-08-05 14:45:59 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:46:04 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:04 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:04 - [32minfo[39m: [PlaywrightDriverModule] testId: 2657358a77c132dcc4e7-646cb5cc7513ff6f3f25
2025-08-05 14:46:04 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'dc3c71ee-9ad7-4775-9994-e0e95fe81bc2',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'dc3c71ee-9ad7-4775-9994-e0e95fe81bc2',
  test_result: 'pending',
  automate_session_name: 'Assessment Flow Tests - should display assessment questions consistently',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts',
  test_id: '2657358a77c132dcc4e7-646cb5cc7513ff6f3f25',
  test_name: 'should display assessment questions consistently',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Wait for assessment content to load\n' +
    `    await page.waitForSelector('[data-testid="assessment-question"], .question, h1, h2', {\n` +
    '      timeout: 10000\n' +
    '    });\n' +
    '\n' +
    '    // Check that questions are visible and properly styled\n' +
    `    const questions = page.locator('[data-testid="assessment-question"], .question, h1, h2').filter({\n` +
    '      hasText: /./\n' +
    '    });\n' +
    '    (0, _test.expect)(await questions.count()).toBeGreaterThan(0);\n' +
    '    for (let i = 0; i < Math.min(await questions.count(), 3); i++) {\n' +
    '      const question = questions.nth(i);\n' +
    '\n' +
    '      // Check visibility\n' +
    '      await (0, _test.expect)(question).toBeVisible();\n' +
    '\n' +
    '      // Check styling\n' +
    '      const styles = await question.evaluate(el => {\n' +
    '        const computed = window.getComputedStyle(el);\n' +
    '        return {\n' +
    '          fontSize: computed.fontSize,\n' +
    '          fontWeight: computed.fontWeight,\n' +
    '          color: computed.color,\n' +
    '          lineHeight: computed.lineHeight\n' +
    '        };\n' +
    '      });\n' +
    '\n' +
    '      // Should have readable text styling\n' +
    '      (0, _test.expect)(parseFloat(styles.fontSize)).toBeGreaterThan(12);\n' +
    "      (0, _test.expect)(styles.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:45:59.884Z',
  test_scope: 'Assessment Flow Tests - should display assessment questions consistently',
  test_scopes: [ 'Assessment Flow Tests' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should display assessment questions consistently'
}
2025-08-05 14:46:04 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Assessment Flow Tests › should handle form inputs consistently across browsers" classname="assessment-flow.spec.ts" time="0.069">
<failure message="assessment-flow.spec.ts:41:7 should handle form inputs consistently across browsers" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › assessment-flow.spec.ts:41:7 › Assessment Flow Tests › should handle form inputs consistently across browsers 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:46:07 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:46:07 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:46:07 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36816:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:46:07 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=fcaeaee37964fa17733f97799c6f9340341f2c71b785a1d2bcb70b751b889024 target=36816:0
2025-08-05 14:46:07 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:46:11 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:11 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:12 - [32minfo[39m: [PlaywrightDriverModule] testId: 2657358a77c132dcc4e7-b548eb0481a202340efe
2025-08-05 14:46:12 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '54bbf427-b932-4b14-ab59-e0873e0fd5a8',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '54bbf427-b932-4b14-ab59-e0873e0fd5a8',
  test_result: 'pending',
  automate_session_name: 'Assessment Flow Tests - should handle form inputs consistently across browsers',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts',
  test_id: '2657358a77c132dcc4e7-b548eb0481a202340efe',
  test_name: 'should handle form inputs consistently across browsers',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Look for form inputs (radio buttons, checkboxes, text inputs)\n' +
    "    const inputs = page.locator('input, textarea, select');\n" +
    '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
    '      const input = inputs.nth(i);\n' +
    '\n' +
    '      // Check input is visible and interactive\n' +
    '      await (0, _test.expect)(input).toBeVisible();\n' +
    "      const inputType = await input.getAttribute('type');\n" +
    "      if (inputType === 'radio' || inputType === 'checkbox') {\n" +
    '        // Test radio/checkbox functionality\n' +
    '        await input.click();\n' +
    '\n' +
    '        // Verify selection state\n' +
    '        const isChecked = await input.isChecked();\n' +
    '        (0, _test.expect)(isChecked).toBe(true);\n' +
    "      } else if (inputType === 'text' || inputType === 'textarea') {\n" +
    '        // Test text input functionality\n' +
    "        await input.fill('Test input');\n" +
    '        const value = await input.inputValue();\n' +
    "        (0, _test.expect)(value).toBe('Test input');\n" +
    '      }\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:46:07.641Z',
  test_scope: 'Assessment Flow Tests - should handle form inputs consistently across browsers',
  test_scopes: [ 'Assessment Flow Tests' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form inputs consistently across browsers'
}
2025-08-05 14:46:12 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Assessment Flow Tests › should maintain consistent button styling and behavior" classname="assessment-flow.spec.ts" time="0.038">
<failure message="assessment-flow.spec.ts:69:7 should maintain consistent button styling and behavior" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › assessment-flow.spec.ts:69:7 › Assessment Flow Tests › should maintain consistent button styling and behavior 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:46:16 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:46:16 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:46:16 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36825:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:46:16 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=f739c5e20fc9c48b8379146bcd07e3634da743ceb48dee71550b16b3e0e76f65 target=36825:0
2025-08-05 14:46:16 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:46:21 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:21 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:21 - [32minfo[39m: [PlaywrightDriverModule] testId: 2657358a77c132dcc4e7-062eefd1c7ba965ab177
2025-08-05 14:46:21 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'db4efd9d-4f1b-436a-bb00-0bd287d98f21',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'db4efd9d-4f1b-436a-bb00-0bd287d98f21',
  test_result: 'pending',
  automate_session_name: 'Assessment Flow Tests - should maintain consistent button styling and behavior',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts',
  test_id: '2657358a77c132dcc4e7-062eefd1c7ba965ab177',
  test_name: 'should maintain consistent button styling and behavior',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    `    const buttons = page.locator('button, [role="button"], input[type="submit"]');\n` +
    '    for (let i = 0; i < Math.min(await buttons.count(), 3); i++) {\n' +
    '      const button = buttons.nth(i);\n' +
    '\n' +
    '      // Check button styling\n' +
    '      const styles = await button.evaluate(el => {\n' +
    '        const computed = window.getComputedStyle(el);\n' +
    '        return {\n' +
    '          backgroundColor: computed.backgroundColor,\n' +
    '          color: computed.color,\n' +
    '          borderRadius: computed.borderRadius,\n' +
    '          padding: computed.padding,\n' +
    '          cursor: computed.cursor\n' +
    '        };\n' +
    '      });\n' +
    '\n' +
    '      // Should have proper button styling\n' +
    "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
    "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
    '\n' +
    '      // Check button text is readable\n' +
    '      const buttonText = await button.textContent();\n' +
    '      if (buttonText && buttonText.trim()) {\n' +
    '        (0, _test.expect)(buttonText.trim().length).toBeGreaterThan(0);\n' +
    '      }\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:46:16.615Z',
  test_scope: 'Assessment Flow Tests - should maintain consistent button styling and behavior',
  test_scopes: [ 'Assessment Flow Tests' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent button styling and behavior'
}
2025-08-05 14:46:21 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Assessment Flow Tests › should handle responsive design for assessment flow" classname="assessment-flow.spec.ts" time="0.041">
<failure message="assessment-flow.spec.ts:99:7 should handle responsive design for assessment flow" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › assessment-flow.spec.ts:99:7 › Assessment Flow Tests › should handle responsive design for assessment flow 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:46:17 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:46:17 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:46:17 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36847:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:46:17 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=512568b5b1e9d44d56085ef1d350b4aa997c3e4fd74482fbe3e03b2140738b1e target=36847:0
2025-08-05 14:46:17 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:46:22 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:22 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:22 - [32minfo[39m: [PlaywrightDriverModule] testId: 2657358a77c132dcc4e7-99b4b5f452759066e910
2025-08-05 14:46:22 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'b3c5f057-e945-4e1a-b431-ac36f5f8952a',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'b3c5f057-e945-4e1a-b431-ac36f5f8952a',
  test_result: 'pending',
  automate_session_name: 'Assessment Flow Tests - should handle responsive design for assessment flow',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts',
  test_id: '2657358a77c132dcc4e7-99b4b5f452759066e910',
  test_name: 'should handle responsive design for assessment flow',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    const viewports = [{\n' +
    '      width: 375,\n' +
    '      height: 667,\n' +
    "      name: 'Mobile'\n" +
    '    }, {\n' +
    '      width: 768,\n' +
    '      height: 1024,\n' +
    "      name: 'Tablet'\n" +
    '    }, {\n' +
    '      width: 1024,\n' +
    '      height: 768,\n' +
    "      name: 'Desktop'\n" +
    '    }];\n' +
    '    for (const viewport of viewports) {\n' +
    '      await page.setViewportSize({\n' +
    '        width: viewport.width,\n' +
    '        height: viewport.height\n' +
    '      });\n' +
    '      await page.waitForTimeout(500);\n' +
    '\n' +
    '      // Check that assessment content is properly contained\n' +
    `      const container = page.locator('main, .container, .assessment-container, [role="main"]').first();\n` +
    '      if ((await container.count()) > 0) {\n' +
    '        const isVisible = await container.isVisible();\n' +
    '        (0, _test.expect)(isVisible).toBe(true);\n' +
    '\n' +
    '        // Check no horizontal overflow\n' +
    '        const overflow = await page.evaluate(() => {\n' +
    '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
    '        });\n' +
    '        (0, _test.expect)(overflow).toBe(true);\n' +
    '      }\n' +
    '\n' +
    '      // Check that form elements are still accessible\n' +
    "      const inputs = page.locator('input, textarea, select');\n" +
    '      if ((await inputs.count()) > 0) {\n' +
    '        const firstInput = inputs.first();\n' +
    '        await (0, _test.expect)(firstInput).toBeVisible();\n' +
    '      }\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:46:17.793Z',
  test_scope: 'Assessment Flow Tests - should handle responsive design for assessment flow',
  test_scopes: [ 'Assessment Flow Tests' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle responsive design for assessment flow'
}
2025-08-05 14:46:22 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Assessment Flow Tests › should handle form validation consistently" classname="assessment-flow.spec.ts" time="0.045">
<failure message="assessment-flow.spec.ts:132:7 should handle form validation consistently" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › assessment-flow.spec.ts:132:7 › Assessment Flow Tests › should handle form validation consistently 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:46:24 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:46:24 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:46:24 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36857:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:46:24 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=9babf386dbfa902d355c31e62c6f43135e8a55428349c451cdd4b60ce502edde target=36857:0
2025-08-05 14:46:24 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:46:28 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:28 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:28 - [32minfo[39m: [PlaywrightDriverModule] testId: 2657358a77c132dcc4e7-5a019f9f695a881dcfcd
2025-08-05 14:46:28 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '70bb963c-a859-4b6c-bbf9-319c1f3d353b',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '70bb963c-a859-4b6c-bbf9-319c1f3d353b',
  test_result: 'pending',
  automate_session_name: 'Assessment Flow Tests - should handle form validation consistently',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts',
  test_id: '2657358a77c132dcc4e7-5a019f9f695a881dcfcd',
  test_name: 'should handle form validation consistently',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Look for submit buttons\n' +
    `    const submitButtons = page.locator('button[type="submit"], input[type="submit"], button:has-text("Submit"), button:has-text("Next")');\n` +
    '    if ((await submitButtons.count()) > 0) {\n' +
    '      const submitButton = submitButtons.first();\n' +
    '\n' +
    '      // Try to submit without filling required fields\n' +
    '      await submitButton.click();\n' +
    '\n' +
    '      // Wait for potential validation messages\n' +
    '      await page.waitForTimeout(1000);\n' +
    '\n' +
    '      // Check for validation messages\n' +
    `      const errorMessages = page.locator('.error, .validation-error, [role="alert"], .text-red-500, .text-red-600');\n` +
    '\n' +
    '      // If there are validation errors, they should be visible and styled consistently\n' +
    '      if ((await errorMessages.count()) > 0) {\n' +
    '        for (let i = 0; i < Math.min(await errorMessages.count(), 3); i++) {\n' +
    '          const error = errorMessages.nth(i);\n' +
    '          await (0, _test.expect)(error).toBeVisible();\n' +
    '\n' +
    '          // Check error styling\n' +
    '          const color = await error.evaluate(el => {\n' +
    '            return window.getComputedStyle(el).color;\n' +
    '          });\n' +
    '\n' +
    '          // Should have error color styling\n' +
    '          (0, _test.expect)(color).toMatch(/rgb\\(239, 68, 68\\)|rgb\\(220, 38, 38\\)|red/);\n' +
    '        }\n' +
    '      }\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:46:24.480Z',
  test_scope: 'Assessment Flow Tests - should handle form validation consistently',
  test_scopes: [ 'Assessment Flow Tests' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form validation consistently'
}
2025-08-05 14:46:28 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Assessment Flow Tests › should maintain consistent loading states" classname="assessment-flow.spec.ts" time="0.042">
<failure message="assessment-flow.spec.ts:166:7 should maintain consistent loading states" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › assessment-flow.spec.ts:166:7 › Assessment Flow Tests › should maintain consistent loading states 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:46:24 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:46:24 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:46:24 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36858:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:46:24 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=e78f7da692fde5afc682ab78e6b3e847af83d43dd15ca0379bff2e7cd0e6fa40 target=36858:0
2025-08-05 14:46:24 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:46:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:29 - [32minfo[39m: [PlaywrightDriverModule] testId: 2657358a77c132dcc4e7-3f978a0143dc3e44a09b
2025-08-05 14:46:29 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'c796b60d-0394-460a-9627-99c774a8fa4b',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'c796b60d-0394-460a-9627-99c774a8fa4b',
  test_result: 'pending',
  automate_session_name: 'Assessment Flow Tests - should maintain consistent loading states',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts',
  test_id: '2657358a77c132dcc4e7-3f978a0143dc3e44a09b',
  test_name: 'should maintain consistent loading states',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Look for loading indicators\n' +
    `    const loadingIndicators = page.locator('.loading, .spinner, [aria-busy="true"], .animate-spin');\n` +
    '    if ((await loadingIndicators.count()) > 0) {\n' +
    '      for (let i = 0; i < Math.min(await loadingIndicators.count(), 3); i++) {\n' +
    '        const loader = loadingIndicators.nth(i);\n' +
    '\n' +
    '        // Check loading indicator is visible\n' +
    '        await (0, _test.expect)(loader).toBeVisible();\n' +
    '\n' +
    '        // Check it has proper styling\n' +
    '        const styles = await loader.evaluate(el => {\n' +
    '          const computed = window.getComputedStyle(el);\n' +
    '          return {\n' +
    '            display: computed.display,\n' +
    '            visibility: computed.visibility\n' +
    '          };\n' +
    '        });\n' +
    "        (0, _test.expect)(styles.display).not.toBe('none');\n" +
    "        (0, _test.expect)(styles.visibility).not.toBe('hidden');\n" +
    '      }\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:46:24.791Z',
  test_scope: 'Assessment Flow Tests - should maintain consistent loading states',
  test_scopes: [ 'Assessment Flow Tests' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent loading states'
}
2025-08-05 14:46:29 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Assessment Flow Tests › should handle navigation consistently" classname="assessment-flow.spec.ts" time="0.049">
<failure message="assessment-flow.spec.ts:192:7 should handle navigation consistently" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › assessment-flow.spec.ts:192:7 › Assessment Flow Tests › should handle navigation consistently 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:46:25 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:46:25 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:46:25 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36862:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:46:25 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=ff9fd0658fa00961269dcd8d4b29b0524242b164b5f1c47a4010b5771e8a422f target=36862:0
2025-08-05 14:46:25 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:46:30 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:30 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:30 - [32minfo[39m: [PlaywrightDriverModule] testId: 2657358a77c132dcc4e7-306502068d603bc9b852
2025-08-05 14:46:30 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'b42395d3-e142-4b81-96c1-cb1f8f05bd69',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'b42395d3-e142-4b81-96c1-cb1f8f05bd69',
  test_result: 'pending',
  automate_session_name: 'Assessment Flow Tests - should handle navigation consistently',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts',
  test_id: '2657358a77c132dcc4e7-306502068d603bc9b852',
  test_name: 'should handle navigation consistently',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Test navigation buttons/links\n' +
    `    const navButtons = page.locator('a, button, [role="link"]').filter({\n` +
    '      hasText: /back|next|previous|continue/i\n' +
    '    });\n' +
    '    for (let i = 0; i < Math.min(await navButtons.count(), 3); i++) {\n' +
    '      const navButton = navButtons.nth(i);\n' +
    '\n' +
    '      // Check navigation element is visible and clickable\n' +
    '      await (0, _test.expect)(navButton).toBeVisible();\n' +
    '      const styles = await navButton.evaluate(el => {\n' +
    '        const computed = window.getComputedStyle(el);\n' +
    '        return {\n' +
    '          cursor: computed.cursor,\n' +
    '          pointerEvents: computed.pointerEvents\n' +
    '        };\n' +
    '      });\n' +
    '\n' +
    '      // Should be clickable\n' +
    "      (0, _test.expect)(['pointer', 'default']).toContain(styles.cursor);\n" +
    "      (0, _test.expect)(styles.pointerEvents).not.toBe('none');\n" +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:46:25.658Z',
  test_scope: 'Assessment Flow Tests - should handle navigation consistently',
  test_scopes: [ 'Assessment Flow Tests' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle navigation consistently'
}
2025-08-05 14:46:30 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="browserstack-connection.spec.ts" timestamp="2025-08-05T18:43:37.374Z" hostname="-latest:OSX Ventura-browserstack" tests="2" failures="2" skipped="0" time="0.138" errors="0">
<testcase name="BrowserStack Connection Test › should connect to BrowserStack and load the homepage" classname="browserstack-connection.spec.ts" time="0.039">
<failure message="browserstack-connection.spec.ts:4:7 should connect to BrowserStack and load the homepage" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › browserstack-connection.spec.ts:4:7 › BrowserStack Connection Test › should connect to BrowserStack and load the homepage 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:46:33 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:46:33 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:46:33 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36871:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:46:33 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=b5d2bec11c3cd898d1962193c52ff52231e69dde2676cf924e16216394408cd3 target=36871:0
2025-08-05 14:46:33 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:46:38 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:38 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:38 - [32minfo[39m: [PlaywrightDriverModule] testId: d09c4f4bbc136c469c4b-36cd5ff3b510689d69f8
2025-08-05 14:46:38 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '5f1911ce-6954-4ac2-b15b-81b68dbfe710',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '5f1911ce-6954-4ac2-b15b-81b68dbfe710',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Connection Test - should connect to BrowserStack and load the homepage',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-connection.spec.ts',
  test_id: 'd09c4f4bbc136c469c4b-36cd5ff3b510689d69f8',
  test_name: 'should connect to BrowserStack and load the homepage',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-connection.spec.ts:4',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    var _page$viewportSize, _page$viewportSize2;\n' +
    '    // Navigate to the homepage\n' +
    "    await page.goto('/');\n" +
    '\n' +
    '    // Wait for the page to load\n' +
    "    await page.waitForLoadState('networkidle');\n" +
    '\n' +
    '    // Check that the page loaded successfully\n' +
    '    const title = await page.title();\n' +
    '    (0, _test.expect)(title).toBeTruthy();\n' +
    '\n' +
    '    // Take a screenshot for verification\n' +
    '    await page.screenshot({\n' +
    "      path: 'browserstack-connection-test.png'\n" +
    '    });\n' +
    '\n' +
    '    // Check that the page has content\n' +
    "    const bodyText = await page.textContent('body');\n" +
    '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
    "    console.log('✅ BrowserStack connection successful!');\n" +
    '    console.log(`📄 Page title: ${title}`);\n' +
    '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:46:33.688Z',
  test_scope: 'BrowserStack Connection Test - should connect to BrowserStack and load the homepage',
  test_scopes: [ 'BrowserStack Connection Test' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should connect to BrowserStack and load the homepage'
}
2025-08-05 14:46:38 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="BrowserStack Connection Test › should display consistent branding colors" classname="browserstack-connection.spec.ts" time="0.099">
<failure message="browserstack-connection.spec.ts:27:7 should display consistent branding colors" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › browserstack-connection.spec.ts:27:7 › BrowserStack Connection Test › should display consistent branding colors 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:46:34 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:46:34 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:46:34 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36872:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:46:34 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=9de7f5f129bbc62e52f9cdda6031a5f8bf73369330630b061231d48cd4c21038 target=36872:0
2025-08-05 14:46:34 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:46:38 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:38 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:38 - [32minfo[39m: [PlaywrightDriverModule] testId: d09c4f4bbc136c469c4b-48dc25266d10a0d8ebae
2025-08-05 14:46:38 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'fbb242b3-0324-475f-a8f8-ab773ee92acb',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'fbb242b3-0324-475f-a8f8-ab773ee92acb',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Connection Test - should display consistent branding colors',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-connection.spec.ts',
  test_id: 'd09c4f4bbc136c469c4b-48dc25266d10a0d8ebae',
  test_name: 'should display consistent branding colors',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-connection.spec.ts:27',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    "    await page.goto('/');\n" +
    '\n' +
    '    // Check for any elements with Gutcheck brand colors\n' +
    `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
    '    if ((await gutcheckElements.count()) > 0) {\n' +
    '      console.log(`🎨 Found ${await gutcheckElements.count()} Gutcheck branded elements`);\n' +
    '\n' +
    '      // Check the first branded element\n' +
    '      const firstElement = gutcheckElements.first();\n' +
    '      const backgroundColor = await firstElement.evaluate(el => {\n' +
    '        return window.getComputedStyle(el).backgroundColor;\n' +
    '      });\n' +
    '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
    '    } else {\n' +
    "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:46:34.323Z',
  test_scope: 'BrowserStack Connection Test - should display consistent branding colors',
  test_scopes: [ 'BrowserStack Connection Test' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should display consistent branding colors'
}
2025-08-05 14:46:38 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="browserstack-public.spec.ts" timestamp="2025-08-05T18:43:37.374Z" hostname="-latest:OSX Ventura-browserstack" tests="2" failures="2" skipped="0" time="0.234" errors="0">
<testcase name="BrowserStack Public URL Test › should connect to BrowserStack and load a public website" classname="browserstack-public.spec.ts" time="0.05">
<failure message="browserstack-public.spec.ts:4:7 should connect to BrowserStack and load a public website" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › browserstack-public.spec.ts:4:7 › BrowserStack Public URL Test › should connect to BrowserStack and load a public website 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:46:35 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:46:35 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:46:35 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36879:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:46:35 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=e8fac8b4025954b83ffc6e72799cdf279874681ce96ac6abd1a76e8535b523a9 target=36879:0
2025-08-05 14:46:35 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:46:39 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:39 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:39 - [32minfo[39m: [PlaywrightDriverModule] testId: ebf48cb40e267d4d2a11-0673cb907cafab8daa54
2025-08-05 14:46:39 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'a5e80fcc-b587-450c-8c51-3b94848377e0',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'a5e80fcc-b587-450c-8c51-3b94848377e0',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Public URL Test - should connect to BrowserStack and load a public website',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-public.spec.ts',
  test_id: 'ebf48cb40e267d4d2a11-0673cb907cafab8daa54',
  test_name: 'should connect to BrowserStack and load a public website',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-public.spec.ts:4',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    var _page$viewportSize, _page$viewportSize2;\n' +
    '    // Navigate to a public website instead of localhost\n' +
    "    await page.goto('https://example.com');\n" +
    '\n' +
    '    // Wait for the page to load\n' +
    "    await page.waitForLoadState('networkidle');\n" +
    '\n' +
    '    // Check that the page loaded successfully\n' +
    '    const title = await page.title();\n' +
    '    (0, _test.expect)(title).toBeTruthy();\n' +
    '\n' +
    '    // Take a screenshot for verification\n' +
    '    await page.screenshot({\n' +
    "      path: 'browserstack-public-test.png'\n" +
    '    });\n' +
    '\n' +
    '    // Check that the page has content\n' +
    "    const bodyText = await page.textContent('body');\n" +
    '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
    "    console.log('✅ BrowserStack connection successful!');\n" +
    '    console.log(`📄 Page title: ${title}`);\n' +
    '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
    '    console.log(`🌐 URL: ${page.url()}`);\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:46:35.153Z',
  test_scope: 'BrowserStack Public URL Test - should connect to BrowserStack and load a public website',
  test_scopes: [ 'BrowserStack Public URL Test' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should connect to BrowserStack and load a public website'
}
2025-08-05 14:46:39 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="BrowserStack Public URL Test › should verify browser capabilities" classname="browserstack-public.spec.ts" time="0.184">
<failure message="browserstack-public.spec.ts:28:7 should verify browser capabilities" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › browserstack-public.spec.ts:28:7 › BrowserStack Public URL Test › should verify browser capabilities 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:46:43 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:46:43 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:46:43 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36898:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:46:43 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=6dffffe9a8f88c193a52fa712b21b002e6770ab29b942a5db9b7cbaab2bb7bdc target=36898:0
2025-08-05 14:46:43 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:46:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:48 - [32minfo[39m: [PlaywrightDriverModule] testId: ebf48cb40e267d4d2a11-b80176b79a6c55ee8c6f
2025-08-05 14:46:48 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'fbe6a98f-c6a4-4bdb-94d6-41ecab710e27',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'fbe6a98f-c6a4-4bdb-94d6-41ecab710e27',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Public URL Test - should verify browser capabilities',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-public.spec.ts',
  test_id: 'ebf48cb40e267d4d2a11-b80176b79a6c55ee8c6f',
  test_name: 'should verify browser capabilities',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-public.spec.ts:28',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    "    await page.goto('https://example.com');\n" +
    '\n' +
    '    // Get browser information\n' +
    '    const userAgent = await page.evaluate(() => navigator.userAgent);\n' +
    '    const viewport = page.viewportSize();\n' +
    '    console.log(`🔍 User Agent: ${userAgent}`);\n' +
    '    console.log(`📐 Viewport: ${viewport === null || viewport === void 0 ? void 0 : viewport.width}x${viewport === null || viewport === void 0 ? void 0 : viewport.height}`);\n' +
    '\n' +
    "    // Verify we're running in a real browser environment\n" +
    "    (0, _test.expect)(userAgent).toContain('Chrome');\n" +
    '    (0, _test.expect)(viewport).toBeTruthy();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:46:43.697Z',
  test_scope: 'BrowserStack Public URL Test - should verify browser capabilities',
  test_scopes: [ 'BrowserStack Public URL Test' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should verify browser capabilities'
}
2025-08-05 14:46:48 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="browserstack-simple.spec.ts" timestamp="2025-08-05T18:43:37.374Z" hostname="-latest:OSX Ventura-browserstack" tests="3" failures="3" skipped="0" time="0.123" errors="0">
<testcase name="BrowserStack Simple Tests › should load homepage successfully" classname="browserstack-simple.spec.ts" time="0.045">
<failure message="browserstack-simple.spec.ts:4:7 should load homepage successfully" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › browserstack-simple.spec.ts:4:7 › BrowserStack Simple Tests › should load homepage successfully 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:46:43 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:46:43 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:46:43 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36899:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:46:43 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=af2060acdacec268594ebbcaa8f458d1a5bc6a8725059877cab464dea64ffdc4 target=36899:0
2025-08-05 14:46:43 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:46:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:48 - [32minfo[39m: [PlaywrightDriverModule] testId: 97c431d5d3d14e7f8260-19db295d24437a505bde
2025-08-05 14:46:48 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '73f445e7-7afc-45ca-afe1-6d3a4b07dacd',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '73f445e7-7afc-45ca-afe1-6d3a4b07dacd',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Simple Tests - should load homepage successfully',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-simple.spec.ts',
  test_id: '97c431d5d3d14e7f8260-19db295d24437a505bde',
  test_name: 'should load homepage successfully',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-simple.spec.ts:4',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    var _page$viewportSize, _page$viewportSize2;\n' +
    "    await page.goto('/');\n" +
    "    await page.waitForLoadState('networkidle');\n" +
    '\n' +
    '    // Basic page load verification\n' +
    '    const title = await page.title();\n' +
    '    (0, _test.expect)(title).toBeTruthy();\n' +
    '\n' +
    '    // Check if page has content\n' +
    "    const bodyText = await page.textContent('body');\n" +
    '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
    '\n' +
    '    // Take a screenshot for visual verification\n' +
    '    await page.screenshot({\n' +
    "      path: 'browserstack-homepage.png'\n" +
    '    });\n' +
    '    console.log(`✅ Homepage loaded successfully`);\n' +
    '    console.log(`📄 Page title: ${title}`);\n' +
    '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:46:43.868Z',
  test_scope: 'BrowserStack Simple Tests - should load homepage successfully',
  test_scopes: [ 'BrowserStack Simple Tests' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
}
2025-08-05 14:46:48 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="BrowserStack Simple Tests › should navigate to assessment page" classname="browserstack-simple.spec.ts" time="0.042">
<failure message="browserstack-simple.spec.ts:24:7 should navigate to assessment page" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › browserstack-simple.spec.ts:24:7 › BrowserStack Simple Tests › should navigate to assessment page 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:46:44 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:46:44 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:46:44 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36903:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:46:44 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=75366a64fc41170bc4eab606ebfd1b3a84e2362e2ac439accf530cf6e261b919 target=36903:0
2025-08-05 14:46:44 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:46:49 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:49 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:49 - [32minfo[39m: [PlaywrightDriverModule] testId: 97c431d5d3d14e7f8260-5d5e76173723f459ae27
2025-08-05 14:46:49 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '1c6aa1c8-d67b-4ef4-a2ed-c872d1934a7b',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '1c6aa1c8-d67b-4ef4-a2ed-c872d1934a7b',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Simple Tests - should navigate to assessment page',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-simple.spec.ts',
  test_id: '97c431d5d3d14e7f8260-5d5e76173723f459ae27',
  test_name: 'should navigate to assessment page',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-simple.spec.ts:24',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    "    await page.goto('/assessment');\n" +
    "    await page.waitForLoadState('networkidle');\n" +
    '\n' +
    '    // Check if assessment page loads\n' +
    '    const title = await page.title();\n' +
    '    (0, _test.expect)(title).toBeTruthy();\n' +
    '\n' +
    '    // Look for assessment-specific content\n' +
    "    const assessmentContent = await page.textContent('body');\n" +
    '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
    '    await page.screenshot({\n' +
    "      path: 'browserstack-assessment.png'\n" +
    '    });\n' +
    '    console.log(`✅ Assessment page loaded successfully`);\n' +
    '    console.log(`📄 Page title: ${title}`);\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:46:44.934Z',
  test_scope: 'BrowserStack Simple Tests - should navigate to assessment page',
  test_scopes: [ 'BrowserStack Simple Tests' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
}
2025-08-05 14:46:49 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="BrowserStack Simple Tests › should display consistent branding" classname="browserstack-simple.spec.ts" time="0.036">
<failure message="browserstack-simple.spec.ts:42:7 should display consistent branding" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › browserstack-simple.spec.ts:42:7 › BrowserStack Simple Tests › should display consistent branding 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:46:52 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:46:52 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:46:52 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36929:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:46:52 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=6597864b81645758b1df393039f217ed7f13ec47f03fa307f75529853be92888 target=36929:0
2025-08-05 14:46:52 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:46:56 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:56 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:56 - [32minfo[39m: [PlaywrightDriverModule] testId: 97c431d5d3d14e7f8260-178ea707991413bfc66f
2025-08-05 14:46:56 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'a649f276-7ba7-4fc4-85ba-ad71b4208579',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'a649f276-7ba7-4fc4-85ba-ad71b4208579',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Simple Tests - should display consistent branding',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-simple.spec.ts',
  test_id: '97c431d5d3d14e7f8260-178ea707991413bfc66f',
  test_name: 'should display consistent branding',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-simple.spec.ts:42',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    "    await page.goto('/');\n" +
    '\n' +
    '    // Check for Gutcheck branding elements\n' +
    `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
    '    const elementCount = await gutcheckElements.count();\n' +
    '    if (elementCount > 0) {\n' +
    '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
    '\n' +
    '      // Check the first branded element\n' +
    '      const firstElement = gutcheckElements.first();\n' +
    '      const backgroundColor = await firstElement.evaluate(el => {\n' +
    '        return window.getComputedStyle(el).backgroundColor;\n' +
    '      });\n' +
    '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
    '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
    '    } else {\n' +
    "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
    '    }\n' +
    '    await page.screenshot({\n' +
    "      path: 'browserstack-branding.png'\n" +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:46:52.370Z',
  test_scope: 'BrowserStack Simple Tests - should display consistent branding',
  test_scopes: [ 'BrowserStack Simple Tests' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
}
2025-08-05 14:46:56 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="browserstack-traditional.spec.ts" timestamp="2025-08-05T18:43:37.374Z" hostname="-latest:OSX Ventura-browserstack" tests="3" failures="3" skipped="0" time="0.15" errors="0">
<testcase name="BrowserStack Traditional Tests › should load homepage successfully" classname="browserstack-traditional.spec.ts" time="0.051">
<failure message="browserstack-traditional.spec.ts:4:7 should load homepage successfully" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › browserstack-traditional.spec.ts:4:7 › BrowserStack Traditional Tests › should load homepage successfully 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:46:52 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:46:52 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:46:52 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36930:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:46:52 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=b737522b51fd6b90ebdcebc49544fcc1317a2251e005cb89e0417b5eb4e08e37 target=36930:0
2025-08-05 14:46:52 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:46:56 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:56 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:56 - [32minfo[39m: [PlaywrightDriverModule] testId: 5341f8408f38eeb41a40-784e612c198fdb24d942
2025-08-05 14:46:56 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '53e4dd54-31aa-4e90-a59c-13e7f8041dbc',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '53e4dd54-31aa-4e90-a59c-13e7f8041dbc',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Traditional Tests - should load homepage successfully',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-traditional.spec.ts',
  test_id: '5341f8408f38eeb41a40-784e612c198fdb24d942',
  test_name: 'should load homepage successfully',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-traditional.spec.ts:4',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    var _page$viewportSize, _page$viewportSize2;\n' +
    "    await page.goto('/');\n" +
    "    await page.waitForLoadState('networkidle');\n" +
    '\n' +
    '    // Basic page load verification\n' +
    '    const title = await page.title();\n' +
    '    (0, _test.expect)(title).toBeTruthy();\n' +
    '\n' +
    '    // Check if page has content\n' +
    "    const bodyText = await page.textContent('body');\n" +
    '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
    '\n' +
    '    // Take a screenshot for visual verification\n' +
    '    await page.screenshot({\n' +
    "      path: 'browserstack-homepage.png'\n" +
    '    });\n' +
    '    console.log(`✅ Homepage loaded successfully`);\n' +
    '    console.log(`📄 Page title: ${title}`);\n' +
    '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:46:52.365Z',
  test_scope: 'BrowserStack Traditional Tests - should load homepage successfully',
  test_scopes: [ 'BrowserStack Traditional Tests' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should load homepage successfully'
}
2025-08-05 14:46:56 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="BrowserStack Traditional Tests › should navigate to assessment page" classname="browserstack-traditional.spec.ts" time="0.036">
<failure message="browserstack-traditional.spec.ts:24:7 should navigate to assessment page" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › browserstack-traditional.spec.ts:24:7 › BrowserStack Traditional Tests › should navigate to assessment page 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:46:53 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:46:53 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:46:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36936:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:46:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=d7dbd743bebea0a7a3ef195ce976740dd478c010ed45453ac9344a205b4fab04 target=36936:0
2025-08-05 14:46:53 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:46:57 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:57 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:46:57 - [32minfo[39m: [PlaywrightDriverModule] testId: 5341f8408f38eeb41a40-31dc6dbbc26b38e33105
2025-08-05 14:46:57 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '10c7e508-e077-4d64-b061-27b8b94c3bfd',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '10c7e508-e077-4d64-b061-27b8b94c3bfd',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Traditional Tests - should navigate to assessment page',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-traditional.spec.ts',
  test_id: '5341f8408f38eeb41a40-31dc6dbbc26b38e33105',
  test_name: 'should navigate to assessment page',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-traditional.spec.ts:24',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    "    await page.goto('/assessment');\n" +
    "    await page.waitForLoadState('networkidle');\n" +
    '\n' +
    '    // Check if assessment page loads\n' +
    '    const title = await page.title();\n' +
    '    (0, _test.expect)(title).toBeTruthy();\n' +
    '\n' +
    '    // Look for assessment-specific content\n' +
    "    const assessmentContent = await page.textContent('body');\n" +
    '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
    '    await page.screenshot({\n' +
    "      path: 'browserstack-assessment.png'\n" +
    '    });\n' +
    '    console.log(`✅ Assessment page loaded successfully`);\n' +
    '    console.log(`📄 Page title: ${title}`);\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:46:53.025Z',
  test_scope: 'BrowserStack Traditional Tests - should navigate to assessment page',
  test_scopes: [ 'BrowserStack Traditional Tests' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should navigate to assessment page'
}
2025-08-05 14:46:57 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="BrowserStack Traditional Tests › should display consistent branding" classname="browserstack-traditional.spec.ts" time="0.063">
<failure message="browserstack-traditional.spec.ts:42:7 should display consistent branding" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › browserstack-traditional.spec.ts:42:7 › BrowserStack Traditional Tests › should display consistent branding 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:47:00 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:47:00 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:47:00 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36950:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:47:00 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=d0504d9016f23c93575f1d30a1dfada4b558c15f602dd5f1e33cc5ef602ec93f target=36950:0
2025-08-05 14:47:00 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:47:05 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:05 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:05 - [32minfo[39m: [PlaywrightDriverModule] testId: 5341f8408f38eeb41a40-7f6c2b49a4e714d6a901
2025-08-05 14:47:05 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '14c411ad-e322-48a5-a7da-9bd59c1a5d75',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '14c411ad-e322-48a5-a7da-9bd59c1a5d75',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Traditional Tests - should display consistent branding',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-traditional.spec.ts',
  test_id: '5341f8408f38eeb41a40-7f6c2b49a4e714d6a901',
  test_name: 'should display consistent branding',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-traditional.spec.ts:42',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    "    await page.goto('/');\n" +
    '\n' +
    '    // Check for Gutcheck branding elements\n' +
    `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
    '    const elementCount = await gutcheckElements.count();\n' +
    '    if (elementCount > 0) {\n' +
    '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
    '\n' +
    '      // Check the first branded element\n' +
    '      const firstElement = gutcheckElements.first();\n' +
    '      const backgroundColor = await firstElement.evaluate(el => {\n' +
    '        return window.getComputedStyle(el).backgroundColor;\n' +
    '      });\n' +
    '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
    '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
    '    } else {\n' +
    "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
    '    }\n' +
    '    await page.screenshot({\n' +
    "      path: 'browserstack-branding.png'\n" +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:47:00.554Z',
  test_scope: 'BrowserStack Traditional Tests - should display consistent branding',
  test_scopes: [ 'BrowserStack Traditional Tests' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should display consistent branding'
}
2025-08-05 14:47:05 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="visual-consistency.spec.ts" timestamp="2025-08-05T18:43:37.374Z" hostname="-latest:OSX Ventura-browserstack" tests="9" failures="9" skipped="0" time="0.547" errors="0">
<testcase name="Visual Consistency Tests › should display consistent colors across browsers" classname="visual-consistency.spec.ts" time="0.075">
<failure message="visual-consistency.spec.ts:9:7 should display consistent colors across browsers" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › visual-consistency.spec.ts:9:7 › Visual Consistency Tests › should display consistent colors across browsers 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:47:00 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:47:00 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:47:00 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36951:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:47:00 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=03b87e50fb4e14167ec389d2c3f33ac0e302fd72e0601ff05527c73a32fbf9fa target=36951:0
2025-08-05 14:47:00 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:47:05 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:05 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:05 - [32minfo[39m: [PlaywrightDriverModule] testId: 2645056029e91a3a60a4-3bb1b12f561d4ff01b68
2025-08-05 14:47:05 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '5a580d5a-2254-48ac-95d9-39f5a440f8f6',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '5a580d5a-2254-48ac-95d9-39f5a440f8f6',
  test_result: 'pending',
  automate_session_name: 'Visual Consistency Tests - should display consistent colors across browsers',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts',
  test_id: '2645056029e91a3a60a4-3bb1b12f561d4ff01b68',
  test_name: 'should display consistent colors across browsers',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:9',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Test Gutcheck brand colors\n' +
    '    const colorTests = [{\n' +
    "      selector: '.bg-gutcheck-deep-navy',\n" +
    "      expectedColor: 'rgb(10, 31, 68)'\n" +
    '    }, {\n' +
    "      selector: '.bg-gutcheck-electric-blue',\n" +
    "      expectedColor: 'rgb(20, 122, 255)'\n" +
    '    }, {\n' +
    "      selector: '.bg-gutcheck-vibrant-teal',\n" +
    "      expectedColor: 'rgb(25, 194, 160)'\n" +
    '    }, {\n' +
    "      selector: '.bg-gutcheck-bright-orange',\n" +
    "      expectedColor: 'rgb(255, 107, 0)'\n" +
    '    }, {\n' +
    "      selector: '.bg-gutcheck-bright-yellow',\n" +
    "      expectedColor: 'rgb(255, 199, 0)'\n" +
    '    }];\n' +
    '    for (const test of colorTests) {\n' +
    '      const element = page.locator(test.selector).first();\n' +
    '      if ((await element.count()) > 0) {\n' +
    '        const backgroundColor = await element.evaluate(el => {\n' +
    '          return window.getComputedStyle(el).backgroundColor;\n' +
    '        });\n' +
    '        (0, _test.expect)(backgroundColor).toBe(test.expectedColor);\n' +
    '      }\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:47:00.551Z',
  test_scope: 'Visual Consistency Tests - should display consistent colors across browsers',
  test_scopes: [ 'Visual Consistency Tests' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should display consistent colors across browsers'
}
2025-08-05 14:47:05 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Visual Consistency Tests › should maintain consistent typography" classname="visual-consistency.spec.ts" time="0.146">
<failure message="visual-consistency.spec.ts:30:7 should maintain consistent typography" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › visual-consistency.spec.ts:30:7 › Visual Consistency Tests › should maintain consistent typography 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:47:01 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:47:01 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:47:02 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36954:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:47:02 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=54464531eb3a7f7aaea7513491844e0efdfe4d16695dba9da807154d40253a3a target=36954:0
2025-08-05 14:47:02 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:47:06 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:06 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:06 - [32minfo[39m: [PlaywrightDriverModule] testId: 2645056029e91a3a60a4-87a359730b813f75d221
2025-08-05 14:47:06 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '53961cc9-ff53-497f-b93a-db5b0bcd178e',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '53961cc9-ff53-497f-b93a-db5b0bcd178e',
  test_result: 'pending',
  automate_session_name: 'Visual Consistency Tests - should maintain consistent typography',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts',
  test_id: '2645056029e91a3a60a4-87a359730b813f75d221',
  test_name: 'should maintain consistent typography',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:30',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Test font family consistency\n' +
    "    const textElements = page.locator('h1, h2, h3, p, button, input, textarea');\n" +
    '    for (let i = 0; i < Math.min(await textElements.count(), 10); i++) {\n' +
    '      const element = textElements.nth(i);\n' +
    '      const fontFamily = await element.evaluate(el => {\n' +
    '        return window.getComputedStyle(el).fontFamily;\n' +
    '      });\n' +
    '\n' +
    '      // Should use Inter font family or fallback to system fonts\n' +
    '      (0, _test.expect)(fontFamily).toMatch(/Inter|system-ui|sans-serif/);\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:47:01.935Z',
  test_scope: 'Visual Consistency Tests - should maintain consistent typography',
  test_scopes: [ 'Visual Consistency Tests' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain consistent typography'
}
2025-08-05 14:47:06 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Visual Consistency Tests › should have consistent button styling" classname="visual-consistency.spec.ts" time="0.048">
<failure message="visual-consistency.spec.ts:45:7 should have consistent button styling" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › visual-consistency.spec.ts:45:7 › Visual Consistency Tests › should have consistent button styling 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:47:10 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:47:10 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:47:10 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36975:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:47:10 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=cc62a4958e10ecca519c7b3b103450b03324cbb84c92db1bd7856833c0ad4b6a target=36975:0
2025-08-05 14:47:10 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:47:14 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:14 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:14 - [32minfo[39m: [PlaywrightDriverModule] testId: 2645056029e91a3a60a4-60339b8750b298bde85c
2025-08-05 14:47:14 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'ba95549e-a256-4b5d-83a1-9aed7a088dc6',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'ba95549e-a256-4b5d-83a1-9aed7a088dc6',
  test_result: 'pending',
  automate_session_name: 'Visual Consistency Tests - should have consistent button styling',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts',
  test_id: '2645056029e91a3a60a4-60339b8750b298bde85c',
  test_name: 'should have consistent button styling',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:45',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    "    const buttons = page.locator('button');\n" +
    '    for (let i = 0; i < Math.min(await buttons.count(), 5); i++) {\n' +
    '      const button = buttons.nth(i);\n' +
    '\n' +
    '      // Check button has proper styling\n' +
    '      const styles = await button.evaluate(el => {\n' +
    '        const computed = window.getComputedStyle(el);\n' +
    '        return {\n' +
    '          borderRadius: computed.borderRadius,\n' +
    '          padding: computed.padding,\n' +
    '          cursor: computed.cursor\n' +
    '        };\n' +
    '      });\n' +
    "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
    "      (0, _test.expect)(styles.borderRadius).not.toBe('0px');\n" +
    "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:47:10.260Z',
  test_scope: 'Visual Consistency Tests - should have consistent button styling',
  test_scopes: [ 'Visual Consistency Tests' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should have consistent button styling'
}
2025-08-05 14:47:14 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Visual Consistency Tests › should maintain layout consistency on different screen sizes" classname="visual-consistency.spec.ts" time="0.046">
<failure message="visual-consistency.spec.ts:67:7 should maintain layout consistency on different screen sizes" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › visual-consistency.spec.ts:67:7 › Visual Consistency Tests › should maintain layout consistency on different screen sizes 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:47:10 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:47:10 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:47:10 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36976:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:47:10 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=5cd7bd12acba4930f2191b0acacc35e4924024763b55b85a323c10c1e0f3e8d8 target=36976:0
2025-08-05 14:47:10 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:47:14 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:14 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:14 - [32minfo[39m: [PlaywrightDriverModule] testId: 2645056029e91a3a60a4-77abdaff5236e3f84e60
2025-08-05 14:47:14 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '012b706a-638e-4e69-a68a-d280791fbe90',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '012b706a-638e-4e69-a68a-d280791fbe90',
  test_result: 'pending',
  automate_session_name: 'Visual Consistency Tests - should maintain layout consistency on different screen sizes',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts',
  test_id: '2645056029e91a3a60a4-77abdaff5236e3f84e60',
  test_name: 'should maintain layout consistency on different screen sizes',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:67',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    const viewports = [{\n' +
    '      width: 1920,\n' +
    '      height: 1080,\n' +
    "      name: 'Desktop Large'\n" +
    '    }, {\n' +
    '      width: 1366,\n' +
    '      height: 768,\n' +
    "      name: 'Desktop Small'\n" +
    '    }, {\n' +
    '      width: 768,\n' +
    '      height: 1024,\n' +
    "      name: 'Tablet Portrait'\n" +
    '    }, {\n' +
    '      width: 375,\n' +
    '      height: 667,\n' +
    "      name: 'Mobile Portrait'\n" +
    '    }, {\n' +
    '      width: 414,\n' +
    '      height: 896,\n' +
    "      name: 'Mobile Large'\n" +
    '    }];\n' +
    '    for (const viewport of viewports) {\n' +
    '      await page.setViewportSize({\n' +
    '        width: viewport.width,\n' +
    '        height: viewport.height\n' +
    '      });\n' +
    '\n' +
    '      // Wait for layout to stabilize\n' +
    '      await page.waitForTimeout(500);\n' +
    '\n' +
    '      // Check that main content is visible and properly positioned\n' +
    `      const mainContent = page.locator('main, .main, #main, [role="main"]').first();\n` +
    '      if ((await mainContent.count()) > 0) {\n' +
    '        const isVisible = await mainContent.isVisible();\n' +
    '        (0, _test.expect)(isVisible).toBe(true);\n' +
    '\n' +
    "        // Check that content doesn't overflow horizontally\n" +
    '        const overflow = await page.evaluate(() => {\n' +
    '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
    '        });\n' +
    '        (0, _test.expect)(overflow).toBe(true);\n' +
    '      }\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:47:10.275Z',
  test_scope: 'Visual Consistency Tests - should maintain layout consistency on different screen sizes',
  test_scopes: [ 'Visual Consistency Tests' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain layout consistency on different screen sizes'
}
2025-08-05 14:47:14 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Visual Consistency Tests › should handle form elements consistently" classname="visual-consistency.spec.ts" time="0.051">
<failure message="visual-consistency.spec.ts:97:7 should handle form elements consistently" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › visual-consistency.spec.ts:97:7 › Visual Consistency Tests › should handle form elements consistently 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:47:11 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:47:11 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:47:11 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=36983:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:47:11 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=d25d7f080a687a6fc2630fb26a86d0ab2fbfe99278aafb6ba28f61265dc87870 target=36983:0
2025-08-05 14:47:11 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:47:15 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:15 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:15 - [32minfo[39m: [PlaywrightDriverModule] testId: 2645056029e91a3a60a4-71b1d772c9dd202b9521
2025-08-05 14:47:15 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '6386af81-e81e-47ff-bf05-f64f78afd93d',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '6386af81-e81e-47ff-bf05-f64f78afd93d',
  test_result: 'pending',
  automate_session_name: 'Visual Consistency Tests - should handle form elements consistently',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts',
  test_id: '2645056029e91a3a60a4-71b1d772c9dd202b9521',
  test_name: 'should handle form elements consistently',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:97',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Test form input styling\n' +
    "    const inputs = page.locator('input, textarea, select');\n" +
    '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
    '      const input = inputs.nth(i);\n' +
    '      const styles = await input.evaluate(el => {\n' +
    '        const computed = window.getComputedStyle(el);\n' +
    '        return {\n' +
    '          border: computed.border,\n' +
    '          borderRadius: computed.borderRadius,\n' +
    '          padding: computed.padding\n' +
    '        };\n' +
    '      });\n' +
    '\n' +
    '      // Should have consistent border and padding\n' +
    "      (0, _test.expect)(styles.border).not.toBe('none');\n" +
    "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:47:11.179Z',
  test_scope: 'Visual Consistency Tests - should handle form elements consistently',
  test_scopes: [ 'Visual Consistency Tests' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle form elements consistently'
}
2025-08-05 14:47:15 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Visual Consistency Tests › should maintain consistent spacing and alignment" classname="visual-consistency.spec.ts" time="0.047">
<failure message="visual-consistency.spec.ts:119:7 should maintain consistent spacing and alignment" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › visual-consistency.spec.ts:119:7 › Visual Consistency Tests › should maintain consistent spacing and alignment 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:47:18 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:47:18 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:47:18 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=37001:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:47:18 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=b4b28e82712047ca3bebb54ff1959f1cf31ff3d787644738835584ee67eac277 target=37001:0
2025-08-05 14:47:18 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:47:23 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:23 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:23 - [32minfo[39m: [PlaywrightDriverModule] testId: 2645056029e91a3a60a4-d896d5d5bdf7480e5b01
2025-08-05 14:47:23 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '3d9c9aab-f475-4f25-858f-08716a94c362',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '3d9c9aab-f475-4f25-858f-08716a94c362',
  test_result: 'pending',
  automate_session_name: 'Visual Consistency Tests - should maintain consistent spacing and alignment',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts',
  test_id: '2645056029e91a3a60a4-d896d5d5bdf7480e5b01',
  test_name: 'should maintain consistent spacing and alignment',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:119',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Test that elements have consistent spacing\n' +
    "    const containers = page.locator('div, section, article').filter({\n" +
    '      hasText: /./\n' +
    '    });\n' +
    '    for (let i = 0; i < Math.min(await containers.count(), 10); i++) {\n' +
    '      const container = containers.nth(i);\n' +
    '      const styles = await container.evaluate(el => {\n' +
    '        const computed = window.getComputedStyle(el);\n' +
    '        return {\n' +
    '          margin: computed.margin,\n' +
    '          padding: computed.padding,\n' +
    '          display: computed.display\n' +
    '        };\n' +
    '      });\n' +
    '\n' +
    '      // Should have consistent display properties\n' +
    "      (0, _test.expect)(['block', 'flex', 'grid', 'inline-block']).toContain(styles.display);\n" +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:47:18.339Z',
  test_scope: 'Visual Consistency Tests - should maintain consistent spacing and alignment',
  test_scopes: [ 'Visual Consistency Tests' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain consistent spacing and alignment'
}
2025-08-05 14:47:23 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Visual Consistency Tests › should handle dark mode consistently" classname="visual-consistency.spec.ts" time="0.04">
<failure message="visual-consistency.spec.ts:140:7 should handle dark mode consistently" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › visual-consistency.spec.ts:140:7 › Visual Consistency Tests › should handle dark mode consistently 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:47:18 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:47:18 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:47:18 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=37002:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:47:18 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=c8f5e08351bbf49f4c1a983fc2ff4e6a0c02d54c4b787860db2ce0b4009cdc81 target=37002:0
2025-08-05 14:47:18 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:47:22 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:22 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:22 - [32minfo[39m: [PlaywrightDriverModule] testId: 2645056029e91a3a60a4-eb0d2bc5515cbf073080
2025-08-05 14:47:22 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '1726fccb-ee39-4a76-9dac-cd008691e89b',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '1726fccb-ee39-4a76-9dac-cd008691e89b',
  test_result: 'pending',
  automate_session_name: 'Visual Consistency Tests - should handle dark mode consistently',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts',
  test_id: '2645056029e91a3a60a4-eb0d2bc5515cbf073080',
  test_name: 'should handle dark mode consistently',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:140',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Test dark mode colors\n' +
    '    await page.evaluate(() => {\n' +
    '      // Simulate dark mode\n' +
    "      document.documentElement.style.colorScheme = 'dark';\n" +
    "      document.documentElement.classList.add('dark');\n" +
    '    });\n' +
    '    await page.waitForTimeout(100);\n' +
    '\n' +
    '    // Check that dark mode colors are applied\n' +
    '    const bodyColor = await page.evaluate(() => {\n' +
    '      return window.getComputedStyle(document.body).backgroundColor;\n' +
    '    });\n' +
    '\n' +
    '    // Should have dark background in dark mode\n' +
    '    (0, _test.expect)(bodyColor).toMatch(/rgb\\(10, 10, 10\\)|rgba\\(10, 10, 10/);\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:47:18.337Z',
  test_scope: 'Visual Consistency Tests - should handle dark mode consistently',
  test_scopes: [ 'Visual Consistency Tests' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle dark mode consistently'
}
2025-08-05 14:47:22 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Visual Consistency Tests › should maintain accessibility standards" classname="visual-consistency.spec.ts" time="0.045">
<failure message="visual-consistency.spec.ts:159:7 should maintain accessibility standards" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › visual-consistency.spec.ts:159:7 › Visual Consistency Tests › should maintain accessibility standards 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:47:19 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:47:19 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:47:19 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=37005:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:47:19 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=275fe82a193bd7b4066815d37a660170b24b739365cd1908a05dd86a362d70c7 target=37005:0
2025-08-05 14:47:19 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:47:23 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:23 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:23 - [32minfo[39m: [PlaywrightDriverModule] testId: 2645056029e91a3a60a4-b297009eb1ebc30c5e8e
2025-08-05 14:47:23 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'a3e6d83e-1ea4-4f37-9595-736f5b343cc7',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'a3e6d83e-1ea4-4f37-9595-736f5b343cc7',
  test_result: 'pending',
  automate_session_name: 'Visual Consistency Tests - should maintain accessibility standards',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts',
  test_id: '2645056029e91a3a60a4-b297009eb1ebc30c5e8e',
  test_name: 'should maintain accessibility standards',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:159',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Test color contrast\n' +
    "    const textElements = page.locator('h1, h2, h3, p, span, div').filter({\n" +
    '      hasText: /./\n' +
    '    });\n' +
    '    for (let i = 0; i < Math.min(await textElements.count(), 5); i++) {\n' +
    '      const element = textElements.nth(i);\n' +
    '      const contrast = await element.evaluate(el => {\n' +
    '        const style = window.getComputedStyle(el);\n' +
    '        const backgroundColor = style.backgroundColor;\n' +
    '        const color = style.color;\n' +
    '\n' +
    "        // Simple contrast check - in a real test, you'd use a proper contrast calculation\n" +
    '        return {\n' +
    '          backgroundColor,\n' +
    '          color\n' +
    '        };\n' +
    '      });\n' +
    '\n' +
    '      // Should have defined colors\n' +
    "      (0, _test.expect)(contrast.backgroundColor).not.toBe('rgba(0, 0, 0, 0)');\n" +
    "      (0, _test.expect)(contrast.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:47:19.158Z',
  test_scope: 'Visual Consistency Tests - should maintain accessibility standards',
  test_scopes: [ 'Visual Consistency Tests' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should maintain accessibility standards'
}
2025-08-05 14:47:23 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Visual Consistency Tests › should handle images and icons consistently" classname="visual-consistency.spec.ts" time="0.049">
<failure message="visual-consistency.spec.ts:181:7 should handle images and icons consistently" type="FAILURE">
<![CDATA[  [-latest:OSX Ventura-browserstack] › visual-consistency.spec.ts:181:7 › Visual Consistency Tests › should handle images and icons consistently 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:47:26 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:47:26 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:47:26 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=37018:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:47:26 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=8d54152a0136b1293ab965932628d7f3014712736b6b9089d5d1078e03de1287 target=37018:0
2025-08-05 14:47:26 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"OS X","os_version":"Ventura","browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:47:32 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:32 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:32 - [32minfo[39m: [PlaywrightDriverModule] testId: 2645056029e91a3a60a4-770253404379a94b5cd6
2025-08-05 14:47:32 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'ffcc4e6e-dfec-41ab-91b3-4792c12d6478',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'ffcc4e6e-dfec-41ab-91b3-4792c12d6478',
  test_result: 'pending',
  automate_session_name: 'Visual Consistency Tests - should handle images and icons consistently',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts',
  test_id: '2645056029e91a3a60a4-770253404379a94b5cd6',
  test_name: 'should handle images and icons consistently',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/visual-consistency.spec.ts:181',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    "    const images = page.locator('img, svg');\n" +
    '    for (let i = 0; i < Math.min(await images.count(), 5); i++) {\n' +
    '      const image = images.nth(i);\n' +
    '\n' +
    '      // Check that images are properly loaded and visible\n' +
    '      const isVisible = await image.isVisible();\n' +
    '      (0, _test.expect)(isVisible).toBe(true);\n' +
    '\n' +
    '      // Check that images have proper alt text or aria labels\n' +
    "      const altText = await image.getAttribute('alt');\n" +
    "      const ariaLabel = await image.getAttribute('aria-label');\n" +
    '      if (!altText && !ariaLabel) {\n' +
    '        // For decorative images, this might be acceptable\n' +
    "        const role = await image.getAttribute('role');\n" +
    "        (0, _test.expect)(role === 'presentation' || role === 'img').toBe(true);\n" +
    '      }\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:47:26.699Z',
  test_scope: 'Visual Consistency Tests - should handle images and icons consistently',
  test_scopes: [ 'Visual Consistency Tests' ],
  test_rerun_name: ' -latest:OSX Ventura-browserstack visual-consistency.spec.ts Visual Consistency Tests should handle images and icons consistently'
}
2025-08-05 14:47:32 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="assessment-flow.spec.ts" timestamp="2025-08-05T18:43:37.374Z" hostname="-latest:Windows 11-browserstack" tests="7" failures="7" skipped="0" time="0.403" errors="0">
<testcase name="Assessment Flow Tests › should display assessment questions consistently" classname="assessment-flow.spec.ts" time="0.04">
<failure message="assessment-flow.spec.ts:9:7 should display assessment questions consistently" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › assessment-flow.spec.ts:9:7 › Assessment Flow Tests › should display assessment questions consistently 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:47:27 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:47:27 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:47:27 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=37020:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:47:27 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=160fe75c8582449323f575ffc674624761efce1ed0b58e08fc47bdf4dbd5814d target=37020:0
2025-08-05 14:47:27 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:47:35 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:35 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:35 - [32minfo[39m: [PlaywrightDriverModule] testId: 2657358a77c132dcc4e7-92dc0839754152b914a1
2025-08-05 14:47:35 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '5e319620-7115-4670-83e5-aedf692f6b89',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '5e319620-7115-4670-83e5-aedf692f6b89',
  test_result: 'pending',
  automate_session_name: 'Assessment Flow Tests - should display assessment questions consistently',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts',
  test_id: '2657358a77c132dcc4e7-92dc0839754152b914a1',
  test_name: 'should display assessment questions consistently',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:9',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Wait for assessment content to load\n' +
    `    await page.waitForSelector('[data-testid="assessment-question"], .question, h1, h2', {\n` +
    '      timeout: 10000\n' +
    '    });\n' +
    '\n' +
    '    // Check that questions are visible and properly styled\n' +
    `    const questions = page.locator('[data-testid="assessment-question"], .question, h1, h2').filter({\n` +
    '      hasText: /./\n' +
    '    });\n' +
    '    (0, _test.expect)(await questions.count()).toBeGreaterThan(0);\n' +
    '    for (let i = 0; i < Math.min(await questions.count(), 3); i++) {\n' +
    '      const question = questions.nth(i);\n' +
    '\n' +
    '      // Check visibility\n' +
    '      await (0, _test.expect)(question).toBeVisible();\n' +
    '\n' +
    '      // Check styling\n' +
    '      const styles = await question.evaluate(el => {\n' +
    '        const computed = window.getComputedStyle(el);\n' +
    '        return {\n' +
    '          fontSize: computed.fontSize,\n' +
    '          fontWeight: computed.fontWeight,\n' +
    '          color: computed.color,\n' +
    '          lineHeight: computed.lineHeight\n' +
    '        };\n' +
    '      });\n' +
    '\n' +
    '      // Should have readable text styling\n' +
    '      (0, _test.expect)(parseFloat(styles.fontSize)).toBeGreaterThan(12);\n' +
    "      (0, _test.expect)(styles.color).not.toBe('rgba(0, 0, 0, 0)');\n" +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:47:27.232Z',
  test_scope: 'Assessment Flow Tests - should display assessment questions consistently',
  test_scopes: [ 'Assessment Flow Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should display assessment questions consistently'
}
2025-08-05 14:47:35 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Assessment Flow Tests › should handle form inputs consistently across browsers" classname="assessment-flow.spec.ts" time="0.038">
<failure message="assessment-flow.spec.ts:41:7 should handle form inputs consistently across browsers" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › assessment-flow.spec.ts:41:7 › Assessment Flow Tests › should handle form inputs consistently across browsers 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:47:27 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:47:27 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:47:27 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=37021:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:47:27 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=7ca08776d0376fe7da8c53d7410f43b8f4da25422cf153ad4fb9da596df972d1 target=37021:0
2025-08-05 14:47:27 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:47:34 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:34 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:34 - [32minfo[39m: [PlaywrightDriverModule] testId: 2657358a77c132dcc4e7-4fa56672cfe692a02a66
2025-08-05 14:47:34 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '94b36669-be9a-423f-b965-ea2de081494b',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '94b36669-be9a-423f-b965-ea2de081494b',
  test_result: 'pending',
  automate_session_name: 'Assessment Flow Tests - should handle form inputs consistently across browsers',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts',
  test_id: '2657358a77c132dcc4e7-4fa56672cfe692a02a66',
  test_name: 'should handle form inputs consistently across browsers',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:41',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Look for form inputs (radio buttons, checkboxes, text inputs)\n' +
    "    const inputs = page.locator('input, textarea, select');\n" +
    '    for (let i = 0; i < Math.min(await inputs.count(), 5); i++) {\n' +
    '      const input = inputs.nth(i);\n' +
    '\n' +
    '      // Check input is visible and interactive\n' +
    '      await (0, _test.expect)(input).toBeVisible();\n' +
    "      const inputType = await input.getAttribute('type');\n" +
    "      if (inputType === 'radio' || inputType === 'checkbox') {\n" +
    '        // Test radio/checkbox functionality\n' +
    '        await input.click();\n' +
    '\n' +
    '        // Verify selection state\n' +
    '        const isChecked = await input.isChecked();\n' +
    '        (0, _test.expect)(isChecked).toBe(true);\n' +
    "      } else if (inputType === 'text' || inputType === 'textarea') {\n" +
    '        // Test text input functionality\n' +
    "        await input.fill('Test input');\n" +
    '        const value = await input.inputValue();\n' +
    "        (0, _test.expect)(value).toBe('Test input');\n" +
    '      }\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:47:27.382Z',
  test_scope: 'Assessment Flow Tests - should handle form inputs consistently across browsers',
  test_scopes: [ 'Assessment Flow Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form inputs consistently across browsers'
}
2025-08-05 14:47:34 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Assessment Flow Tests › should maintain consistent button styling and behavior" classname="assessment-flow.spec.ts" time="0.089">
<failure message="assessment-flow.spec.ts:69:7 should maintain consistent button styling and behavior" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › assessment-flow.spec.ts:69:7 › Assessment Flow Tests › should maintain consistent button styling and behavior 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:47:35 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:47:35 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:47:35 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=37035:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:47:35 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=4e186006e65bdf6fba645ffd31a1eb9b335a6f2c7f79f2749381f1f8076228c5 target=37035:0
2025-08-05 14:47:35 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:47:42 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:42 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:42 - [32minfo[39m: [PlaywrightDriverModule] testId: 2657358a77c132dcc4e7-87515ddde23024075d3f
2025-08-05 14:47:42 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '7eac935b-436e-4909-a0b6-f17739a31b4c',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '7eac935b-436e-4909-a0b6-f17739a31b4c',
  test_result: 'pending',
  automate_session_name: 'Assessment Flow Tests - should maintain consistent button styling and behavior',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts',
  test_id: '2657358a77c132dcc4e7-87515ddde23024075d3f',
  test_name: 'should maintain consistent button styling and behavior',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:69',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    `    const buttons = page.locator('button, [role="button"], input[type="submit"]');\n` +
    '    for (let i = 0; i < Math.min(await buttons.count(), 3); i++) {\n' +
    '      const button = buttons.nth(i);\n' +
    '\n' +
    '      // Check button styling\n' +
    '      const styles = await button.evaluate(el => {\n' +
    '        const computed = window.getComputedStyle(el);\n' +
    '        return {\n' +
    '          backgroundColor: computed.backgroundColor,\n' +
    '          color: computed.color,\n' +
    '          borderRadius: computed.borderRadius,\n' +
    '          padding: computed.padding,\n' +
    '          cursor: computed.cursor\n' +
    '        };\n' +
    '      });\n' +
    '\n' +
    '      // Should have proper button styling\n' +
    "      (0, _test.expect)(styles.cursor).toBe('pointer');\n" +
    "      (0, _test.expect)(styles.padding).not.toBe('0px');\n" +
    '\n' +
    '      // Check button text is readable\n' +
    '      const buttonText = await button.textContent();\n' +
    '      if (buttonText && buttonText.trim()) {\n' +
    '        (0, _test.expect)(buttonText.trim().length).toBeGreaterThan(0);\n' +
    '      }\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:47:35.452Z',
  test_scope: 'Assessment Flow Tests - should maintain consistent button styling and behavior',
  test_scopes: [ 'Assessment Flow Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent button styling and behavior'
}
2025-08-05 14:47:42 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Assessment Flow Tests › should handle responsive design for assessment flow" classname="assessment-flow.spec.ts" time="0.065">
<failure message="assessment-flow.spec.ts:99:7 should handle responsive design for assessment flow" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › assessment-flow.spec.ts:99:7 › Assessment Flow Tests › should handle responsive design for assessment flow 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:47:38 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:47:38 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:47:38 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=37038:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:47:38 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=32624606a8b2a7f71c7a6243c12ec65e4c8e11df001b36a605f44e7cd76bf1f7 target=37038:0
2025-08-05 14:47:38 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:48:05 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:48:05 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:48:05 - [32minfo[39m: [PlaywrightDriverModule] testId: 2657358a77c132dcc4e7-2ea26e95a10b60fcff7d
2025-08-05 14:48:05 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '1bd60f2b-e196-4f88-b346-86dabf6b4a6f',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '1bd60f2b-e196-4f88-b346-86dabf6b4a6f',
  test_result: 'pending',
  automate_session_name: 'Assessment Flow Tests - should handle responsive design for assessment flow',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts',
  test_id: '2657358a77c132dcc4e7-2ea26e95a10b60fcff7d',
  test_name: 'should handle responsive design for assessment flow',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:99',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    const viewports = [{\n' +
    '      width: 375,\n' +
    '      height: 667,\n' +
    "      name: 'Mobile'\n" +
    '    }, {\n' +
    '      width: 768,\n' +
    '      height: 1024,\n' +
    "      name: 'Tablet'\n" +
    '    }, {\n' +
    '      width: 1024,\n' +
    '      height: 768,\n' +
    "      name: 'Desktop'\n" +
    '    }];\n' +
    '    for (const viewport of viewports) {\n' +
    '      await page.setViewportSize({\n' +
    '        width: viewport.width,\n' +
    '        height: viewport.height\n' +
    '      });\n' +
    '      await page.waitForTimeout(500);\n' +
    '\n' +
    '      // Check that assessment content is properly contained\n' +
    `      const container = page.locator('main, .container, .assessment-container, [role="main"]').first();\n` +
    '      if ((await container.count()) > 0) {\n' +
    '        const isVisible = await container.isVisible();\n' +
    '        (0, _test.expect)(isVisible).toBe(true);\n' +
    '\n' +
    '        // Check no horizontal overflow\n' +
    '        const overflow = await page.evaluate(() => {\n' +
    '          return document.documentElement.scrollWidth <= window.innerWidth;\n' +
    '        });\n' +
    '        (0, _test.expect)(overflow).toBe(true);\n' +
    '      }\n' +
    '\n' +
    '      // Check that form elements are still accessible\n' +
    "      const inputs = page.locator('input, textarea, select');\n" +
    '      if ((await inputs.count()) > 0) {\n' +
    '        const firstInput = inputs.first();\n' +
    '        await (0, _test.expect)(firstInput).toBeVisible();\n' +
    '      }\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:47:38.729Z',
  test_scope: 'Assessment Flow Tests - should handle responsive design for assessment flow',
  test_scopes: [ 'Assessment Flow Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle responsive design for assessment flow'
}
2025-08-05 14:48:05 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Assessment Flow Tests › should handle form validation consistently" classname="assessment-flow.spec.ts" time="0.074">
<failure message="assessment-flow.spec.ts:132:7 should handle form validation consistently" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › assessment-flow.spec.ts:132:7 › Assessment Flow Tests › should handle form validation consistently 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:47:40 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:47:40 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:47:40 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=37042:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:47:40 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=6e1dfea2153a1abe13d157fb1177f653fe2a4b74a0a10662a236ce628a835f92 target=37042:0
2025-08-05 14:47:40 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:47:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:53 - [32minfo[39m: [PlaywrightDriverModule] testId: 2657358a77c132dcc4e7-095f0b68739a3aa14938
2025-08-05 14:47:53 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '79471043-64e7-47c9-b6e2-d34241c1bc62',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '79471043-64e7-47c9-b6e2-d34241c1bc62',
  test_result: 'pending',
  automate_session_name: 'Assessment Flow Tests - should handle form validation consistently',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts',
  test_id: '2657358a77c132dcc4e7-095f0b68739a3aa14938',
  test_name: 'should handle form validation consistently',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:132',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Look for submit buttons\n' +
    `    const submitButtons = page.locator('button[type="submit"], input[type="submit"], button:has-text("Submit"), button:has-text("Next")');\n` +
    '    if ((await submitButtons.count()) > 0) {\n' +
    '      const submitButton = submitButtons.first();\n' +
    '\n' +
    '      // Try to submit without filling required fields\n' +
    '      await submitButton.click();\n' +
    '\n' +
    '      // Wait for potential validation messages\n' +
    '      await page.waitForTimeout(1000);\n' +
    '\n' +
    '      // Check for validation messages\n' +
    `      const errorMessages = page.locator('.error, .validation-error, [role="alert"], .text-red-500, .text-red-600');\n` +
    '\n' +
    '      // If there are validation errors, they should be visible and styled consistently\n' +
    '      if ((await errorMessages.count()) > 0) {\n' +
    '        for (let i = 0; i < Math.min(await errorMessages.count(), 3); i++) {\n' +
    '          const error = errorMessages.nth(i);\n' +
    '          await (0, _test.expect)(error).toBeVisible();\n' +
    '\n' +
    '          // Check error styling\n' +
    '          const color = await error.evaluate(el => {\n' +
    '            return window.getComputedStyle(el).color;\n' +
    '          });\n' +
    '\n' +
    '          // Should have error color styling\n' +
    '          (0, _test.expect)(color).toMatch(/rgb\\(239, 68, 68\\)|rgb\\(220, 38, 38\\)|red/);\n' +
    '        }\n' +
    '      }\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:47:40.690Z',
  test_scope: 'Assessment Flow Tests - should handle form validation consistently',
  test_scopes: [ 'Assessment Flow Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle form validation consistently'
}
2025-08-05 14:47:53 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Assessment Flow Tests › should maintain consistent loading states" classname="assessment-flow.spec.ts" time="0.038">
<failure message="assessment-flow.spec.ts:166:7 should maintain consistent loading states" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › assessment-flow.spec.ts:166:7 › Assessment Flow Tests › should maintain consistent loading states 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:47:46 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:47:46 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:47:46 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=37071:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:47:46 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=d8b0002f42b4e62c457e8f4b37b71e34b0cb12daba5234ef19acae424a092207 target=37071:0
2025-08-05 14:47:46 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:47:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:47:53 - [32minfo[39m: [PlaywrightDriverModule] testId: 2657358a77c132dcc4e7-c132416c6f4f787eddc8
2025-08-05 14:47:53 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'cd1ed1f3-223e-4728-9eee-05e340a4900c',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'cd1ed1f3-223e-4728-9eee-05e340a4900c',
  test_result: 'pending',
  automate_session_name: 'Assessment Flow Tests - should maintain consistent loading states',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts',
  test_id: '2657358a77c132dcc4e7-c132416c6f4f787eddc8',
  test_name: 'should maintain consistent loading states',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:166',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Look for loading indicators\n' +
    `    const loadingIndicators = page.locator('.loading, .spinner, [aria-busy="true"], .animate-spin');\n` +
    '    if ((await loadingIndicators.count()) > 0) {\n' +
    '      for (let i = 0; i < Math.min(await loadingIndicators.count(), 3); i++) {\n' +
    '        const loader = loadingIndicators.nth(i);\n' +
    '\n' +
    '        // Check loading indicator is visible\n' +
    '        await (0, _test.expect)(loader).toBeVisible();\n' +
    '\n' +
    '        // Check it has proper styling\n' +
    '        const styles = await loader.evaluate(el => {\n' +
    '          const computed = window.getComputedStyle(el);\n' +
    '          return {\n' +
    '            display: computed.display,\n' +
    '            visibility: computed.visibility\n' +
    '          };\n' +
    '        });\n' +
    "        (0, _test.expect)(styles.display).not.toBe('none');\n" +
    "        (0, _test.expect)(styles.visibility).not.toBe('hidden');\n" +
    '      }\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:47:46.359Z',
  test_scope: 'Assessment Flow Tests - should maintain consistent loading states',
  test_scopes: [ 'Assessment Flow Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should maintain consistent loading states'
}
2025-08-05 14:47:53 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="Assessment Flow Tests › should handle navigation consistently" classname="assessment-flow.spec.ts" time="0.059">
<failure message="assessment-flow.spec.ts:192:7 should handle navigation consistently" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › assessment-flow.spec.ts:192:7 › Assessment Flow Tests › should handle navigation consistently 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:47:57 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:47:57 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:47:57 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=37081:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:47:57 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=32ce8f04534b853080c1bb4f0e3f9bfe8409e362aff29bdbc79fdb6aa10d054b target=37081:0
2025-08-05 14:47:57 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:48:06 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:48:06 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:48:06 - [32minfo[39m: [PlaywrightDriverModule] testId: 2657358a77c132dcc4e7-6573535b8ca4ee8d9bea
2025-08-05 14:48:06 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'ce0cb8c6-bd4b-490c-abe8-ceac2c66e5f1',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'ce0cb8c6-bd4b-490c-abe8-ceac2c66e5f1',
  test_result: 'pending',
  automate_session_name: 'Assessment Flow Tests - should handle navigation consistently',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts',
  test_id: '2657358a77c132dcc4e7-6573535b8ca4ee8d9bea',
  test_name: 'should handle navigation consistently',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/assessment-flow.spec.ts:192',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Test navigation buttons/links\n' +
    `    const navButtons = page.locator('a, button, [role="link"]').filter({\n` +
    '      hasText: /back|next|previous|continue/i\n' +
    '    });\n' +
    '    for (let i = 0; i < Math.min(await navButtons.count(), 3); i++) {\n' +
    '      const navButton = navButtons.nth(i);\n' +
    '\n' +
    '      // Check navigation element is visible and clickable\n' +
    '      await (0, _test.expect)(navButton).toBeVisible();\n' +
    '      const styles = await navButton.evaluate(el => {\n' +
    '        const computed = window.getComputedStyle(el);\n' +
    '        return {\n' +
    '          cursor: computed.cursor,\n' +
    '          pointerEvents: computed.pointerEvents\n' +
    '        };\n' +
    '      });\n' +
    '\n' +
    '      // Should be clickable\n' +
    "      (0, _test.expect)(['pointer', 'default']).toContain(styles.cursor);\n" +
    "      (0, _test.expect)(styles.pointerEvents).not.toBe('none');\n" +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:47:57.524Z',
  test_scope: 'Assessment Flow Tests - should handle navigation consistently',
  test_scopes: [ 'Assessment Flow Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack assessment-flow.spec.ts Assessment Flow Tests should handle navigation consistently'
}
2025-08-05 14:48:06 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="browserstack-connection.spec.ts" timestamp="2025-08-05T18:43:37.374Z" hostname="-latest:Windows 11-browserstack" tests="2" failures="2" skipped="0" time="0.132" errors="0">
<testcase name="BrowserStack Connection Test › should connect to BrowserStack and load the homepage" classname="browserstack-connection.spec.ts" time="0.068">
<failure message="browserstack-connection.spec.ts:4:7 should connect to BrowserStack and load the homepage" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › browserstack-connection.spec.ts:4:7 › BrowserStack Connection Test › should connect to BrowserStack and load the homepage 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:47:58 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:47:58 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:47:58 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=37083:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:47:58 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=1d17b4934b33a636c0be6e0a3f210cf5312b037504365864ab95f9e862a78ed6 target=37083:0
2025-08-05 14:47:58 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:48:05 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:48:05 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:48:05 - [32minfo[39m: [PlaywrightDriverModule] testId: d09c4f4bbc136c469c4b-40f9a5223b263d5aa67c
2025-08-05 14:48:05 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'e803daba-a25b-4c8b-b9b4-3cfef9c1f17e',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'e803daba-a25b-4c8b-b9b4-3cfef9c1f17e',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Connection Test - should connect to BrowserStack and load the homepage',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-connection.spec.ts',
  test_id: 'd09c4f4bbc136c469c4b-40f9a5223b263d5aa67c',
  test_name: 'should connect to BrowserStack and load the homepage',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-connection.spec.ts:4',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    var _page$viewportSize, _page$viewportSize2;\n' +
    '    // Navigate to the homepage\n' +
    "    await page.goto('/');\n" +
    '\n' +
    '    // Wait for the page to load\n' +
    "    await page.waitForLoadState('networkidle');\n" +
    '\n' +
    '    // Check that the page loaded successfully\n' +
    '    const title = await page.title();\n' +
    '    (0, _test.expect)(title).toBeTruthy();\n' +
    '\n' +
    '    // Take a screenshot for verification\n' +
    '    await page.screenshot({\n' +
    "      path: 'browserstack-connection-test.png'\n" +
    '    });\n' +
    '\n' +
    '    // Check that the page has content\n' +
    "    const bodyText = await page.textContent('body');\n" +
    '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
    "    console.log('✅ BrowserStack connection successful!');\n" +
    '    console.log(`📄 Page title: ${title}`);\n' +
    '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:47:58.264Z',
  test_scope: 'BrowserStack Connection Test - should connect to BrowserStack and load the homepage',
  test_scopes: [ 'BrowserStack Connection Test' ],
  test_rerun_name: ' -latest:Windows 11-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should connect to BrowserStack and load the homepage'
}
2025-08-05 14:48:05 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="BrowserStack Connection Test › should display consistent branding colors" classname="browserstack-connection.spec.ts" time="0.064">
<failure message="browserstack-connection.spec.ts:27:7 should display consistent branding colors" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › browserstack-connection.spec.ts:27:7 › BrowserStack Connection Test › should display consistent branding colors 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:48:10 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:48:10 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:48:10 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=37112:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:48:10 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=9542429ee89ead47b33cfa082cf6ca75e99ba6184397373c172f4c9ac1673105 target=37112:0
2025-08-05 14:48:10 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:48:19 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:48:19 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:48:19 - [32minfo[39m: [PlaywrightDriverModule] testId: d09c4f4bbc136c469c4b-65c5159dc2c2150eea56
2025-08-05 14:48:19 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'cf7a10e6-c705-4969-9fed-ab4b46c80009',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'cf7a10e6-c705-4969-9fed-ab4b46c80009',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Connection Test - should display consistent branding colors',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-connection.spec.ts',
  test_id: 'd09c4f4bbc136c469c4b-65c5159dc2c2150eea56',
  test_name: 'should display consistent branding colors',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-connection.spec.ts:27',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    "    await page.goto('/');\n" +
    '\n' +
    '    // Check for any elements with Gutcheck brand colors\n' +
    `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
    '    if ((await gutcheckElements.count()) > 0) {\n' +
    '      console.log(`🎨 Found ${await gutcheckElements.count()} Gutcheck branded elements`);\n' +
    '\n' +
    '      // Check the first branded element\n' +
    '      const firstElement = gutcheckElements.first();\n' +
    '      const backgroundColor = await firstElement.evaluate(el => {\n' +
    '        return window.getComputedStyle(el).backgroundColor;\n' +
    '      });\n' +
    '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
    '    } else {\n' +
    "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:48:10.205Z',
  test_scope: 'BrowserStack Connection Test - should display consistent branding colors',
  test_scopes: [ 'BrowserStack Connection Test' ],
  test_rerun_name: ' -latest:Windows 11-browserstack browserstack-connection.spec.ts BrowserStack Connection Test should display consistent branding colors'
}
2025-08-05 14:48:19 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="browserstack-public.spec.ts" timestamp="2025-08-05T18:43:37.374Z" hostname="-latest:Windows 11-browserstack" tests="2" failures="2" skipped="0" time="0.112" errors="0">
<testcase name="BrowserStack Public URL Test › should connect to BrowserStack and load a public website" classname="browserstack-public.spec.ts" time="0.061">
<failure message="browserstack-public.spec.ts:4:7 should connect to BrowserStack and load a public website" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › browserstack-public.spec.ts:4:7 › BrowserStack Public URL Test › should connect to BrowserStack and load a public website 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:48:10 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:48:10 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:48:10 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=37113:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:48:10 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=78110ba1ae099adbf37a235dcdca95b914ea1b78131b817d8388abd84c0580ec target=37113:0
2025-08-05 14:48:10 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:48:21 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:48:21 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:48:21 - [32minfo[39m: [PlaywrightDriverModule] testId: ebf48cb40e267d4d2a11-fa41d44b608f12120ed2
2025-08-05 14:48:21 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '30648aa1-a1bc-49ed-bdc7-48e60759b3cb',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '30648aa1-a1bc-49ed-bdc7-48e60759b3cb',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Public URL Test - should connect to BrowserStack and load a public website',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-public.spec.ts',
  test_id: 'ebf48cb40e267d4d2a11-fa41d44b608f12120ed2',
  test_name: 'should connect to BrowserStack and load a public website',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-public.spec.ts:4',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    var _page$viewportSize, _page$viewportSize2;\n' +
    '    // Navigate to a public website instead of localhost\n' +
    "    await page.goto('https://example.com');\n" +
    '\n' +
    '    // Wait for the page to load\n' +
    "    await page.waitForLoadState('networkidle');\n" +
    '\n' +
    '    // Check that the page loaded successfully\n' +
    '    const title = await page.title();\n' +
    '    (0, _test.expect)(title).toBeTruthy();\n' +
    '\n' +
    '    // Take a screenshot for verification\n' +
    '    await page.screenshot({\n' +
    "      path: 'browserstack-public-test.png'\n" +
    '    });\n' +
    '\n' +
    '    // Check that the page has content\n' +
    "    const bodyText = await page.textContent('body');\n" +
    '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
    "    console.log('✅ BrowserStack connection successful!');\n" +
    '    console.log(`📄 Page title: ${title}`);\n' +
    '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
    '    console.log(`🌐 URL: ${page.url()}`);\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:48:10.447Z',
  test_scope: 'BrowserStack Public URL Test - should connect to BrowserStack and load a public website',
  test_scopes: [ 'BrowserStack Public URL Test' ],
  test_rerun_name: ' -latest:Windows 11-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should connect to BrowserStack and load a public website'
}
2025-08-05 14:48:21 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="BrowserStack Public URL Test › should verify browser capabilities" classname="browserstack-public.spec.ts" time="0.051">
<failure message="browserstack-public.spec.ts:28:7 should verify browser capabilities" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › browserstack-public.spec.ts:28:7 › BrowserStack Public URL Test › should verify browser capabilities 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:48:10 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:48:10 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:48:10 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=37114:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:48:10 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=56395871abe948ce53b4bb591aba29924edecf20ebc8e3e1e428f1ab892a935a target=37114:0
2025-08-05 14:48:10 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:48:19 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:48:19 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:48:19 - [32minfo[39m: [PlaywrightDriverModule] testId: ebf48cb40e267d4d2a11-f8afe113816ed58e8c33
2025-08-05 14:48:19 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'b1784227-b39c-4e45-b8e9-f287f0864db8',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'b1784227-b39c-4e45-b8e9-f287f0864db8',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Public URL Test - should verify browser capabilities',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-public.spec.ts',
  test_id: 'ebf48cb40e267d4d2a11-f8afe113816ed58e8c33',
  test_name: 'should verify browser capabilities',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-public.spec.ts:28',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    "    await page.goto('https://example.com');\n" +
    '\n' +
    '    // Get browser information\n' +
    '    const userAgent = await page.evaluate(() => navigator.userAgent);\n' +
    '    const viewport = page.viewportSize();\n' +
    '    console.log(`🔍 User Agent: ${userAgent}`);\n' +
    '    console.log(`📐 Viewport: ${viewport === null || viewport === void 0 ? void 0 : viewport.width}x${viewport === null || viewport === void 0 ? void 0 : viewport.height}`);\n' +
    '\n' +
    "    // Verify we're running in a real browser environment\n" +
    "    (0, _test.expect)(userAgent).toContain('Chrome');\n" +
    '    (0, _test.expect)(viewport).toBeTruthy();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:48:10.447Z',
  test_scope: 'BrowserStack Public URL Test - should verify browser capabilities',
  test_scopes: [ 'BrowserStack Public URL Test' ],
  test_rerun_name: ' -latest:Windows 11-browserstack browserstack-public.spec.ts BrowserStack Public URL Test should verify browser capabilities'
}
2025-08-05 14:48:19 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="browserstack-simple.spec.ts" timestamp="2025-08-05T18:43:37.374Z" hostname="-latest:Windows 11-browserstack" tests="3" failures="3" skipped="0" time="0.164" errors="0">
<testcase name="BrowserStack Simple Tests › should load homepage successfully" classname="browserstack-simple.spec.ts" time="0.054">
<failure message="browserstack-simple.spec.ts:4:7 should load homepage successfully" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › browserstack-simple.spec.ts:4:7 › BrowserStack Simple Tests › should load homepage successfully 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:48:24 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:48:24 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:48:24 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=37143:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:48:24 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=a7fef7a7cde68b57348e07896343d2024c36360008afc32e4c18f2aa8da017c2 target=37143:0
2025-08-05 14:48:24 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:48:42 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:48:42 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:48:42 - [32minfo[39m: [PlaywrightDriverModule] testId: 97c431d5d3d14e7f8260-b2374f3c60716f80f5cc
2025-08-05 14:48:42 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '33429120-3137-4ade-a233-29deaf496636',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '33429120-3137-4ade-a233-29deaf496636',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Simple Tests - should load homepage successfully',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-simple.spec.ts',
  test_id: '97c431d5d3d14e7f8260-b2374f3c60716f80f5cc',
  test_name: 'should load homepage successfully',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-simple.spec.ts:4',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    var _page$viewportSize, _page$viewportSize2;\n' +
    "    await page.goto('/');\n" +
    "    await page.waitForLoadState('networkidle');\n" +
    '\n' +
    '    // Basic page load verification\n' +
    '    const title = await page.title();\n' +
    '    (0, _test.expect)(title).toBeTruthy();\n' +
    '\n' +
    '    // Check if page has content\n' +
    "    const bodyText = await page.textContent('body');\n" +
    '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
    '\n' +
    '    // Take a screenshot for visual verification\n' +
    '    await page.screenshot({\n' +
    "      path: 'browserstack-homepage.png'\n" +
    '    });\n' +
    '    console.log(`✅ Homepage loaded successfully`);\n' +
    '    console.log(`📄 Page title: ${title}`);\n' +
    '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:48:24.183Z',
  test_scope: 'BrowserStack Simple Tests - should load homepage successfully',
  test_scopes: [ 'BrowserStack Simple Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should load homepage successfully'
}
2025-08-05 14:48:42 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="BrowserStack Simple Tests › should navigate to assessment page" classname="browserstack-simple.spec.ts" time="0.069">
<failure message="browserstack-simple.spec.ts:24:7 should navigate to assessment page" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › browserstack-simple.spec.ts:24:7 › BrowserStack Simple Tests › should navigate to assessment page 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:48:24 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:48:24 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:48:24 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=37144:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:48:24 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=e3d88755698bbdbe1ba8709298bd12e48be53fe7fb38e896ecb258e741ec0968 target=37144:0
2025-08-05 14:48:24 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:48:33 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:48:33 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:48:33 - [32minfo[39m: [PlaywrightDriverModule] testId: 97c431d5d3d14e7f8260-67a3103197faca88a36d
2025-08-05 14:48:33 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'b3598b6a-4624-4956-8b52-cfeab81264e0',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'b3598b6a-4624-4956-8b52-cfeab81264e0',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Simple Tests - should navigate to assessment page',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-simple.spec.ts',
  test_id: '97c431d5d3d14e7f8260-67a3103197faca88a36d',
  test_name: 'should navigate to assessment page',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-simple.spec.ts:24',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    "    await page.goto('/assessment');\n" +
    "    await page.waitForLoadState('networkidle');\n" +
    '\n' +
    '    // Check if assessment page loads\n' +
    '    const title = await page.title();\n' +
    '    (0, _test.expect)(title).toBeTruthy();\n' +
    '\n' +
    '    // Look for assessment-specific content\n' +
    "    const assessmentContent = await page.textContent('body');\n" +
    '    (0, _test.expect)(assessmentContent).toBeTruthy();\n' +
    '    await page.screenshot({\n' +
    "      path: 'browserstack-assessment.png'\n" +
    '    });\n' +
    '    console.log(`✅ Assessment page loaded successfully`);\n' +
    '    console.log(`📄 Page title: ${title}`);\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:48:24.170Z',
  test_scope: 'BrowserStack Simple Tests - should navigate to assessment page',
  test_scopes: [ 'BrowserStack Simple Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should navigate to assessment page'
}
2025-08-05 14:48:33 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="BrowserStack Simple Tests › should display consistent branding" classname="browserstack-simple.spec.ts" time="0.041">
<failure message="browserstack-simple.spec.ts:42:7 should display consistent branding" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › browserstack-simple.spec.ts:42:7 › BrowserStack Simple Tests › should display consistent branding 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:48:25 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:48:25 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:48:25 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=37154:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:48:25 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=7ab70c008c2c382b578ecb7979a4660a4b3cfdcae6050ab12ea3e0b524507d9c target=37154:0
2025-08-05 14:48:25 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:48:38 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:48:38 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:48:38 - [32minfo[39m: [PlaywrightDriverModule] testId: 97c431d5d3d14e7f8260-e4c0075dfd15c9466164
2025-08-05 14:48:38 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'c8f7e621-d21a-427d-893d-1dfe46a78da3',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'c8f7e621-d21a-427d-893d-1dfe46a78da3',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Simple Tests - should display consistent branding',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-simple.spec.ts',
  test_id: '97c431d5d3d14e7f8260-e4c0075dfd15c9466164',
  test_name: 'should display consistent branding',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-simple.spec.ts:42',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    "    await page.goto('/');\n" +
    '\n' +
    '    // Check for Gutcheck branding elements\n' +
    `    const gutcheckElements = page.locator('[class*="gutcheck"], [class*="bg-gutcheck"]');\n` +
    '    const elementCount = await gutcheckElements.count();\n' +
    '    if (elementCount > 0) {\n' +
    '      console.log(`🎨 Found ${elementCount} Gutcheck branded elements`);\n' +
    '\n' +
    '      // Check the first branded element\n' +
    '      const firstElement = gutcheckElements.first();\n' +
    '      const backgroundColor = await firstElement.evaluate(el => {\n' +
    '        return window.getComputedStyle(el).backgroundColor;\n' +
    '      });\n' +
    '      console.log(`🎨 First branded element background: ${backgroundColor}`);\n' +
    '      (0, _test.expect)(backgroundColor).toBeTruthy();\n' +
    '    } else {\n' +
    "      console.log('ℹ️ No Gutcheck branded elements found on this page');\n" +
    '    }\n' +
    '    await page.screenshot({\n' +
    "      path: 'browserstack-branding.png'\n" +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:48:25.297Z',
  test_scope: 'BrowserStack Simple Tests - should display consistent branding',
  test_scopes: [ 'BrowserStack Simple Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack browserstack-simple.spec.ts BrowserStack Simple Tests should display consistent branding'
}
2025-08-05 14:48:38 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="browserstack-traditional.spec.ts" timestamp="2025-08-05T18:43:37.374Z" hostname="-latest:Windows 11-browserstack" tests="3" failures="1" skipped="2" time="0.107" errors="0">
<testcase name="BrowserStack Traditional Tests › should load homepage successfully" classname="browserstack-traditional.spec.ts" time="0.043">
<failure message="browserstack-traditional.spec.ts:4:7 should load homepage successfully" type="FAILURE">
<![CDATA[  [-latest:Windows 11-browserstack] › browserstack-traditional.spec.ts:4:7 › BrowserStack Traditional Tests › should load homepage successfully 

    Error: _bidiChromium: expected channel BrowserType
        at Connection._0x43a61e (/Users/coreylipsey/gutcheck-score-mvp/node_modules/browserstack-node-sdk/src/bin/playwright/sessionDetails.js:1:12833)
]]>
</failure>
<system-out>
<![CDATA[2025-08-05 14:48:37 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: e4d07e95-5dda-4e81-9882-c8fe1514f00a
2025-08-05 14:48:37 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-05 14:48:37 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=37165:0, state=AutomationFrameworkState.CREATE
2025-08-05 14:48:37 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=b6e7c2e0f02cd6b6ab8e9115b26919d97f7b82eeb3504266f7d586516226a787 target=37165:0
2025-08-05 14:48:37 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"coreylipsey_CicmlG","browserstack.key":"qRbyY1vhLqJDjNwJqN7E","build":"bstack-demo","project":"BrowserStack Sample","browserstack.debug":true,"browserstack.console":"info","browserstack.buildIdentifier":"#1","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Coreys-MBP","browserstack.browserstackSDK":"Playwright-nodeagent/1.40.6","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"edzixf7rngb75xnrntdzn0dvsfpqiandmiypr12j","browserstack.local":true,"browserstack.localIdentifier":"Aug_5_1443_Coreys-MBP_4myv"} 
2025-08-05 14:48:45 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:48:45 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-05 14:48:45 - [32minfo[39m: [PlaywrightDriverModule] testId: 5341f8408f38eeb41a40-9aaefb820fcf614611e2
2025-08-05 14:48:45 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'd94ea318-9159-4edc-982a-fd2a781709be',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'd94ea318-9159-4edc-982a-fd2a781709be',
  test_result: 'pending',
  automate_session_name: 'BrowserStack Traditional Tests - should load homepage successfully',
  test_file_path: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-traditional.spec.ts',
  test_id: '5341f8408f38eeb41a40-9aaefb820fcf614611e2',
  test_name: 'should load homepage successfully',
  test_location: '/Users/coreylipsey/gutcheck-score-mvp/tests/browserstack-traditional.spec.ts:4',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    var _page$viewportSize, _page$viewportSize2;\n' +
    "    await page.goto('/');\n" +
    "    await page.waitForLoadState('networkidle');\n" +
    '\n' +
    '    // Basic page load verification\n' +
    '    const title = await page.title();\n' +
    '    (0, _test.expect)(title).toBeTruthy();\n' +
    '\n' +
    '    // Check if page has content\n' +
    "    const bodyText = await page.textContent('body');\n" +
    '    (0, _test.expect)(bodyText).toBeTruthy();\n' +
    '\n' +
    '    // Take a screenshot for visual verification\n' +
    '    await page.screenshot({\n' +
    "      path: 'browserstack-homepage.png'\n" +
    '    });\n' +
    '    console.log(`✅ Homepage loaded successfully`);\n' +
    '    console.log(`📄 Page title: ${title}`);\n' +
    '    console.log(`📱 Viewport: ${(_page$viewportSize = page.viewportSize()) === null || _page$viewportSize === void 0 ? void 0 : _page$viewportSize.width}x${(_page$viewportSize2 = page.viewportSize()) === null || _page$viewportSize2 === void 0 ? void 0 : _page$viewportSize2.height}`);\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-05T18:48:37.631Z',
  test_scope: 'BrowserStack Traditional Tests - should load homepage successfully',
  test_scopes: [ 'BrowserStack Traditional Tests' ],
  test_rerun_name: ' -latest:Windows 11-browserstack browserstack-traditional.spec.ts BrowserStack Traditional Tests should load homepage successfully'
}
2025-08-05 14:48:45 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
]]>
</system-out>
</testcase>
<testcase name="BrowserStack Traditional Tests › should navigate to assessment page" classname="browserstack-traditional.spec.ts" time="0.064">
<skipped>
</skipped>
</testcase>
<testcase name="BrowserStack Traditional Tests › should display consistent branding" classname="browserstack-traditional.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="visual-consistency.spec.ts" timestamp="2025-08-05T18:43:37.374Z" hostname="-latest:Windows 11-browserstack" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="Visual Consistency Tests › should display consistent colors across browsers" classname="visual-consistency.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Consistency Tests › should maintain consistent typography" classname="visual-consistency.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Consistency Tests › should have consistent button styling" classname="visual-consistency.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Consistency Tests › should maintain layout consistency on different screen sizes" classname="visual-consistency.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Consistency Tests › should handle form elements consistently" classname="visual-consistency.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Consistency Tests › should maintain consistent spacing and alignment" classname="visual-consistency.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Consistency Tests › should handle dark mode consistently" classname="visual-consistency.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Consistency Tests › should maintain accessibility standards" classname="visual-consistency.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Consistency Tests › should handle images and icons consistently" classname="visual-consistency.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
</testsuites>